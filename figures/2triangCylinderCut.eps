%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 2triangCylinderCut.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Vincent Pilaud
%%CreationDate: 29/10/12
%%BoundingBox: 0 0 584 288
%%HiResBoundingBox: 0 0 583.9956 287.0005
%%CropBox: 0 0 583.9956 287.0005
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 14290 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD1FFFA8FD3FFFA8FD38FFA8FFFD06A87DFD04A8FFA8FFA8FD2FFF%A8FFFD0BA8FFA8FFA8FD2CFFA8FFA8A87DA87DA87DA87DA87DA87DA87DFD%04A8FD2BFFA8FFFD06A87DA8A8A87DFD08A8FFA8FD26FFFD04A87DA87D7D%597D537D5259527D52FD067DA87DA8A8FD25FFA8FFFD04A87DA87DA8FD07%7D7E7D7D7DA87DA87DA8A8FFA8FD22FFFD04A8FD047D527D527C7CA069A0%7C7C527D52FD047DA87DA8A8FD23FFA8FFFD04A87DA87D7E7D7652A87D7D%7D766F7D7D7E7DA87DFD04A8FFA8FD1EFFA8FFA8A8FD047D5252527CA0C9%C8C293B599CDC8C8A07C5252527D527D7DA87DA8A8FD1FFFFD04A87DA87D%7D527D76C26F52597D595299B599A67C7D527D7DA87DA87DA8A8FFA8FD1A%FFA8A87DA87D7D525353A1A0FD05C97DBCBCBD77C9FD04CEA0A15352527D%7DA87DA8A8FD1DFFFD04A87D7D597D7DC9C8C2A17D597D52599AC3BC9BA0%CEC8C97D7D527D7DA87DA8A8FD1AFFA8A8FD047D527D7DC9C8C9C3C9C9C2%60A1BCC3BC9B77C8CDCECECEC8C9A27D27FD047DA8A8FD19FFA8FFA8A87D%A87D7D59A8C3C9C2C28483527D52527CC3BCC394789ACECDCEC9A759FD04%7DFD04A8FD16FFA8A87D7D7D5252AFCFFD06C9C2608BBCC3BCC3BC7F78C8%FD04CECDCECFA952527D7D7DA8A8FD19FFA8A87DA87D7DA8CFC9C9C9C284%8B7C7D52527DC9BCC3BCC3777F9ACECECEC8CFA87D52A87DA8A8FD16FFA8%A87D7D52527DFFCAC8C2FD04C9C384679ABCBCC2BCC2945B71C8FD04CECD%C8CAFF7D52527D7DA8A8FD15FFFD04A87D7D5284CFC9C2C9C9C26067A776%525252CFBCC3BCC2BCBC55559ACECECEC8CECAA8527D7DA87DA8A8FD12FF%A8A87D7D527DA8FFCAFD06C9C2A0A89ABCBCC3BCC2BCBC949B94C8FD05CE%CDCAFFA852527D7DA8A8FD15FFA8A87D7D52A9CFFD04C9C384678ACA5252%F8C2C2C2BCC3BCC2BC9B7E78C2CECECECDCEFFFF527D7DA8A8FFA8FD10FF%A8A87D7D5252A8FFCAC8A7C9C2C2BBBB93A076BCBCC3BCC3BCC3BCB67094%8DC1C1C8C8CECEC8CAFFA852527D7DA8A8FD11FFFD04A87D7D52FFCFC8A0%C9C9C27D6767AE7D5227A8C2BCBCBDBCC3BCC393947094C1CECDCECDC9CF%FF527D7DA87DA8A8FD0EFFA8A87D7D527DFFFFCFC9C9C9BCBCBBBC94A19A%A1BCC3BCC3BCC3BCC3B695949B93C8C1C8C8CECECECFFFFF7D527D7DA8A8%FD11FFA8A8A87D52FFFFFD05C9A08B678BA87D527DFFC9BCC3BCC3BCC3C3%BC949B94B6C1C8C8CECECEFFFF7D7D7DA8A8FD0EFFA8A87D7D527DFFFFFF%C9C2BCB5BCBBBB93A176A194BCBCC3BCC3BCC3BCBC9495709593C8C1C8C1%C8C8C9FFFFFF7D527D7DA8A8FD0FFFA8A87D7D52FFFFC9C2C9C9C9C28467%6766CF5252A8FFBCC2BCC3BCC3BCC3BC94709570BCC7C8C1C8C8C9FFFF7D%7D7DFD04A8FD0BFFA87DA8527DFFFFFFC9BBBCBBBCBBBCB59B76A19ABCBC%C3BCC3BCC3BCC3BCB694957094BBC8C1C8C8C8C1C9FFFFFF52527D7DA8A8%FD0DFFA8A8A87D52FFFFCFC2C9C9C9C2A8678B67AF7C2752FFC9C3BCC2BD%C3BCC3BCC3949B949B94C2C8C8C1C8C8CFFFFF7D7D7DA8A8FD0AFFA8A87D%7D5252A8FFCAC3BBBCB5BCBBBCB59A76A1769A94C3BCC3BCC3BCC3BCC393%9470947094C1C8C1C8C1C8C1C9CFFFA852527D7DA8A8FD0BFFA8A87D7D52%A8FFFFC2C9A0C9C9C260676767837C2752A8C3BCBDBCC3BCC3BCC3BC9470%95709593C8C1C8C1C8C1CFFFFF527D7DA8A8FD0AFFA8A87D52A8FFCAC3BB%BCBBBCBBBCBBBCA1A19AA19ABCBCC3C3C3BCC3C3C3C2BC949B949B94BCFD%06C8C1C3CAFF7D527DA8A8FD0DFFA8A87DA8FFFFFD06C97D67678A84AEA1%527DFFC2C3BCC3C2C3FD04BC939494959495BBFD05C8C1FFFFA852FD04A8%FD08FFA8A87D5252FFCAC2BCBCBBBCBBBCBBBB9AA19A9A769A94BC94BCBC%C3BCBCB6BC93FD04949594C1C7C8C1C8C1C8BCC2CAFF52527DA8A8FD09FF%A8FFA8A87D7DFFFFCAFD05C9A0676084606783A1277DC9C2BCC3BCBC9394%70959495779B949470BCC1C8C1C8C7C2BBCFFF7D52A87DA8A8FD06FFA8A8%7D7D52FFCAC2BCC2BBBCBBBCBBBCB59A7D8460677D9A9AA19ABCB5B69495%9494717F789C7094B5FD05C8C7C2BCC2CAFF527D7DA8A8FD09FFA8A87D7D%A8FFFFCFC2C9C9C9C2A7848A678B67AEA8527DCABCC3BCBC779B949B9495%957F5B7F789B8DC2C8C8C1C8C8C2BCCFFF7D7DA8A8FD06FFA8A87D7D52A8%CAC2BCC2BBBCB5BCBBBB93A160FD0467A176A1769A705470947095947755%7F555B5495BBC2C1C8C1C8C1C2BCC2CA7D527D7DA8A8FD07FFA8A87D7D7D%FFFFFFC2C9A0C9C9C27D8BFD0467A7A8277DC3BCBCBC775B76947094709B%557F547F557893C1C1C8C1C8C1BDBCFF7D7D7DA8A8FD06FFA8A87D7DCFC3%BCC3BCBCBBBCB5BC9AA1678B678B678B7DA1A1A07037373770BD9494717F%5B7F557F5B9B9FC2C1C8C8C8C2C3BCC9CF537DA8A8FD09FFA8A87DFFFFFF%CFFD05C9A08B678B678B66CFA85252C3BCBC777F557F949594B6777F557F%5B7F5BA29AC2C1C8C8C8BCC3C2FF53FD04A8FD04FFA8A87D527DC9BCC3BC%BCBBBCB5BC83A77DFD0667A176A17031313731317095949B557F557F547F%77A67CC2C1C8C1C2BCC3BCC97D527DA8A8FD07FFA8A87D7DFFFFFFCFC2C9%C2C9A083FD05678A83CA2E52C2BC947F555B559B9495949B557F547F557F%54A17CBCC1C8C1C2BCBDC38452A87DA8A8FFFFFFA87D7D52C9BCC3BDC2BB%BCB5A183ADA08B678B678B678B7DA199783737315B37789394717F557F55%7F557FA0A783A0BBC8C1C3BDC3BCCA527D7DA8FD06FFA8A87D7DA8FFFFFF%C9C9C8A783A78367678B6767848BCA5252C3BC78557F7EA2A1BC9494787F%557F557F557F9AA7A7C2BBC8C2C3BCC3A77D7DA8A8FD04FFA87D527DC2BD%BCC3BBB593A783A77CA1FD0767A1BB9A547E7DA17D84609A939B555B547F%547F54A17CA77CA199C1C2C3BCBCC27D527D7DFD05FFA8A87D7D52FD04FF%C9A0A783A77C84FD0467668A60CA525299BD54A2A8FFFFFFC2BC9379557F%547F547F55777CA782A099C2BCBDBCC37C7D7DA8A8FFFFA8A87D7D7CC3BC%C3BCBC9AADA7A783A78367678B6767678AA1BC787F77A17DA1838B84BC9B%7E557F5B7F557F77FD05A799C2C3C3BCC376597DA8A8FD05FFA8A87DA8FD%04FFC2A783A783A7678B678B678B848BA8762E9A9BA17DA8A8FFFFCFBCBD%7D7F5B7F557F5B7F77A7A7A783A7BBC3BCC3C2A07DA8A8FD04FF7D7D52C2%BCC3BCBCA0A783A783A77C84678460846083608B947751FD055251839379%547754787878549BA0A77CA782A799BCBCC3BCA0527D7DA8FD04FFA8A87D%7DA8FFFFFFA7A683A783A77CFD06678A678A52524B6F527D527D527DA1C2%7879777F7878547F55777CA77CA782A193BCBCC39A7D7DA8A8FFFFA8A87D%7CBCC3BCBC7DAD83A77CA1A0C29AA1A0A7A0A1C2C97693517D7DA87DA87D%7D529394C9C2A0A0A7A0A19AC2A0A0A0A7A7A777BCC2C3BC7C7DA8A8FD05%FFA8A852FFFFFFA8A8A7A783A7A1A07DA883847DA88367677D525252A87D%A87DA87D596E9BC3C8A0A1A0A09AA19AC2A0A7A7A7A6A294C3BCC276A87D%A8FFA8A87D7D75C2BCBC608A7CA09AC2C2C9C2A783A783A7A0C29A93277D%7DA87DA8A8A87D7D4B99A0C8A0A77CA782A0C8CEC8C299A0A07E71BCBCC2%757D7DA8A8FFFFFFA8A87D7DA8FFA76760A77CA09AC2C2A07CA7A0A77CC2%C2A14B527DA87DA8A8A87DA87D526FA0A0A082A77CA782A0C8C9A0C2A0A0%7D7994C2BCA07DA87DFFFFA8A87DA0BCBC8467A0C2C2FD05C9A0ADA7A79A%A19BA1517D7DA8A8FFA8FFA8A8A88452837D9A9AA7A7A7A0FD05CEC8C29A%7F78BCBCA0597DA8FD05FFA87D7DFFCA8B67A7C2C3C3C9C9C9A0AEA7A783%A7C2C39A757DA8A8FFA8FFA8FFA8A87D7D7C7D76A0A6A7A6A7A0FD05CEC2%A15579B6C39A7D7DFD04A87D7D9ABC7D84A0C2C8FD05C9C2A083A79A787D%C475527DA8A8FFA8FFA8FFA8A87D7D5183522F75A783A0C8CECECECDCECE%C8A07871BC997D7DA8A8FFFFFFA8A87DA8CF8A60A1C2FD06C9C27CA783A0%76A1A17D52A87DA8A8FFA8FFA8FFA8A8537C7D59289AA0A77CC8CECECDCE%CECEC2C27778B6C27DA87DFFFFA8847CBC9AA1C2FD09C9A0A79A7E5AA1A0%767DA8A8FFFFFFA8FFFFFFA8A87D7C7C592F2F75A7C2FD07CECDCEC8A194%BC527DA8FD04FFA87D7E7DA8A0C3FD07C9CEC2A783A0777E7DC97D7D7DA8%A8FD05FFA8FFA87E76A758352F9AA6A0C8FD09CEA19599A77DFD04A87D52%8CC3C9C9A0C9C9C9A0FD04C9C2947E597E77C9527D7DA8A8FFA8FFA8FFA8%A87D7D52A72E2F2F2F6FC9CECECDCECECEC8CECECECDC88C527DA8A8FFFF%FFA8A85275C2C9C9C9C2C9A0C9C9C9A0C99A9A537E5A7DA77D7DA8A8FFA8%FFFFFFA8FFA8A87D7DA0532F2F2E9AC1CECDCECECECDCEC8CECECEC29352%A87DA8FFA8A85293C2C9C9C9C8FD06C9CFC29A5A7E7E7DA77D7DA8A8FD07%FFA8A87D7DA1592F352F9AC8FD07CEC8CECECEC29352A8A8FD04FFA8A87D%93C2C9CEFD09C9BC70857E7E7DCF777D7DA8A8FD05FFA8FFA8A87DCA5235%2F366FC8FD0BCEC9927DFD05A87D7D75BC9AC2FD09C9BC9A9A537E7DA751%7D7DA8A8FFA8FFA8FFA8A87D7D52A252352F9A9FC8CECECDCECECEC8CECE%C89A9A767D7DA8A8FFFFFFA8A87DA094BCC2C9C8FD07C99A9A767E598484%7C527D7DA8A8FFA8FFA8FFA8A87D7C77590D2F4CA6A0CECDCECECECDCEC8%CEC8A06F9A7DA8A8A8FFA8A87CA076BD9BC2C2FD07C99AA19A9A77848B7C%52A8A8FFA8FFFFFFA8FFA8A8527D7F5928A0A6AC9FFD07CEC8C87C7676A0%527D7DFFFFFFA8FFA8A17CA19AC3BCC8FD06C9BC9B9BBD947E84677C7D7D%A8A8FFA8FFA8FFA8A87D7D767F535376A682C8C9FD06CEC8C27D76A17C7D%7DFD04A87D7D75A176A19CBC99C3FD04C9C29A76A19A9A768B60527DFD04%A8FFFD04A87D765479759F81AC82A0C8CECECEC8C99FA0597D76A1757D7D%A8A8FFFFFFA8A87D7C7C9A9BA29ABCC2FD04C9BC76A19B9B93A16066527D%7DA87DFD05A87D7D5278547675A682A69FFD05CEC8C27559589A7C7C7DA8%7DFFFFA8A87D7C7CA79AC4A1A19ABCC2C9C9C99AA19BA19BC3C2A875767D%A8A8FFA8FFA8A87D7694C4C2C888ADA6AC9FCECECEC2C8A0A6837D9AA77C%7C7DA8A8FD05FFA8A87CA17D9A9BCA9ABD9AC3C3C99AA19BA19BA19AC9A7%A0517D7DFD05A87D7D519AA1C9A5ADA6AC82A6C8CEC8C9A0A6A5837D9A7D%A17C847DA8FFFFA87D7D52A07CA19A9B9AA19A9B94BC9A9A949B9A9A9AC2%BC9A687C7DA87DA87DA87D7C689AA0C89FA69FA69F9F9FC89FA682AC8276%75A17DA0527D7DA8A8FFFFFFA8A87D7D76A17D9A9AA19B9B9A9A9ABC94FD%049ABCBCBC949352FD077D526F75C8C2A07BA69FA099C29FA07BA682A676%9A7C7D767D7DA8A8FFFFA8A87D7DA0A17DA79ABC9BA19BA19B9B9BA29BC4%9BA29AA29B9A7C7C527D527D52769ABC597D7C837D7D7C8376A682ACA6AC%82C29AA17DA17C7D7DA8A8FD05FFA8A87DA07CA17D9A94A19BA19BA19AA2%9BC49BA29BC3A1A2937C7676527D537D76A19A7D59A1597D7C7D59A09FAC%A6AC82AC9F9A7DA17DA076A8A8FD04FFA87D527C7C7D7CA1999A76A19A9B%9A9BA2A27DA2A2A2A09A767D597C7CA176A1A19B76A07C5F595F595F597C%A5A681AC829F99A17C7D7C7C527D7DA8FD04FFA8A87D7D76A17CA17C9993%9B9B9B769A9BA27DA2A2A277A19A9A52837C7D7DA19AA29B9A7682595F59%5F595F76A682A682A69FC27C7D7CA1767D7DA8A8FFFFFFA87D7D7CC97DA1%7DA099BC9BA19BA19AFD07A29AA099837CA7A0C3A1A19AA0768459845983%5983A0ACA6ADA6C29FA77DA17CC97D7D7DA8FD06FFA8A87D7DA0A17DA1A0%A0939B9BA19AFD08A2BD9AA07D837CA7A0A1A1BC76A059845983598459A0%A6ACA6A69FC8A0A17DA1A07D7DA8A8FD04FFA8A87D7DA1A07CA17CA0759A%94A177BC9BA2A1FD04A29B769A4B595253525951512D7C59835983595F58%A082A69FC1A5A67CA17DA0A1537D7DA8FD07FFA8A859A77CA17DA075A093%9A9B9B9AA2A1A2A2A2A1A29A766F7652522E5952764B5852835983598359%7D9FAC82A699A6A5A17D7D7CA752A87DA8FD05FFA8A852A8C9A17DA1A0A0%759A949B9AC3FD06A27676769A52595259527634587684598359835F7DA6%A69FC2A6CDA0A17DA1C97D527DA8FD08FFA87D7D7DC97CA17DA075A0999A%9ABDFD07A29B76766F59535952596F582E7C5983598359847CA6A6A09FC8%A6C87CA17CC97D7D7DA8A8FD04FFA8A87D7D52CFA07D7CA0757C759A939A%94A2A2A277A2A19A4B7670702E59526F2D582D765983595F595F759F99A6%A6A6A5A07D7DA0FF527D7DA8A8FD07FFA8A87D7DA8A176A176A0757C7599%939BA2A277A2A1A2707676766F532E536F522E525183595F598359A09FC1%9FA6A5A6A07D76A0A87D7DA8A8FD06FFA8A87D7D7EFFA0A1A0A076A07CA0%75BC9AA2A2A9A2A29A767677769A52765259585876845F84598376C19FCD%A6C8A6C8A0A1A0FF7D7D7DA8A8FD09FFA8A87DA8CFA17DA199A076A076A0%939B9BC4A2A2A29B7677769A6F766F583458527C5F835F847D9A99C8A6C8%A6CDA6A17DA1CFA852A8A8FD08FFA8A87D7DAFCF76A1997C75A0757C7593%6F9A9AA2A29B6F7670766F9A75522D582D76597D76764B99A6A6A5A6A6A6%9F7DA0CFA8527D7D7DFD0AFFA87DA852AFCAA07CA075A0757C759A6F7694%9B9BA294767676709A937651582E527683597C75766FC8A5A6A6A6A5A67C%A0CAFF527D7DA8A8FD08FFA8A8527DFFCF7CA199A075A076A0999A767670%9A939A769A9AA17DA19A9A769A6F7651582E529FCDA6A6A6C8A6A0A0CFFF%7D527D7DA8FD0AFFA8A87DA87DFFCAA1A0A075A076A0759A7676709A769A%939A9A9A7CA7A1A076A0769A5176525851C2A6A6A6C8A6C87CA1CAFF7D7D%7DA8A8FD08FFA8A87D7D52A8FFCFA0A0757C75A075A06F7676765276767D%7CA17C7D7CA17DA176522E582E5899A6A5A6A5A6A5A0A0CFFFA8527D7DA8%A8FD0BFFA8A87D7D7DFFCAA1757675A0757C759A527652766F9A7CA17C7D%7CA17C7D7CA051342D582E99A5A6A5A6A5A69FA0A8FF847D7DA8A8FD0BFF%A87D7D52FFFFFFC2A076A076A0769A6F777677769A7DA17DA17DA17DA17D%A052582E5975C8A6C8A6C8A6C8C3FFFFFF527D7DA8A8FD0DFFA8A87D7DA8%FFFFC999A076A076A0999A767776769AA77DA17DA17DA17DA79A582E5834%769FCDA6C8A6CD9FC9CFFFA87D7DA8A8FD0CFFA8A87D7D52FFFFFFC29F75%A0757C7599707676766FA17CA17CA17CA17CA175582E3451C2A6A6A5A6A5%C7C8FFFFFF527D7DA8A8FD0FFFA8A87D52A8FFFFC999A0757C75A093FD04%769A7CA17CA17CA17CA17C762E582E5299A6A5A6A6A69FC9FFFFA87D7DA8%7DA8FD0DFFA8A87D7D7DFFFFFFC8C299A076A0759A7676769AA0A17CA17D%A17CA7A0762E58529FA6C8A6A6A6CDC9FFFFFF527D7DA8A8FD11FFA8A87D%7DFFFFFFC9A0A075A076A09376767770A17DA17DA17CA17DA151582E5875%C8A6A6A5C8C8C9FFFFFF7D7DFD04A8FD0EFFA8A87D7D7DFFFFCFC2C9A0A0%757C759452766F9A7D7D7CA17C7D7C9A2D582D759FA69FC8A6CEC8FFFFFF%52527D7D7DFD11FFA8A87DA87D7DA8FFCAC9C2C899A075996F765276757D%7CA17C7D7CA176522E5875C8A5A69FC8C8CECAFFA87D7DA87DA8A8FD10FF%A8A87D7D52FFFFCFC2CFC9C9A0A0999A767694A17DA17DA17DA175582E76%C1C8C8CECECEC8FFFFFF527D7DA8A8FD15FFA8A87D7DFFFFCAC9C9C9C2C9%A0BB6F7D769A7CA77DA17DA7A1762E5875C2A6CEC8CECECECAFFFF7D7DFD%04A8FD12FFA8A87D7D52A8FFCAC2C9C9C9C8C9BB9A769A9AA17CA17CA199%7C589AC1FD05CEC8CFFFA852527DA87DA8FD14FFFD04A87D7DA8FFCAC8FD%04C9C8BC93A19A9A7CA17CA07CA0755875C2CDFD04CECDC9FFA87D7DA87D%A8A8FD14FFA8A87D7D52A8FFFFC2FD04C9CEBCBDA2BC7CA17CA1A09A59A1%C2FD05CEC8FFFF7D527D7DA8A8FD17FFA8FFA8A87D7D7DFFCFFD06C9C29B%A89AA17CA17DA176847CC8FD04CECDCECFFF7D7D7DFD04A8FD16FFA8A87D%7D527DA8CFC2C9C9C9A1C9BC9B9B9A7D7D7C9A597CC1CECECECDCEC9FF7E%52527D7DA8A8FD19FFFD04A87D7D52A8CAC9C2C9A1C9C9BC9BA29A7D7CA1%767D52C2CECECDCEC8C9CAA8527D7DA87DA8A8FD18FFA8A87DA87D7D7DA8%FD06C9BCC49AA17DA1767DC2FD05CEC9A859FD047DA8A8FD1DFFFD04A852%7EA8CAFD05C9C39B9B7CA7A17C7CC8FD05CECFA87E7DA87DA8A8FD1CFFA8%A87DA87D7D527D7CA1C2C9C9C9C2BD9A7D75A0C8CECECEC8A67C7D527D7D%A87DA8A8FD1FFFA8A87DA87D7D597DA0FD04C9C3949A7D9A76C8CECECEC8%A0A1597D7DA87DA8A8FD20FFA8A8FD047D527C76C2C2C9C2BC93BBC8CEC8%A6767D527D7DA87DA8A8FD23FFA8FFA8A87DA87D7D76A0A0C9C8C9B59393%CECDC9A0A07C7D7DFD06A8FD22FFA8A87DA87D7D5959527C767C756F767C%527C527D53FD047DA8A8FFA8FD23FFA8FFA8A87DA87D847D7D7C7C7CA068%A07C7D767D59847DA87DFD04A8FD26FFFD04A87DA87D7E7D847D7E7D847D%A87DFD04A8FD2BFFA8FFFD06A87EA884847DA884A87EFD04A8FFA8FD2AFF%A8FFA8A87DA87DA87DA87DA87DFD04A8FFA8FD2DFFA8FFFD0FA8FFA8FFA8%FD30FFA8FFA8FFA8FFA8FFA8FD39FFA8FFA8FFA8FFA8FD9BFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">RVB de base</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2012-10-29T23:38:44+01:00</xmp:CreateDate>
         <xmp:ModifyDate>2012-10-29T23:38:45+01:00</xmp:ModifyDate>
         <xmp:MetadataDate>2012-10-29T23:38:45+01:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FUPc39tbqT&#xA;I4FMVSG/862kFQhFRirHbz8xSK0emKpY/wCYslf738cVXRfmNIG3l/HFU3svzE5EBnB+eKsisPOF&#xA;hcUDEAnuMVTyC5hnXlE4Ye2KqmKuxV2KuxV2KuxV2KuxVZLNFEKuwGKpVeeY7WGoUgkYqkl35zIJ&#xA;4tTFUtk85SV+3iqxfOUlft/jiqNtvOj1FX2xVObPzbBJQPQ++Kp1bX9tcCsbivgcVRGKuxV2KuxV&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:B497889B1A2068118DBBA9D5E661B6A7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:B497889B1A2068118DBBA9D5E661B6A7</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03E540664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:24:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D6AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T20:31:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BCE4CD276D42DD11A0BEF9B17C50C624</stEvt:instanceID>
                  <stEvt:when>2008-06-25T06:28:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E6A2668D200711689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T05:52:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0F91C12D6B48DD1194DA8463B7D22218</stEvt:instanceID>
                  <stEvt:when>2008-07-02T12:20:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811ACAF9F0F41229DDF</stEvt:instanceID>
                  <stEvt:when>2008-07-21T13:59:19+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED0DFC627ABDD6119286AC08E167C812</stEvt:instanceID>
                  <stEvt:when>2002-09-01T14:19:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:234F4C2C7BBDD6119286AC08E167C812</stEvt:instanceID>
                  <stEvt:when>2002-09-01T14:19:37+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811A8C4FAEDA846BD9E</stEvt:instanceID>
                  <stEvt:when>2012-10-26T16:23:06+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07801174072068118DBBA9D5E661B6A7</stEvt:instanceID>
                  <stEvt:when>2012-10-29T22:49:21+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08801174072068118DBBA9D5E661B6A7</stEvt:instanceID>
                  <stEvt:when>2012-10-29T22:50:48+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:09801174072068118DBBA9D5E661B6A7</stEvt:instanceID>
                  <stEvt:when>2012-10-29T22:51:12+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0A801174072068118DBBA9D5E661B6A7</stEvt:instanceID>
                  <stEvt:when>2012-10-29T22:52:17+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B497889B1A2068118DBBA9D5E661B6A7</stEvt:instanceID>
                  <stEvt:when>2012-10-29T23:38:45+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0A801174072068118DBBA9D5E661B6A7</stRef:instanceID>
            <stRef:documentID>xmp.did:0A801174072068118DBBA9D5E661B6A7</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>282.222222</stDim:w>
            <stDim:h>211.666667</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Groupe de nuances par défaut</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Blanc</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Noir</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Rouge</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Jaune</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Vert</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Bleu</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 V=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 V=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 V=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 V=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 V=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 V=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 V=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 V=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 V=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 V=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 V=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 V=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 V=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 V=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 V=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 V=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 V=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 V=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 V=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 V=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 V=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 V=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 V=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 V=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 V=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 V=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 V=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 V=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Gris</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 V=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 V=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 V=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 V=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 V=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 V=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 V=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 V=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 V=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 V=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Eclaboussure</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 V=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 V=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 V=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 V=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -287 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 287 li
583.996 287 li
583.996 0 li
cp
clp
[1 0 0 1 0 0 ]ct
440.496 287 mo
361.243 287 296.996 222.753 296.996 143.5 cv
296.996 64.2471 361.243 0 440.496 0 cv
519.749 0 583.996 64.2471 583.996 143.5 cv
583.996 222.753 519.749 287 440.496 287 cv
425.152 21.9294 mo
424.289 22.0413 li
362.907 29.988 315.496 82.4565 315.495 146 cv
315.495 215.036 371.459 271 440.496 271 cv
509.531 271 565.495 215.036 565.496 146 cv
565.495 80.2298 514.702 26.3253 450.201 21.3711 cv
449.961 21.3527 li
449.797 21.528 li
449.793 21.5338 433.36 39.0949 426.472 47.7223 cv
424.274 50.4782 421.839 55.0225 419.94 61.0256 cv
418.043 67.0273 416.69 74.484 416.69 83.0384 cv
416.69 93.071 418.552 104.612 423.582 117.075 cv
423.482 117.132 li
423.93 117.915 li
424.379 117.695 li
424.412 117.753 li
429.155 115.046 434.643 113.5 440.496 113.5 cv
449.471 113.5 457.593 117.137 463.476 123.019 cv
469.358 128.902 472.995 137.024 472.996 146 cv
472.995 154.976 469.358 163.098 463.476 168.981 cv
457.593 174.863 449.471 178.5 440.496 178.5 cv
431.519 178.5 423.397 174.863 417.514 168.981 cv
411.632 163.098 407.996 154.976 407.996 146 cv
407.996 138.728 410.382 132.019 414.415 126.604 cv
413.69 125.925 li
413.635 125.972 li
413.625 125.878 413.615 125.776 413.605 125.669 cv
413.045 120 410.804 96.217 410.805 79.024 cv
410.805 74.9551 410.93 71.2561 411.231 68.2649 cv
412.105 59.5511 415.5 48.1464 418.679 38.9444 cv
420.268 34.342 421.802 30.2869 422.939 27.3835 cv
423.508 25.9317 423.977 24.768 424.303 23.9674 cv
424.63 23.167 424.813 22.7326 424.814 22.7315 cv
425.152 21.9294 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[143.5 0 0 143.5 440.496 143.5 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.4 .4 .4 ]
/N 1.81753 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.4 .4 .4 ]
/C1 [.94902 .94902 .94902 ]
/N 4.97729 
>>
]
/Bounds [.251534 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[143.5 0 0 143.5 440.496 143.5 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr)cmqtg-`p\+:Po'u2:m-Ep!jl>=Wh:pT5eBuUdaiD?9^:Un_ZEL=-V4jKLQ]mJhLkL;+G][n?
B4bafAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXe
AnGXeAnGXeB4kjiB4kjiB4kmkBP;'mBPD0pBk_9rC2.L!CMR^%Ci!s*D/O60Df9T6EH-#>F)uGGF`qtQ
G^4U]H[L6jIt*!"JqSi4LPUeEN/`jZOcu#qQ^O;4StMdPV5L;nXg#+<[^j#a^r+.4bKeMbf@o'=jQGgr
~>
<~s8N#srr)cmqtg-`p\+:Po'u2:m-Ep!jl>=Wh:pT5eBuUdaiD?9^:Un_ZEL=-V4jKLQ]mJhLkL;+G][n?
B4bafAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXe
AnGXeAnGXeB4kjiB4kjiB4kmkBP;'mBPD0pBk_9rC2.L!CMR^%Ci!s*D/O60Df9T6EH-#>F)uGGF`qtQ
G^4U]H[L6jIt*!"JqSi4LPUeEN/`jZOcu#qQ^O;4StMdPV5L;nXg#+<[^j#a^r+.4bKeMbf@o'=jQGgr
~>
<~s8N#srr)cmqtg-`p\+:Po'u2:m-Ep!jl>=Wh:pT5eBuUdaiD?9^:Un_ZEL=-V4jKLQ]mJhLkL;+G][n?
B4bafAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXeAnGXe
AnGXeAnGXeB4kjiB4kjiB4kmkBP;'mBPD0pBk_9rC2.L!CMR^%Ci!s*D/O60Df9T6EH-#>F)uGGF`qtQ
G^4U]H[L6jIt*!"JqSi4LPUeEN/`jZOcu#qQ^O;4StMdPV5L;nXg#+<[^j#a^r+.4bKeMbf@o'=jQGgr
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
413.233 126.97 mo
413.233 126.97 408.966 85.8008 410.734 68.2149 cv
412.501 50.629 424.353 22.5372 424.353 22.5372 cv
363.219 30.4517 315.995 82.7109 315.995 146 cv
315.995 214.759 371.736 270.5 440.496 270.5 cv
509.254 270.5 564.996 214.759 564.996 146 cv
564.996 80.4931 514.404 26.8036 450.163 21.8696 cv
450.163 21.8696 433.724 39.4395 426.863 48.0341 cv
420.001 56.6289 410.357 83.7499 424.364 117.667 cv
424.165 117.318 li
428.98 114.57 434.554 113 440.496 113 cv
458.72 113 473.496 127.774 473.496 146 cv
473.496 164.226 458.72 179 440.496 179 cv
422.269 179 407.496 164.226 407.496 146 cv
407.496 138.618 409.919 131.803 414.014 126.306 cv
413.233 126.97 li
1 1 1 rgb
f
413.233 126.97 mo
413.73 126.919 li
413.73 126.917 413.685 126.479 413.605 125.669 cv
413.045 120 410.804 96.217 410.805 79.024 cv
410.805 74.9551 410.93 71.2561 411.231 68.2649 cv
412.105 59.5511 415.5 48.1464 418.679 38.9444 cv
420.268 34.342 421.802 30.2869 422.939 27.3835 cv
423.508 25.9317 423.977 24.768 424.303 23.9674 cv
424.63 23.167 424.813 22.7326 424.814 22.7315 cv
425.152 21.9294 li
424.289 22.0413 li
362.907 29.988 315.496 82.4565 315.495 146 cv
315.495 215.036 371.459 271 440.496 271 cv
509.531 271 565.495 215.036 565.496 146 cv
565.495 80.2298 514.702 26.3253 450.201 21.3711 cv
449.961 21.3527 li
449.797 21.528 li
449.793 21.5338 433.36 39.0949 426.472 47.7223 cv
424.274 50.4782 421.839 55.0225 419.94 61.0256 cv
418.043 67.0273 416.69 74.484 416.69 83.0384 cv
416.69 93.2804 418.631 105.096 423.902 117.857 cv
424.364 117.667 li
424.798 117.418 li
424.598 117.07 li
424.165 117.318 li
424.412 117.753 li
429.155 115.046 434.643 113.5 440.496 113.5 cv
449.471 113.5 457.593 117.137 463.476 123.019 cv
469.358 128.902 472.995 137.024 472.996 146 cv
472.995 154.976 469.358 163.098 463.476 168.981 cv
457.593 174.863 449.471 178.5 440.496 178.5 cv
431.519 178.5 423.397 174.863 417.514 168.981 cv
411.632 163.098 407.996 154.976 407.996 146 cv
407.996 138.728 410.382 132.019 414.415 126.604 cv
413.69 125.925 li
412.909 126.589 li
413.233 126.97 li
413.73 126.919 li
413.233 126.97 li
413.557 127.351 li
414.338 126.686 li
414.014 126.306 li
413.613 126.007 li
409.457 131.586 406.995 138.508 406.996 146 cv
406.996 164.502 421.993 179.5 440.496 179.5 cv
458.996 179.5 473.995 164.502 473.996 146 cv
473.995 127.498 458.996 112.5 440.496 112.5 cv
434.466 112.5 428.805 114.094 423.917 116.884 cv
423.482 117.132 li
423.93 117.915 li
424.826 117.476 li
419.606 104.835 417.69 93.1544 417.69 83.0384 cv
417.69 74.5898 419.027 67.2324 420.894 61.3269 cv
422.758 55.4226 425.16 50.9662 427.254 48.3461 cv
430.668 44.0685 436.492 37.5278 441.456 32.0651 cv
443.938 29.3331 446.206 26.8694 447.854 25.0888 cv
449.501 23.3082 450.525 22.2141 450.528 22.2113 cv
450.163 21.8696 li
450.124 22.3682 li
514.106 27.282 564.496 80.7564 564.496 146 cv
564.495 180.243 550.617 211.24 528.177 233.681 cv
505.735 256.122 474.739 270 440.496 270 cv
406.252 270 375.255 256.122 352.814 233.681 cv
330.373 211.24 316.495 180.243 316.495 146 cv
316.493 82.9653 363.531 30.9153 424.417 23.0329 cv
424.353 22.5372 li
423.892 22.3427 li
423.89 22.3495 420.923 29.3807 417.734 38.6181 cv
414.545 47.8585 411.13 59.2926 410.236 68.1649 cv
409.93 71.209 409.805 74.9341 409.805 79.024 cv
409.806 98.7609 412.735 127.013 412.736 127.022 cv
412.833 127.966 li
413.557 127.351 li
413.233 126.97 li
0 0 0 rgb
f
416.251 169.118 mo
409.748 167.544 404.014 165.519 398.986 163.108 cv
397.764 156.959 398.495 150.272 401.46 143.499 cv
403.605 150.238 406.885 156.848 411.65 163.046 cv
412.952 165.243 414.498 167.281 416.251 169.118 cv
379.958 145.003 mo
384.292 139.707 390.461 135.152 398.788 131.595 cv
398.808 131.736 398.827 131.874 398.848 132.015 cv
390.542 135.46 384.352 139.869 379.958 145.003 cv
.498039 1 1 rgb
f
417.161 169.335 mo
417.161 169.335 li
417.16 169.335 417.16 169.335 417.16 169.335 cv
416.856 169.264 416.551 169.191 416.251 169.118 cv
414.498 167.281 412.952 165.243 411.65 163.046 cv
413.304 165.196 415.135 167.296 417.161 169.335 cv
0 .501961 .501961 rgb
f
316.495 145.647 mo
316.495 145.516 316.496 145.378 316.497 145.247 cv
324.01 134.035 333.019 123.924 342.448 114.991 cv
341.725 120.221 341.208 125.685 340.888 131.393 cv
337.247 133.076 333.493 135.015 329.626 137.242 cv
325.384 139.685 321.006 142.474 316.495 145.647 cv
.498039 1 1 rgb
f
315.996 146 mo
316.161 145.749 316.33 145.497 316.497 145.247 cv
316.496 145.378 316.495 145.516 316.495 145.647 cv
316.328 145.764 316.162 145.882 315.995 146 cv
0 .501961 .501961 rgb
f
412.713 126.801 mo
405.629 124.499 395.559 121.513 382.617 121.513 cv
378.472 121.513 374.032 121.819 369.303 122.552 cv
367.113 101.653 376.042 77.5785 390.093 57.1939 cv
399.45 43.8995 411.039 32.2394 423.137 24.1801 cv
423.076 24.3319 423.011 24.4924 422.943 24.6612 cv
411.042 41.6726 405.721 57.4906 404.04 71.5473 cv
407.121 69.939 409.271 68.903 410.207 68.4607 cv
410.177 68.7828 410.148 69.112 410.121 69.4483 cv
408.914 71.9516 406.12 78.1068 403.522 86.4602 cv
404.337 103.144 409.577 116.39 412.522 124.869 cv
412.614 125.818 412.68 126.48 412.713 126.801 cv
.498039 1 1 rgb
f
413.233 126.97 mo
413.233 126.97 li
413.061 126.914 412.888 126.858 412.713 126.801 cv
412.68 126.48 412.614 125.818 412.522 124.869 cv
412.778 125.606 413.016 126.306 413.233 126.97 cv
410.121 69.4483 mo
410.148 69.112 410.177 68.7828 410.207 68.4607 cv
410.553 68.2973 410.734 68.2149 410.734 68.2149 cv
410.734 68.2149 410.51 68.6419 410.121 69.4483 cv
422.943 24.6612 mo
423.011 24.4924 423.076 24.3319 423.137 24.1801 cv
423.228 24.1198 423.318 24.0599 423.409 24 cv
423.253 24.2197 423.097 24.4418 422.943 24.6612 cv
0 .501961 .501961 rgb
f
439.742 269.998 mo
434.887 269.969 430.102 269.661 425.395 269.09 cv
400.078 264.315 377.872 247.718 362.528 223.967 cv
375.82 232.555 391.347 238.99 408.307 242.626 cv
418.343 253.479 429.317 263 439.742 269.998 cv
402.646 172.549 mo
400.89 169.619 399.658 166.461 398.994 163.146 cv
404.027 165.536 409.758 167.547 416.251 169.119 cv
416.375 169.248 416.501 169.379 416.627 169.506 cv
412.927 170.682 408.23 171.837 402.646 172.549 cv
371.286 171.232 mo
355.579 168.088 337.069 160.832 316.495 146.353 cv
316.495 146.236 316.495 146.117 316.495 146 cv
316.495 145.881 316.495 145.767 316.495 145.647 cv
321.006 142.474 325.384 139.685 329.626 137.242 cv
333.493 135.015 337.246 133.076 340.888 131.393 cv
340.888 131.393 li
351.152 126.65 360.513 123.948 368.956 122.606 cv
369.906 131.482 372.889 139.788 378.367 146.998 cv
373.136 154.051 371.015 162.317 371.286 171.232 cv
.984314 .788235 .556863 rgb
f
440.496 270.5 mo
435.362 270.5 430.321 270.019 425.395 269.09 cv
430.102 269.661 434.887 269.969 439.742 269.998 cv
439.993 270.166 440.245 270.334 440.496 270.5 cv
440.496 270.5 440.496 270.5 440.496 270.5 cv
416.627 169.506 mo
416.501 169.379 416.375 169.248 416.251 169.119 cv
416.552 169.192 416.857 169.264 417.161 169.335 cv
416.984 169.392 416.807 169.449 416.627 169.506 cv
316.495 146.353 mo
316.328 146.235 316.163 146.118 315.996 146 cv
315.996 146 li
315.996 146 li
315.996 146 li
315.995 146 315.995 146 315.995 146 cv
315.995 146 li
315.996 146 315.996 146 315.996 146 cv
316.163 145.882 316.328 145.765 316.495 145.647 cv
316.495 145.767 316.495 145.881 316.495 146 cv
316.495 146.117 316.495 146.236 316.495 146.353 cv
.486274 .290196 .0588235 rgb
f
398.788 131.595 mo
398.388 128.697 398.157 125.804 398.068 122.943 cv
403.866 124.016 408.757 125.516 412.713 126.801 cv
412.728 126.946 412.736 127.021 412.736 127.022 cv
412.742 127.086 li
407.543 128.324 402.9 129.839 398.788 131.595 cv
.984314 .788235 .556863 rgb
f
412.742 127.086 mo
412.736 127.022 li
412.736 127.021 412.728 126.946 412.713 126.801 cv
412.888 126.858 413.061 126.914 413.233 126.97 cv
413.233 126.97 li
413.068 127.009 412.906 127.047 412.742 127.086 cv
.486274 .290196 .0588235 rgb
f
342.448 114.991 mo
349.138 66.5675 373.44 38.2799 421.79 23.4017 cv
422.377 23.313 422.969 23.2277 423.559 23.1471 cv
423.555 23.1564 423.551 23.1655 423.547 23.1749 cv
411.293 31.4592 399.538 43.4906 390.093 57.1939 cv
382.81 67.5416 376.88 78.8789 373.11 90.2868 cv
363.308 97.07 352.633 105.342 342.448 114.991 cv
.984314 .788235 .556863 rgb
f
421.79 23.4017 mo
422.639 23.1403 423.499 22.882 424.364 22.6288 cv
424.092 22.8085 423.818 22.9916 423.547 23.1749 cv
423.551 23.1655 423.555 23.1564 423.559 23.1471 cv
422.969 23.2277 422.377 23.313 421.79 23.4017 cv
.486274 .290196 .0588235 rgb
f
416.251 169.119 mo
409.758 167.547 404.027 165.536 398.994 163.146 cv
398.991 163.133 398.989 163.121 398.986 163.108 cv
404.014 165.519 409.748 167.544 416.251 169.118 cv
416.252 169.119 416.25 169.118 416.251 169.119 cv
378.367 146.998 mo
372.889 139.788 369.906 131.482 368.956 122.606 cv
360.513 123.948 351.152 126.65 340.888 131.393 cv
341.208 125.685 341.725 120.221 342.448 114.991 cv
352.633 105.342 363.308 97.07 373.11 90.2868 cv
376.88 78.8789 382.81 67.5416 390.093 57.1939 cv
376.042 77.5785 367.113 101.653 369.303 122.552 cv
374.032 121.819 378.472 121.513 382.617 121.513 cv
395.559 121.513 405.629 124.499 412.713 126.801 cv
412.713 126.801 li
408.757 125.516 403.866 124.016 398.068 122.943 cv
398.157 125.804 398.388 128.697 398.788 131.595 cv
390.461 135.152 384.292 139.707 379.958 145.003 cv
379.399 145.656 378.867 146.323 378.367 146.998 cv
.733333 .788235 .556863 rgb
f
417.161 169.335 mo
416.857 169.264 416.552 169.192 416.251 169.119 cv
416.25 169.118 416.252 169.119 416.251 169.118 cv
416.551 169.191 416.856 169.264 417.16 169.335 cv
417.16 169.335 li
413.233 126.97 mo
413.061 126.914 412.888 126.858 412.713 126.801 cv
412.713 126.801 li
412.888 126.858 413.061 126.914 413.233 126.97 cv
.486274 .541176 .309804 rgb
f
316.495 145.647 mo
316.495 145.647 li
321.006 142.474 325.384 139.685 329.626 137.242 cv
325.384 139.685 321.006 142.474 316.495 145.647 cv
.733333 .788235 .556863 rgb
f
315.996 146 mo
315.996 146 li
316.162 145.882 316.328 145.764 316.495 145.647 cv
316.495 145.647 li
316.328 145.765 316.163 145.882 315.996 146 cv
.486274 .541176 .309804 rgb
f
464.741 169.117 mo
466.456 167.319 467.973 165.331 469.257 163.187 cv
473.513 157.703 476.637 151.831 478.558 145.999 cv
480.574 152.123 481.263 158.203 480.538 163.735 cv
475.899 165.874 470.65 167.685 464.741 169.117 cv
501.546 147.131 mo
498.495 141.536 493.961 136.542 487.695 132.375 cv
493.96 136.542 498.495 141.536 501.546 147.13 cv
501.546 147.131 li
564.495 145.647 mo
555.978 139.652 547.816 134.897 540.059 131.158 cv
539.71 125.44 539.149 119.954 538.369 114.688 cv
548.656 124.501 557.717 135.144 564.493 145.246 cv
564.494 145.377 564.495 145.515 564.495 145.647 cv
464.363 122.493 mo
464.245 122.373 464.124 122.253 464.004 122.134 cv
465.178 118.595 466.812 114.147 468.33 108.88 cv
468.33 108.88 li
470.81 100.276 472.98 89.4813 472.331 76.8809 cv
482.557 78.246 493.466 82.5492 504.237 88.7304 cv
508.308 99.6266 510.513 110.598 510.115 120.851 cv
502.675 119.332 495.861 118.738 489.745 118.738 cv
485.458 118.738 481.512 119.031 477.941 119.503 cv
477.94 119.502 li
472.53 120.218 467.975 121.345 464.363 122.493 cv
.498039 .498039 1 rgb
f
463.83 169.334 mo
465.804 167.36 467.615 165.302 469.257 163.187 cv
467.973 165.331 466.456 167.319 464.741 169.117 cv
464.44 169.19 464.133 169.263 463.83 169.334 cv
564.996 146 mo
564.952 145.969 564.912 145.941 564.868 145.91 cv
564.745 145.823 564.618 145.733 564.495 145.647 cv
564.495 145.515 564.494 145.377 564.493 145.246 cv
564.662 145.497 564.83 145.749 564.996 146 cv
564.996 146 li
463.83 122.665 mo
463.887 122.491 463.945 122.313 464.004 122.134 cv
464.124 122.253 464.245 122.373 464.363 122.493 cv
464.183 122.55 464.005 122.608 463.83 122.665 cv
0 0 .501961 rgb
f
424.648 116.479 mo
429.092 98.3372 436.795 87.2118 446.448 81.4293 cv
449.354 87.707 452.629 95.1583 456.302 103.994 cv
455.02 103.803 453.716 103.706 452.396 103.706 cv
444.285 103.706 435.506 107.374 426.632 115.495 cv
425.958 115.801 425.297 116.13 424.648 116.479 cv
.498039 .498039 1 rgb
f
424.364 117.667 mo
424.364 117.667 li
424.457 117.265 424.551 116.874 424.648 116.479 cv
425.297 116.13 425.958 115.801 426.632 115.495 cv
425.876 116.187 425.121 116.91 424.364 117.667 cv
0 0 .501961 rgb
f
483.526 52.1338 mo
477.878 50.4627 472.043 49.1122 466.044 48.1075 cv
462.91 40.0178 458.439 31.4818 452.225 22.5474 cv
452.54 22.5769 452.862 22.6084 453.176 22.6403 cv
463.912 30.0555 474.468 40.3577 483.526 52.1338 cv
.498039 .498039 1 rgb
f
453.176 22.6403 mo
452.862 22.6084 452.54 22.5769 452.225 22.5474 cv
451.983 22.1999 451.737 21.8487 451.49 21.5 cv
451.49 21.5 li
451.49 21.5 li
452.051 21.8713 452.616 22.2531 453.176 22.6403 cv
0 0 .501961 rgb
f
564.493 145.246 mo
557.715 135.141 548.66 124.502 538.369 114.687 cv
535.977 98.5357 531.524 84.4883 524.792 72.408 cv
545.149 87.4601 559.247 107.897 563.586 130.901 cv
564.157 135.609 564.465 140.39 564.493 145.246 cv
504.237 88.729 mo
504.236 88.7289 li
502.875 85.0856 501.307 81.4559 499.556 77.858 cv
501.306 81.4522 502.876 85.0895 504.237 88.729 cv
1 .498039 .498039 rgb
f
564.996 146 mo
564.83 145.749 564.662 145.497 564.493 145.246 cv
564.465 140.39 564.157 135.609 563.586 130.901 cv
564.515 135.827 564.996 140.866 564.996 146 cv
.501961 0 0 rgb
f
464.004 122.134 mo
463.801 121.934 463.597 121.739 463.39 121.544 cv
460.877 115.155 458.518 109.325 456.302 103.994 cv
460.564 104.629 464.604 106.299 468.33 108.88 cv
466.812 114.147 465.178 118.595 464.004 122.134 cv
1 .498039 .498039 rgb
f
463.83 122.664 mo
463.683 122.289 463.536 121.915 463.39 121.544 cv
463.597 121.739 463.801 121.934 464.004 122.134 cv
463.945 122.313 463.887 122.49 463.83 122.664 cv
.501961 0 0 rgb
f
424.461 116.58 mo
423.944 115.293 423.46 114.015 423.009 112.749 cv
420.138 100.118 420.178 80.7512 432.165 54.4627 cv
429.516 50.4511 427.949 48.8921 427.268 48.3277 cv
427.511 48.0239 427.765 47.7093 428.031 47.3839 cv
429.247 46.9148 431.65 46.3255 436.271 46.0969 cv
440.153 38.6999 444.949 30.8145 450.837 22.425 cv
451.301 22.4633 451.762 22.5039 452.225 22.5474 cv
458.439 31.4819 462.91 40.0178 466.043 48.1075 cv
466.044 48.1075 li
470.063 58.484 471.879 68.122 472.331 76.8806 cv
470.051 76.5766 467.807 76.4188 465.603 76.4188 cv
458.704 76.4188 452.225 77.9685 446.448 81.4293 cv
446.447 81.4276 li
436.79 87.2087 429.093 98.3323 424.648 116.479 cv
424.586 116.512 424.523 116.546 424.461 116.58 cv
1 .498039 .498039 rgb
f
424.364 117.667 mo
423.871 116.159 423.412 114.521 423.009 112.749 cv
423.46 114.015 423.944 115.293 424.461 116.58 cv
424.523 116.546 424.586 116.512 424.648 116.479 cv
424.551 116.874 424.457 117.265 424.364 117.667 cv
424.364 117.667 li
424.364 117.667 li
424.364 117.667 li
427.268 48.3277 mo
426.994 48.1002 426.863 48.0341 426.863 48.0341 cv
426.863 48.0341 427.096 47.7446 428.031 47.3839 cv
427.765 47.7093 427.511 48.0239 427.268 48.3277 cv
452.225 22.5474 mo
451.762 22.5039 451.301 22.4633 450.837 22.425 cv
451.052 22.1187 451.272 21.8077 451.49 21.5 cv
451.737 21.8487 451.983 22.1999 452.225 22.5474 cv
.501961 0 0 rgb
f
564.493 145.246 mo
557.717 135.144 548.656 124.501 538.369 114.688 cv
538.369 114.687 li
548.66 124.502 557.715 135.141 564.493 145.246 cv
564.493 145.246 li
468.33 108.88 mo
464.604 106.299 460.564 104.629 456.302 103.994 cv
452.629 95.1583 449.354 87.707 446.448 81.4293 cv
452.225 77.9685 458.704 76.4188 465.603 76.4188 cv
467.807 76.4188 470.051 76.5766 472.331 76.8806 cv
471.879 68.122 470.063 58.484 466.044 48.1075 cv
472.043 49.1122 477.878 50.4627 483.526 52.1338 cv
489.711 60.1742 495.196 68.9017 499.556 77.858 cv
501.307 81.4559 502.875 85.0856 504.236 88.7289 cv
504.237 88.729 li
504.238 88.7327 504.236 88.7267 504.237 88.7304 cv
493.466 82.5492 482.557 78.246 472.331 76.8809 cv
472.98 89.4813 470.81 100.276 468.33 108.88 cv
.74902 .247059 .498039 rgb
f
564.996 146 mo
564.83 145.749 564.662 145.497 564.493 145.246 cv
564.493 145.246 li
564.662 145.497 564.83 145.749 564.996 146 cv
564.996 146 li
424.364 117.667 mo
424.364 117.667 li
424.364 117.667 li
424.364 117.667 li
.501961 0 .25098 rgb
f
440.142 270 mo
440.008 269.999 439.876 269.999 439.742 269.998 cv
429.358 263.025 418.453 253.516 408.488 242.664 cv
414.023 243.844 419.71 244.724 425.519 245.284 cv
429.278 253.125 434.075 261.38 440.142 270 cv
.788235 .576471 .780392 rgb
f
440.496 270.5 mo
440.245 270.334 439.993 270.166 439.742 269.998 cv
439.876 269.999 440.008 269.999 440.142 270 cv
440.259 270.166 440.377 270.333 440.496 270.5 cv
.290196 .0784314 .282353 rgb
f
439.742 269.998 mo
439.742 269.998 li
429.317 263 418.343 253.479 408.307 242.626 cv
408.365 242.638 408.43 242.652 408.488 242.664 cv
418.453 253.516 429.358 263.025 439.742 269.998 cv
.780392 .470588 .560784 rgb
f
440.496 270.5 mo
440.245 270.334 439.993 270.166 439.742 269.998 cv
439.742 269.998 li
439.993 270.166 440.245 270.334 440.496 270.5 cv
440.496 270.5 440.496 270.5 440.496 270.5 cv
.533333 .219608 .309804 rgb
f
414.662 211.949 mo
403.608 211.251 391.745 207.475 380.055 201.69 cv
375.132 191.309 372.059 180.943 371.709 171.316 cv
378.824 172.711 385.36 173.262 391.246 173.262 cv
395.373 173.262 399.181 172.991 402.646 172.549 cv
402.646 172.55 li
408.233 171.838 412.926 170.683 416.627 169.507 cv
416.747 169.629 416.868 169.749 416.989 169.869 cv
415.842 173.48 414.714 178.037 413.999 183.445 cv
413.999 183.445 li
412.965 191.261 412.791 200.855 414.662 211.949 cv
343.599 176.895 mo
332.754 167.377 323.324 156.898 316.497 146.751 cv
316.496 146.618 316.495 146.487 316.495 146.353 cv
325.115 152.419 333.371 157.218 341.212 160.977 cv
341.734 166.396 342.536 171.713 343.599 176.895 cv
401.46 143.499 mo
400.249 139.697 399.399 135.847 398.848 132.015 cv
402.865 130.348 407.38 128.906 412.419 127.719 cv
412.307 127.89 412.198 128.06 412.09 128.233 cv
407.199 133.241 403.694 138.395 401.46 143.499 cv
.788235 .576471 .780392 rgb
f
416.989 169.869 mo
416.868 169.749 416.747 169.629 416.627 169.507 cv
416.808 169.45 416.986 169.392 417.162 169.335 cv
417.104 169.51 417.047 169.689 416.989 169.869 cv
316.497 146.751 mo
316.328 146.5 316.161 146.25 315.996 146 cv
316.162 146.118 316.328 146.236 316.495 146.353 cv
316.495 146.487 316.496 146.618 316.497 146.751 cv
412.09 128.233 mo
412.198 128.06 412.307 127.89 412.419 127.719 cv
412.496 127.701 412.575 127.683 412.652 127.664 cv
412.462 127.854 412.276 128.043 412.09 128.233 cv
.290196 .0784314 .282353 rgb
f
398.986 163.108 mo
390.013 158.805 383.299 153.273 378.522 146.877 cv
378.976 146.243 379.455 145.618 379.958 145.003 cv
384.352 139.869 390.542 135.46 398.848 132.015 cv
399.399 135.847 400.249 139.697 401.46 143.499 cv
398.495 150.272 397.764 156.959 398.986 163.108 cv
.537255 .576471 .780392 rgb
f
380.055 201.69 mo
367.274 195.364 354.696 186.634 343.599 176.895 cv
342.536 171.713 341.734 166.396 341.212 160.977 cv
333.371 157.218 325.115 152.419 316.495 146.353 cv
316.495 146.353 li
337.069 160.832 355.579 168.088 371.286 171.232 cv
371.015 162.317 373.136 154.051 378.367 146.998 cv
383.196 153.355 389.965 158.858 398.994 163.146 cv
399.658 166.461 400.89 169.619 402.646 172.549 cv
399.181 172.991 395.373 173.262 391.246 173.262 cv
385.36 173.262 378.824 172.711 371.709 171.316 cv
372.059 180.943 375.132 191.309 380.055 201.69 cv
.780392 .470588 .560784 rgb
f
316.495 146.353 mo
316.328 146.236 316.162 146.118 315.995 146 cv
315.996 146 315.996 146 315.996 146 cv
315.996 146 li
316.163 146.118 316.328 146.235 316.495 146.353 cv
316.495 146.353 li
.533333 .219608 .309804 rgb
f
398.994 163.146 mo
389.965 158.858 383.196 153.355 378.367 146.998 cv
378.867 146.323 379.399 145.656 379.958 145.003 cv
379.455 145.618 378.976 146.243 378.522 146.877 cv
383.299 153.273 390.013 158.805 398.986 163.108 cv
398.989 163.121 398.991 163.133 398.994 163.146 cv
.654902 .470588 .560784 rgb
f
453.839 186.322 mo
449.553 186.322 445.037 185.557 440.497 184.062 cv
446.332 182.141 452.206 179.015 457.691 174.755 cv
459.832 173.473 461.818 171.957 463.613 170.245 cv
462.634 174.282 461.478 177.986 460.16 181.373 cv
459.525 183.007 458.853 184.564 458.144 186.053 cv
456.741 186.233 455.304 186.322 453.839 186.322 cv
422.942 186.252 mo
422.91 186.186 422.879 186.12 422.847 186.053 cv
422.847 186.053 li
422.879 186.12 422.91 186.186 422.942 186.252 cv
.788235 .576471 .780392 rgb
f
457.691 174.755 mo
459.804 173.115 461.859 171.307 463.831 169.335 cv
463.831 169.335 li
463.83 169.336 463.83 169.336 463.83 169.336 cv
463.759 169.64 463.686 169.945 463.613 170.245 cv
461.818 171.957 459.832 173.473 457.691 174.755 cv
.290196 .0784314 .282353 rgb
f
440.496 270 mo
440.379 270 440.259 270 440.142 270 cv
424.648 247.984 417.426 228.332 414.662 211.949 cv
415.891 212.026 417.112 212.066 418.319 212.066 cv
426.339 212.065 433.865 210.322 440.495 206.408 cv
447.127 210.324 454.649 212.066 462.673 212.065 cv
463.88 212.065 465.101 212.026 466.329 211.948 cv
466.329 211.949 li
466.329 211.949 li
463.566 228.333 456.343 247.984 440.849 270 cv
440.732 270 440.613 270 440.496 270 cv
471.391 242.897 mo
481.944 230.872 491.314 217.104 497.723 203.228 cv
497.723 203.228 li
491.315 217.104 481.944 230.872 471.391 242.897 cv
471.391 242.897 li
518.463 223.968 mo
527.267 210.338 533.811 194.359 537.392 176.896 cv
544.317 170.819 550.662 164.351 556.125 157.826 cv
559.217 154.132 562.026 150.42 564.493 146.753 cv
564.464 151.607 564.157 156.394 563.585 161.101 cv
558.81 186.418 542.213 208.624 518.463 223.968 cv
458.145 186.053 mo
458.854 184.564 459.525 183.007 460.16 181.373 cv
461.478 177.986 462.635 174.281 463.614 170.244 cv
463.744 170.12 463.874 169.994 464.001 169.869 cv
465.149 173.48 466.277 178.037 466.992 183.445 cv
464.282 184.784 461.301 185.648 458.145 186.053 cv
.686274 .607843 .537255 rgb
f
440.496 270.5 mo
440.496 270.5 li
440.496 270.5 440.496 270.5 440.496 270.5 cv
440.496 270.5 li
440.496 270.5 li
440.496 270.5 li
440.496 270.5 li
440.377 270.333 440.26 270.166 440.142 270 cv
440.259 270 440.379 270 440.496 270 cv
440.613 270 440.732 270 440.849 270 cv
440.732 270.166 440.614 270.333 440.496 270.5 cv
440.496 270.5 li
440.496 270.5 440.496 270.5 440.496 270.5 cv
440.496 270.5 440.496 270.5 440.496 270.5 cv
440.496 270.5 li
440.496 270.5 440.496 270.5 440.496 270.5 cv
463.614 170.244 mo
463.687 169.944 463.76 169.639 463.831 169.335 cv
463.887 169.511 463.944 169.689 464.001 169.869 cv
463.874 169.994 463.744 170.12 463.614 170.244 cv
563.585 161.101 mo
564.157 156.394 564.464 151.607 564.493 146.753 cv
564.662 146.502 564.83 146.25 564.996 146 cv
564.996 146 li
564.996 151.134 564.514 156.175 563.585 161.101 cv
.188235 .109804 .0392157 rgb
f
362.528 223.967 mo
338.771 208.62 322.173 186.411 317.403 161.086 cv
316.833 156.385 316.526 151.6 316.497 146.751 cv
323.324 156.898 332.754 167.379 343.599 176.896 cv
347.18 194.359 353.723 210.338 362.528 223.967 cv
.686274 .607843 .537255 rgb
f
317.403 161.086 mo
316.476 156.166 315.996 151.127 315.996 146 cv
315.995 146 315.995 146 315.995 146 cv
316.161 146.25 316.328 146.5 316.497 146.751 cv
316.526 151.6 316.833 156.385 317.403 161.086 cv
.188235 .109804 .0392157 rgb
f
408.307 242.626 mo
391.347 238.99 375.82 232.555 362.528 223.967 cv
353.723 210.338 347.18 194.359 343.599 176.896 cv
354.547 186.504 366.931 195.128 379.534 201.432 cv
386.323 215.71 396.685 230.058 408.307 242.626 cv
.678431 .501961 .313725 rgb
f
422.847 186.053 mo
419.691 185.648 416.71 184.784 413.999 183.445 cv
414.714 178.037 415.842 173.48 416.99 169.869 cv
417.118 169.996 417.248 170.121 417.378 170.246 cv
418.83 176.23 420.67 181.478 422.847 186.053 cv
.686274 .607843 .537255 rgb
f
417.378 170.246 mo
417.248 170.121 417.118 169.996 416.99 169.869 cv
417.047 169.689 417.104 169.511 417.162 169.336 cv
417.232 169.64 417.305 169.946 417.378 170.246 cv
.188235 .109804 .0392157 rgb
f
440.142 270 mo
440.142 270 li
434.075 261.38 429.278 253.125 425.519 245.284 cv
419.71 244.724 414.023 243.844 408.488 242.664 cv
397.019 230.175 386.799 215.913 380.055 201.69 cv
391.745 207.475 403.608 211.251 414.662 211.949 cv
412.791 200.855 412.965 191.261 413.999 183.445 cv
416.71 184.784 419.691 185.648 422.847 186.053 cv
422.879 186.12 422.91 186.186 422.942 186.252 cv
427.492 195.727 433.496 202.277 440.495 206.408 cv
433.865 210.322 426.339 212.065 418.319 212.066 cv
417.112 212.066 415.891 212.026 414.662 211.949 cv
417.426 228.332 424.648 247.984 440.142 270 cv
343.599 176.896 mo
332.754 167.379 323.324 156.898 316.497 146.751 cv
316.497 146.751 li
323.324 156.898 332.754 167.377 343.599 176.895 cv
343.599 176.896 li
.580392 .396078 .427451 rgb
f
440.496 270.5 mo
440.496 270.5 li
440.377 270.333 440.259 270.166 440.142 270 cv
440.142 270 li
440.26 270.166 440.377 270.333 440.496 270.5 cv
316.497 146.751 mo
316.328 146.5 316.161 146.25 315.996 146 cv
315.995 146 315.995 146 315.995 146 cv
316.161 146.25 316.328 146.5 316.497 146.751 cv
316.497 146.751 li
.333333 .14902 .176471 rgb
f
408.488 242.664 mo
408.43 242.652 408.365 242.638 408.307 242.626 cv
396.685 230.058 386.323 215.71 379.534 201.432 cv
366.931 195.128 354.547 186.504 343.599 176.896 cv
343.599 176.895 li
354.696 186.634 367.274 195.364 380.055 201.69 cv
386.799 215.913 397.019 230.175 408.488 242.664 cv
.576471 .345098 .317647 rgb
f
460.16 181.373 mo
461.478 177.986 462.634 174.282 463.613 170.245 cv
463.614 170.244 463.614 170.244 463.614 170.244 cv
462.635 174.281 461.478 177.986 460.16 181.373 cv
.580392 .396078 .427451 rgb
f
463.613 170.245 mo
463.686 169.945 463.759 169.64 463.83 169.336 cv
463.83 169.336 li
463.76 169.639 463.687 169.944 463.614 170.244 cv
463.614 170.244 463.614 170.244 463.613 170.245 cv
.333333 .14902 .176471 rgb
f
440.849 270 mo
446.916 261.38 451.713 253.125 455.472 245.284 cv
460.891 244.762 466.209 243.96 471.391 242.897 cv
461.874 253.742 451.395 263.17 441.248 269.998 cv
441.115 269.999 440.983 269.999 440.849 270 cv
466.329 211.949 mo
466.329 211.948 li
466.329 211.948 li
468.2 200.854 468.026 191.26 466.992 183.445 cv
466.993 183.444 li
466.278 178.036 465.15 173.479 464.002 169.868 cv
464.124 169.748 464.244 169.628 464.364 169.506 cv
465.969 170.016 467.762 170.523 469.732 170.99 cv
475.123 172.27 481.849 173.263 489.745 173.262 cv
494.84 173.262 500.422 172.849 506.444 171.833 cv
506.444 171.834 li
506.445 171.833 li
505.811 181.878 502.638 192.584 497.723 203.227 cv
497.723 203.227 li
497.723 203.228 li
487.08 208.142 476.373 211.317 466.329 211.949 cv
440.498 206.409 mo
440.495 206.408 li
447.543 202.247 453.584 195.635 458.144 186.053 cv
458.145 186.053 li
453.584 195.635 447.545 202.249 440.498 206.409 cv
427.152 186.323 mo
425.688 186.323 424.25 186.233 422.847 186.053 cv
420.67 181.478 418.83 176.231 417.378 170.246 cv
419.177 171.962 421.165 173.478 423.31 174.762 cv
428.792 179.017 434.666 182.142 440.497 184.062 cv
435.956 185.558 431.439 186.323 427.152 186.323 cv
.498039 .701961 .607843 rgb
f
440.496 270.5 mo
440.614 270.333 440.732 270.166 440.849 270 cv
440.983 269.999 441.115 269.999 441.248 269.998 cv
440.998 270.167 440.746 270.334 440.496 270.5 cv
423.31 174.762 mo
421.165 173.478 419.177 171.962 417.378 170.246 cv
417.306 169.946 417.232 169.638 417.162 169.335 cv
419.137 171.31 421.194 173.12 423.31 174.762 cv
464.002 169.868 mo
463.945 169.687 463.888 169.51 463.831 169.335 cv
464.006 169.392 464.184 169.449 464.364 169.506 cv
464.244 169.628 464.124 169.748 464.002 169.868 cv
0 .203922 .109804 rgb
f
440.495 206.408 mo
433.496 202.276 427.492 195.727 422.942 186.252 cv
422.91 186.186 422.879 186.12 422.847 186.053 cv
424.25 186.233 425.688 186.323 427.152 186.323 cv
431.439 186.323 435.956 185.558 440.497 184.062 cv
445.037 185.557 449.553 186.322 453.839 186.322 cv
455.304 186.322 456.741 186.233 458.144 186.053 cv
453.584 195.635 447.543 202.247 440.495 206.408 cv
.392157 .490196 .498039 rgb
f
440.849 270 mo
456.343 247.984 463.566 228.333 466.329 211.949 cv
476.373 211.317 487.08 208.142 497.723 203.228 cv
491.314 217.104 481.944 230.872 471.391 242.897 cv
466.209 243.96 460.891 244.762 455.472 245.284 cv
451.713 253.125 446.916 261.38 440.849 270 cv
440.849 270 li
462.673 212.065 mo
454.649 212.066 447.127 210.324 440.495 206.408 cv
440.495 206.408 li
440.498 206.409 li
447.545 202.249 453.584 195.635 458.145 186.053 cv
461.301 185.648 464.282 184.784 466.992 183.445 cv
468.026 191.26 468.2 200.854 466.329 211.948 cv
465.101 212.026 463.88 212.065 462.673 212.065 cv
.341176 .505882 .376471 rgb
f
440.496 270.5 mo
440.614 270.333 440.732 270.166 440.849 270 cv
440.849 270 li
440.732 270.166 440.614 270.333 440.496 270.5 cv
440.496 270.5 440.496 270.5 440.496 270.5 cv
.0941176 .258824 .129412 rgb
f
440.495 206.408 mo
433.496 202.277 427.492 195.727 422.942 186.252 cv
427.492 195.727 433.496 202.276 440.495 206.408 cv
440.495 206.408 li
.290196 .403922 .321569 rgb
f
537.392 176.895 mo
538.455 171.713 539.257 166.396 539.779 160.977 cv
547.455 157.297 555.527 152.622 563.95 146.735 cv
564.053 146.664 564.153 146.594 564.255 146.522 cv
564.29 146.497 564.332 146.468 564.367 146.444 cv
564.376 146.437 564.385 146.431 564.394 146.424 cv
564.426 146.402 564.458 146.379 564.49 146.357 cv
564.493 146.355 564.492 146.355 564.495 146.353 cv
564.495 146.487 564.494 146.619 564.493 146.753 cv
562.026 150.42 559.217 154.132 556.125 157.826 cv
550.662 164.351 544.317 170.818 537.392 176.895 cv
.498039 .701961 .607843 rgb
f
564.493 146.753 mo
564.494 146.619 564.495 146.487 564.495 146.353 cv
564.53 146.329 564.565 146.304 564.6 146.28 cv
564.731 146.187 564.864 146.093 564.996 146 cv
564.996 146 li
564.83 146.25 564.662 146.502 564.493 146.753 cv
0 .203922 .109804 rgb
f
556.125 157.826 mo
559.217 154.132 562.026 150.42 564.493 146.753 cv
564.493 146.753 li
562.026 150.42 559.217 154.132 556.125 157.826 cv
.341176 .505882 .376471 rgb
f
564.493 146.753 mo
564.493 146.753 li
564.662 146.502 564.83 146.25 564.996 146 cv
564.996 146 li
564.83 146.25 564.662 146.502 564.493 146.753 cv
.0941176 .258824 .129412 rgb
f
480.538 163.737 mo
480.538 163.736 480.538 163.736 480.538 163.735 cv
489.919 159.409 496.793 153.739 501.546 147.131 cv
501.547 147.132 li
496.794 153.74 489.918 159.411 480.538 163.737 cv
478.558 145.999 mo
476.636 140.164 473.511 134.291 469.252 128.805 cv
467.969 126.664 466.452 124.677 464.74 122.882 cv
470.724 124.333 475.973 126.173 480.549 128.351 cv
481.255 133.86 480.564 139.906 478.558 145.999 cv
.498039 .701961 .607843 rgb
f
469.252 128.805 mo
467.611 126.693 465.802 124.637 463.831 122.665 cv
463.831 122.665 li
463.831 122.666 463.831 122.666 463.831 122.666 cv
464.135 122.736 464.44 122.809 464.74 122.882 cv
466.452 124.677 467.969 126.664 469.252 128.805 cv
0 .203922 .109804 rgb
f
480.538 163.735 mo
481.263 158.203 480.574 152.123 478.558 145.999 cv
480.564 139.906 481.255 133.86 480.549 128.351 cv
483.145 129.587 485.524 130.931 487.695 132.375 cv
493.961 136.542 498.495 141.536 501.546 147.131 cv
496.793 153.739 489.919 159.409 480.538 163.735 cv
.247059 .45098 .607843 rgb
f
441.248 269.998 mo
451.395 263.17 461.874 253.742 471.391 242.897 cv
488.854 239.316 504.834 232.772 518.463 223.968 cv
503.119 247.718 480.913 264.315 455.596 269.09 cv
450.889 269.661 446.103 269.969 441.248 269.998 cv
497.723 203.228 mo
497.723 203.227 li
511.599 196.819 525.368 187.448 537.392 176.895 cv
537.392 176.896 li
525.365 187.452 511.602 196.82 497.723 203.228 cv
1 1 .498039 rgb
f
440.496 270.5 mo
440.496 270.5 li
440.746 270.334 440.998 270.167 441.248 269.998 cv
446.103 269.969 450.889 269.661 455.596 269.09 cv
450.671 270.019 445.629 270.5 440.496 270.5 cv
.501961 .501961 0 rgb
f
471.391 242.897 mo
481.944 230.872 491.315 217.104 497.723 203.228 cv
511.602 196.82 525.365 187.452 537.392 176.896 cv
533.811 194.359 527.267 210.338 518.463 223.968 cv
504.834 232.772 488.854 239.316 471.391 242.897 cv
.843137 .803922 .266667 rgb
f
477.941 172.497 mo
474.937 172.099 472.195 171.575 469.732 170.99 cv
467.762 170.523 465.969 170.016 464.364 169.506 cv
464.49 169.378 464.615 169.249 464.739 169.119 cv
470.648 167.687 475.899 165.876 480.538 163.737 cv
480.128 166.86 479.267 169.812 477.941 172.497 cv
1 1 .498039 rgb
f
464.364 169.506 mo
464.184 169.449 464.007 169.392 463.831 169.335 cv
464.135 169.264 464.439 169.191 464.739 169.119 cv
464.615 169.249 464.49 169.378 464.364 169.506 cv
.501961 .501961 0 rgb
f
506.445 171.833 mo
506.445 171.833 li
506.444 171.833 li
507.008 162.901 505.564 154.497 501.547 147.132 cv
501.547 147.132 li
501.546 147.13 li
507.087 139.428 509.741 130.454 510.114 120.851 cv
525.733 124.038 544.099 131.293 564.495 145.647 cv
564.495 145.766 564.496 145.88 564.496 146 cv
564.496 146.117 564.495 146.236 564.495 146.353 cv
564.492 146.355 564.493 146.355 564.49 146.357 cv
564.458 146.379 564.426 146.402 564.394 146.424 cv
564.385 146.431 564.376 146.437 564.367 146.444 cv
564.332 146.468 564.29 146.497 564.255 146.522 cv
564.153 146.594 564.053 146.664 563.95 146.735 cv
555.527 152.622 547.455 157.296 539.779 160.976 cv
539.779 160.977 li
527.594 166.819 516.413 170.152 506.445 171.833 cv
480.549 128.351 mo
475.973 126.173 470.724 124.333 464.739 122.881 cv
464.616 122.752 464.49 122.622 464.364 122.494 cv
467.975 121.347 472.533 120.219 477.941 119.503 cv
479.279 122.214 480.144 125.194 480.549 128.351 cv
524.792 72.408 mo
512.931 63.6387 498.946 56.6959 483.526 52.1339 cv
474.468 40.3579 463.912 30.0553 453.176 22.6403 cv
454.604 22.7852 456.015 22.9534 457.428 23.1463 cv
489.7 32.6608 511.611 48.7594 524.792 72.408 cv
1 1 .498039 rgb
f
564.495 146.353 mo
564.495 146.236 564.496 146.117 564.496 146 cv
564.496 145.88 564.495 145.766 564.495 145.647 cv
564.618 145.733 564.745 145.823 564.868 145.91 cv
564.912 145.941 564.952 145.969 564.996 146 cv
564.996 146 li
564.864 146.093 564.731 146.187 564.6 146.28 cv
564.565 146.304 564.53 146.329 564.495 146.353 cv
464.739 122.881 mo
464.439 122.808 464.134 122.736 463.831 122.665 cv
464.007 122.608 464.184 122.551 464.364 122.494 cv
464.49 122.622 464.616 122.752 464.739 122.881 cv
457.428 23.1463 mo
456.015 22.9534 454.604 22.7852 453.176 22.6403 cv
452.616 22.2531 452.051 21.8713 451.49 21.5 cv
453.506 22.0249 455.487 22.5741 457.428 23.1463 cv
.501961 .501961 0 rgb
f
501.546 147.13 mo
498.495 141.536 493.96 136.542 487.695 132.375 cv
485.524 130.931 483.145 129.587 480.549 128.351 cv
480.144 125.194 479.279 122.214 477.941 119.503 cv
481.512 119.031 485.458 118.738 489.745 118.738 cv
495.861 118.738 502.675 119.332 510.115 120.851 cv
510.513 110.598 508.308 99.6266 504.237 88.7304 cv
516.151 95.5676 527.898 104.698 538.369 114.688 cv
539.149 119.954 539.71 125.44 540.059 131.158 cv
547.816 134.897 555.978 139.652 564.495 145.647 cv
564.495 145.647 li
544.099 131.293 525.733 124.038 510.114 120.851 cv
509.741 130.454 507.087 139.428 501.546 147.13 cv
.74902 .74902 .498039 rgb
f
483.526 52.1339 mo
483.526 52.1338 li
474.468 40.3577 463.912 30.0555 453.176 22.6403 cv
453.176 22.6403 li
463.912 30.0553 474.468 40.3579 483.526 52.1339 cv
f
453.176 22.6403 mo
453.176 22.6403 li
452.616 22.2531 452.051 21.8713 451.49 21.5 cv
451.49 21.5 li
452.051 21.8713 452.616 22.2531 453.176 22.6403 cv
.501961 .501961 .25098 rgb
f
538.369 114.687 mo
527.897 104.698 516.151 95.5648 504.237 88.729 cv
502.876 85.0895 501.306 81.4522 499.556 77.858 cv
495.196 68.9018 489.711 60.1742 483.526 52.1339 cv
498.946 56.6959 512.931 63.6387 524.792 72.408 cv
531.524 84.4883 535.977 98.5357 538.369 114.687 cv
1 .74902 .247059 rgb
f
538.369 114.688 mo
527.898 104.698 516.151 95.5676 504.237 88.7304 cv
504.236 88.7267 504.238 88.7327 504.237 88.729 cv
516.151 95.5648 527.897 104.698 538.369 114.687 cv
538.369 114.688 li
499.556 77.858 mo
495.196 68.9017 489.711 60.1742 483.526 52.1338 cv
483.526 52.1339 li
489.711 60.1742 495.196 68.9018 499.556 77.858 cv
.87451 .623529 .247059 rgb
f
497.723 203.227 mo
502.638 192.584 505.811 181.878 506.445 171.833 cv
516.413 170.152 527.594 166.819 539.779 160.977 cv
539.257 166.396 538.455 171.713 537.392 176.895 cv
525.368 187.448 511.599 196.819 497.723 203.227 cv
489.745 173.262 mo
481.849 173.263 475.123 172.27 469.732 170.99 cv
472.195 171.575 474.937 172.099 477.941 172.497 cv
479.267 169.812 480.128 166.86 480.538 163.737 cv
489.918 159.411 496.794 153.74 501.547 147.132 cv
505.564 154.497 507.008 162.901 506.444 171.833 cv
500.422 172.849 494.84 173.262 489.745 173.262 cv
563.95 146.735 mo
564.053 146.664 564.153 146.594 564.255 146.522 cv
564.153 146.594 564.053 146.664 563.95 146.735 cv
564.367 146.444 mo
564.376 146.437 564.385 146.431 564.394 146.424 cv
564.385 146.431 564.376 146.437 564.367 146.444 cv
564.49 146.357 mo
564.493 146.355 564.492 146.355 564.495 146.353 cv
564.495 146.353 li
564.492 146.355 564.493 146.355 564.49 146.357 cv
.74902 .85098 .301961 rgb
f
480.549 128.351 mo
475.973 126.173 470.724 124.333 464.74 122.882 cv
464.739 122.881 464.74 122.882 464.739 122.881 cv
470.724 124.333 475.973 126.173 480.549 128.351 cv
480.549 128.351 li
f
464.74 122.882 mo
464.44 122.809 464.135 122.736 463.831 122.666 cv
463.831 122.666 li
464.134 122.736 464.439 122.808 464.739 122.881 cv
464.74 122.882 464.739 122.881 464.74 122.882 cv
.501961 .603922 .054902 rgb
f
487.695 132.375 mo
485.524 130.931 483.145 129.587 480.549 128.351 cv
480.549 128.351 li
483.145 129.587 485.524 130.931 487.695 132.375 cv
.623529 .72549 .301961 rgb
f
415 129.433 mo
414.025 130.408 412.441 130.408 411.465 129.433 cv
410.49 128.456 410.49 126.873 411.464 125.897 cv
412.441 124.921 414.025 124.921 415.001 125.897 cv
415.976 126.873 415.976 128.456 415 129.433 cv
cp
0 0 0 rgb
f
415 129.433 mo
414.647 129.079 li
414.256 129.47 413.747 129.664 413.233 129.664 cv
412.719 129.664 412.21 129.47 411.819 129.079 cv
411.428 128.687 411.234 128.178 411.233 127.664 cv
411.234 127.15 411.428 126.642 411.818 126.25 cv
412.21 125.859 412.719 125.665 413.233 125.665 cv
413.747 125.665 414.256 125.859 414.648 126.251 cv
415.038 126.642 415.232 127.15 415.232 127.664 cv
415.232 128.178 415.038 128.687 414.647 129.079 cv
415 129.433 li
415.354 129.786 li
415.939 129.201 416.233 128.43 416.232 127.664 cv
416.233 126.898 415.939 126.128 415.355 125.544 cv
414.77 124.959 413.999 124.664 413.233 124.665 cv
412.467 124.664 411.696 124.959 411.111 125.543 cv
410.527 126.128 410.233 126.898 410.233 127.664 cv
410.233 128.43 410.527 129.201 411.112 129.786 cv
411.696 130.371 412.467 130.665 413.233 130.664 cv
413.999 130.665 414.77 130.371 415.354 129.786 cv
415 129.433 li
cp
f
426.131 119.435 mo
425.156 120.41 423.572 120.41 422.596 119.435 cv
421.621 118.458 421.621 116.875 422.595 115.899 cv
423.572 114.923 425.156 114.923 426.132 115.899 cv
427.107 116.875 427.107 118.458 426.131 119.435 cv
cp
f
426.131 119.435 mo
425.778 119.081 li
425.386 119.472 424.877 119.666 424.364 119.666 cv
423.85 119.666 423.341 119.472 422.95 119.081 cv
422.559 118.689 422.365 118.18 422.364 117.666 cv
422.365 117.152 422.558 116.644 422.949 116.252 cv
423.341 115.861 423.85 115.667 424.364 115.667 cv
424.878 115.667 425.387 115.861 425.779 116.253 cv
426.169 116.644 426.363 117.152 426.363 117.666 cv
426.363 118.18 426.169 118.689 425.778 119.081 cv
426.131 119.435 li
426.485 119.788 li
427.07 119.203 427.364 118.432 427.363 117.666 cv
427.364 116.9 427.07 116.13 426.486 115.546 cv
425.901 114.961 425.13 114.666 424.364 114.667 cv
423.597 114.666 422.826 114.961 422.242 115.545 cv
421.658 116.13 421.364 116.9 421.364 117.666 cv
421.364 118.432 421.658 119.203 422.242 119.788 cv
422.827 120.373 423.598 120.667 424.364 120.666 cv
425.13 120.667 425.901 120.373 426.485 119.788 cv
426.131 119.435 li
cp
f
318.495 146 mo
318.495 147.381 317.376 148.5 315.995 148.5 cv
314.614 148.5 313.495 147.381 313.495 146 cv
313.495 144.619 314.614 143.5 315.995 143.5 cv
317.376 143.5 318.495 144.619 318.495 146 cv
cp
f
318.495 146 mo
317.995 146 li
317.993 147.105 317.1 147.998 315.995 148 cv
314.891 147.998 313.997 147.105 313.995 146 cv
313.997 144.895 314.891 144.002 315.995 144 cv
317.1 144.002 317.993 144.895 317.995 146 cv
318.495 146 li
318.995 146 li
318.995 144.343 317.652 143 315.995 143 cv
314.338 143 312.995 144.343 312.995 146 cv
312.995 147.657 314.338 149 315.995 149 cv
317.652 149 318.995 147.657 318.995 146 cv
318.495 146 li
cp
f
462.062 124.434 mo
461.085 123.457 461.085 121.874 462.062 120.897 cv
463.039 119.922 464.621 119.922 465.597 120.898 cv
466.574 121.874 466.574 123.457 465.597 124.434 cv
464.621 125.41 463.039 125.409 462.062 124.434 cv
cp
f
462.062 124.434 mo
462.416 124.08 li
462.024 123.688 461.83 123.179 461.83 122.666 cv
461.83 122.152 462.024 121.643 462.416 121.251 cv
462.807 120.86 463.316 120.666 463.829 120.666 cv
464.343 120.666 464.852 120.86 465.244 121.252 cv
465.635 121.643 465.829 122.152 465.83 122.666 cv
465.829 123.179 465.635 123.688 465.244 124.08 cv
464.852 124.471 464.343 124.665 463.83 124.665 cv
463.316 124.665 462.807 124.471 462.415 124.08 cv
462.062 124.434 li
461.709 124.787 li
462.293 125.372 463.064 125.666 463.83 125.665 cv
464.595 125.666 465.366 125.372 465.951 124.787 cv
466.536 124.203 466.83 123.432 466.83 122.666 cv
466.83 121.899 466.536 121.129 465.951 120.544 cv
465.366 119.959 464.595 119.665 463.829 119.666 cv
463.063 119.665 462.293 119.96 461.709 120.544 cv
461.124 121.128 460.829 121.899 460.83 122.666 cv
460.829 123.432 461.123 124.203 461.708 124.787 cv
462.062 124.434 li
cp
f
451.49 24 mo
450.109 24 448.99 22.8809 448.99 21.5 cv
448.99 20.1191 450.109 19 451.49 19 cv
452.871 19 453.99 20.1191 453.99 21.5 cv
453.99 22.8809 452.871 24 451.49 24 cv
cp
f
451.49 24 mo
451.49 23.5 li
450.385 23.498 449.492 22.6046 449.49 21.5 cv
449.492 20.3954 450.385 19.502 451.49 19.5 cv
452.594 19.502 453.488 20.3954 453.49 21.5 cv
453.488 22.6046 452.594 23.498 451.49 23.5 cv
451.49 24 li
451.49 24.5 li
453.147 24.4997 454.489 23.1571 454.49 21.5 cv
454.489 19.8429 453.147 18.5003 451.49 18.5 cv
449.833 18.5003 448.49 19.8429 448.49 21.5 cv
448.49 23.1571 449.833 24.4997 451.49 24.5 cv
451.49 24 li
cp
f
424.364 25.1289 mo
422.983 25.1289 421.864 24.0098 421.864 22.6289 cv
421.864 21.248 422.983 20.1289 424.364 20.1289 cv
425.745 20.1289 426.864 21.248 426.864 22.6289 cv
426.864 24.0098 425.745 25.1289 424.364 25.1289 cv
cp
f
424.364 25.1289 mo
424.364 24.6289 li
423.259 24.6269 422.366 23.7335 422.364 22.6289 cv
422.366 21.5243 423.259 20.6309 424.364 20.6289 cv
425.468 20.6309 426.362 21.5243 426.364 22.6289 cv
426.362 23.7335 425.468 24.6269 424.364 24.6289 cv
424.364 25.1289 li
424.364 25.6289 li
426.021 25.6286 427.363 24.286 427.364 22.6289 cv
427.363 20.9718 426.021 19.6292 424.364 19.6289 cv
422.707 19.6292 421.364 20.9718 421.364 22.6289 cv
421.364 24.286 422.707 25.6286 424.364 25.6289 cv
424.364 25.1289 li
cp
f
462.062 167.567 mo
463.039 166.591 464.621 166.591 465.597 167.567 cv
466.574 168.543 466.574 170.126 465.597 171.103 cv
464.621 172.079 463.039 172.079 462.062 171.103 cv
461.085 170.126 461.085 168.543 462.062 167.567 cv
cp
f
462.062 167.567 mo
462.415 167.921 li
462.807 167.529 463.316 167.335 463.83 167.335 cv
464.343 167.335 464.852 167.529 465.244 167.921 cv
465.635 168.312 465.829 168.821 465.83 169.335 cv
465.829 169.848 465.635 170.357 465.244 170.749 cv
464.852 171.14 464.343 171.334 463.83 171.335 cv
463.316 171.334 462.807 171.14 462.415 170.749 cv
462.024 170.357 461.83 169.848 461.83 169.335 cv
461.83 168.821 462.024 168.312 462.415 167.921 cv
462.062 167.567 li
461.709 167.213 li
461.124 167.798 460.829 168.568 460.83 169.335 cv
460.829 170.101 461.123 170.871 461.708 171.456 cv
462.293 172.041 463.064 172.335 463.83 172.335 cv
464.595 172.335 465.366 172.041 465.951 171.456 cv
466.536 170.871 466.83 170.101 466.83 169.335 cv
466.83 168.568 466.536 167.798 465.951 167.213 cv
465.366 166.629 464.596 166.334 463.83 166.335 cv
463.064 166.334 462.293 166.629 461.709 167.213 cv
462.062 167.567 li
cp
f
562.496 146 mo
562.496 144.619 563.615 143.5 564.996 143.5 cv
566.376 143.5 567.496 144.619 567.496 146 cv
567.496 147.381 566.376 148.5 564.996 148.5 cv
563.615 148.5 562.496 147.381 562.496 146 cv
cp
f
562.496 146 mo
562.996 146 li
562.998 144.895 563.891 144.002 564.996 144 cv
566.1 144.002 566.994 144.895 566.996 146 cv
566.994 147.105 566.1 147.998 564.996 148 cv
563.891 147.998 562.998 147.105 562.996 146 cv
562.496 146 li
561.996 146 li
561.996 147.657 563.338 149 564.996 149 cv
566.653 149 567.995 147.657 567.996 146 cv
567.995 144.343 566.653 143 564.996 143 cv
563.338 143 561.996 144.343 561.996 146 cv
562.496 146 li
cp
f
418.929 167.567 mo
419.904 168.543 419.906 170.126 418.929 171.103 cv
417.953 172.079 416.369 172.079 415.392 171.103 cv
414.417 170.126 414.417 168.543 415.392 167.567 cv
416.369 166.59 417.953 166.591 418.929 167.567 cv
cp
f
418.929 167.567 mo
418.575 167.92 li
418.966 168.312 419.16 168.822 419.161 169.335 cv
419.16 169.849 418.967 170.357 418.576 170.749 cv
418.184 171.14 417.675 171.334 417.161 171.335 cv
416.647 171.334 416.137 171.14 415.746 170.749 cv
415.355 170.357 415.161 169.848 415.16 169.335 cv
415.161 168.821 415.355 168.312 415.746 167.92 cv
416.137 167.529 416.647 167.335 417.161 167.335 cv
417.674 167.335 418.184 167.529 418.576 167.921 cv
418.929 167.567 li
419.283 167.213 li
418.698 166.629 417.927 166.334 417.161 166.335 cv
416.394 166.334 415.623 166.628 415.039 167.213 cv
414.454 167.798 414.16 168.568 414.16 169.335 cv
414.16 170.101 414.454 170.871 415.038 171.456 cv
415.623 172.041 416.394 172.335 417.161 172.335 cv
417.927 172.335 418.698 172.041 419.283 171.456 cv
419.867 170.872 420.161 170.101 420.161 169.335 cv
420.161 168.569 419.867 167.798 419.283 167.214 cv
418.929 167.567 li
cp
f
440.496 268 mo
441.876 268 442.996 269.119 442.996 270.5 cv
442.996 271.881 441.876 273 440.496 273 cv
439.115 273 437.996 271.881 437.996 270.5 cv
437.996 269.119 439.115 268 440.496 268 cv
cp
f
440.496 268 mo
440.496 268.5 li
441.6 268.502 442.494 269.395 442.496 270.5 cv
442.494 271.605 441.6 272.498 440.496 272.5 cv
439.391 272.498 438.498 271.605 438.496 270.5 cv
438.498 269.395 439.391 268.502 440.496 268.5 cv
440.496 268 li
440.496 267.5 li
438.838 267.5 437.496 268.843 437.496 270.5 cv
437.496 272.157 438.838 273.5 440.496 273.5 cv
442.153 273.5 443.495 272.157 443.496 270.5 cv
443.495 268.843 442.153 267.5 440.496 267.5 cv
440.496 268 li
cp
f
424.717 118.02 mo
434.299 108.44 443.763 104.206 452.395 104.206 cv
460.021 104.208 467.048 107.503 473.023 113.473 cv
477.94 118.392 480.316 125.142 480.318 132.657 cv
480.322 144.407 474.473 157.988 463.476 168.981 cv
464.183 169.689 li
475.341 158.527 481.314 144.737 481.318 132.657 cv
481.32 124.937 478.864 117.899 473.73 112.766 cv
467.615 106.648 460.318 103.204 452.395 103.206 cv
443.424 103.206 433.712 107.608 424.01 117.313 cv
424.717 118.02 li
cp
.968627 .576471 .117647 rgb
f
427.207 48.3965 mo
427.008 48.187 li
427.199 48.4046 li
427.207 48.3965 li
427.008 48.187 li
427.199 48.4046 li
427.307 48.3278 li
427.861 47.966 430.801 46.4963 440.496 46.5 cv
474.766 46.4993 505.784 57.6596 528.217 75.6791 cv
550.652 93.7018 564.495 118.559 564.496 146 cv
565.496 146 li
565.496 118.212 551.469 93.0696 528.843 74.8995 cv
506.216 56.7261 474.984 45.5007 440.496 45.5 cv
428.948 45.5068 426.695 47.5214 426.518 47.6719 cv
427.207 48.3965 li
cp
f
463.476 123.019 mo
474.473 134.012 480.321 147.593 480.318 159.343 cv
480.316 166.858 477.94 173.608 473.022 178.527 cv
468.103 183.445 461.353 185.821 453.838 185.823 cv
442.088 185.826 428.507 179.978 417.514 168.981 cv
416.807 169.689 li
427.968 180.846 441.758 186.819 453.838 186.823 cv
461.558 186.824 468.596 184.369 473.729 179.234 cv
478.864 174.101 481.319 167.063 481.318 159.343 cv
481.314 147.263 475.341 133.473 464.183 122.312 cv
463.476 123.019 li
cp
f
451.372 21.986 mo
482.046 29.4087 504.166 43.2772 518.651 63.8326 cv
533.134 84.3895 539.995 111.683 539.996 146 cv
539.996 180.271 528.836 211.289 510.816 233.722 cv
492.794 256.156 467.936 269.999 440.496 270 cv
440.496 271 li
468.283 271 493.426 256.973 511.596 234.348 cv
529.769 211.721 540.995 180.488 540.996 146 cv
540.996 111.557 534.11 84.0402 519.468 63.2567 cv
504.828 42.4718 482.445 28.4702 451.607 21.014 cv
451.372 21.986 li
cp
f
463.476 168.981 mo
452.483 179.978 438.902 185.826 427.152 185.822 cv
419.637 185.82 412.887 183.445 407.968 178.527 cv
402.237 172.793 399.176 165.484 399.174 157.523 cv
399.173 147.859 403.7 137.211 413.586 127.324 cv
412.879 126.617 li
402.849 136.645 398.174 147.54 398.174 157.523 cv
398.172 165.742 401.352 173.328 407.261 179.234 cv
412.394 184.369 419.431 186.824 427.152 186.822 cv
439.232 186.819 453.022 180.846 464.183 169.689 cv
463.476 168.981 li
cp
f
564.496 146 mo
564.495 173.441 550.652 198.298 528.217 216.321 cv
505.784 234.34 474.767 245.501 440.496 245.5 cv
406.224 245.501 375.207 234.34 352.774 216.321 cv
330.339 198.298 316.496 173.441 316.495 146 cv
315.495 146 li
315.495 173.788 329.522 198.93 352.147 217.101 cv
374.775 235.274 406.007 246.499 440.496 246.5 cv
474.984 246.499 506.216 235.274 528.844 217.101 cv
551.469 198.93 565.496 173.788 565.496 146 cv
564.496 146 li
cp
f
417.515 168.983 mo
403.051 154.42 398.529 136.708 398.526 120.183 cv
398.525 106.391 401.688 93.4464 404.854 83.956 cv
406.437 79.2108 408.02 75.3291 409.206 72.636 cv
409.799 71.2894 410.293 70.24 410.638 69.5283 cv
410.81 69.1725 410.946 68.9011 411.037 68.7192 cv
411.129 68.5373 411.177 68.4473 411.177 68.4471 cv
410.291 67.9826 li
410.276 68.02 397.532 92.2962 397.526 120.183 cv
397.522 136.881 402.117 154.905 416.806 169.687 cv
417.515 168.983 li
cp
f
440.496 270 mo
413.055 269.999 388.197 256.156 370.175 233.722 cv
352.155 211.289 340.995 180.271 340.996 146 cv
340.996 111.68 347.505 85.197 361.173 65.1867 cv
374.841 45.1776 395.685 31.5898 424.505 23.1086 cv
424.223 22.1492 li
395.256 30.668 374.166 44.386 360.347 64.6227 cv
346.527 84.8582 339.995 111.56 339.996 146 cv
339.996 180.488 351.222 211.721 369.395 234.348 cv
387.565 256.973 412.708 271 440.496 271 cv
440.496 270 li
cp
f
451.082 21.211 mo
427.491 54.5134 420.941 80.1059 420.942 98.1852 cv
420.942 106.211 422.232 112.752 423.888 117.822 cv
424.839 117.511 li
423.214 112.537 421.942 106.103 421.942 98.1852 cv
421.943 80.3527 428.396 54.9703 451.898 21.789 cv
451.082 21.211 li
cp
f
423.956 22.3399 mo
408.2 44.5794 403.452 65.1552 403.454 82.4569 cv
403.453 102.627 409.897 118.361 412.758 127.125 cv
413.708 126.815 li
410.825 117.993 404.455 102.421 404.454 82.4569 cv
404.456 65.3379 409.133 44.9999 424.772 22.9179 cv
423.956 22.3399 li
cp
f
451.082 21.789 mo
467.196 44.5432 471.944 64.7265 471.947 81.403 cv
471.946 99.7952 466.163 113.915 463.354 122.51 cv
464.305 122.821 li
467.091 114.284 472.948 99.9988 472.947 81.403 cv
472.949 64.5346 468.124 44.1137 451.898 21.211 cv
451.082 21.789 li
cp
1 0 0 rgb
f
315.706 146.408 mo
346.106 167.943 372.087 173.764 391.246 173.762 cv
402.412 173.762 411.258 171.788 417.316 169.81 cv
417.005 168.859 li
411.034 170.809 402.293 172.762 391.246 172.762 cv
372.291 172.761 346.537 167.019 316.284 145.592 cv
315.706 146.408 li
cp
f
316.284 146.408 mo
343.329 127.255 365.507 122.015 382.616 122.013 cv
395.8 122.013 405.98 125.128 413.078 127.446 cv
413.388 126.495 li
406.269 124.17 395.957 121.012 382.616 121.013 cv
365.298 121.011 342.886 126.337 315.706 145.592 cv
316.284 146.408 li
cp
f
440.904 270.789 mo
462.439 240.39 468.259 214.409 468.257 195.25 cv
468.257 184.084 466.283 175.237 464.305 169.179 cv
463.354 169.49 li
465.304 175.461 467.257 184.202 467.257 195.25 cv
467.256 214.205 461.514 239.959 440.088 270.211 cv
440.904 270.789 li
cp
f
440.904 270.211 mo
419.477 239.958 413.734 214.204 413.733 195.248 cv
413.733 184.201 415.686 175.461 417.636 169.49 cv
416.685 169.179 li
414.707 175.237 412.733 184.083 412.733 195.248 cv
412.731 214.407 418.552 240.389 440.088 270.789 cv
440.904 270.211 li
cp
f
565.285 145.592 mo
534.885 124.057 508.903 118.236 489.744 118.238 cv
478.578 118.238 469.732 120.212 463.674 122.19 cv
463.985 123.141 li
469.956 121.191 478.696 119.238 489.744 119.238 cv
508.7 119.239 534.454 124.981 564.707 146.408 cv
565.285 145.592 li
cp
f
564.707 145.592 mo
534.454 167.019 508.7 172.761 489.744 172.762 cv
478.696 172.762 469.956 170.809 463.985 168.859 cv
463.674 169.81 li
469.732 171.788 478.578 173.762 489.744 173.762 cv
508.903 173.764 534.885 167.943 565.285 146.408 cv
564.707 145.592 li
cp
f
417.274 168.848 mo
399.876 164.789 387.941 157.558 380.346 148.386 cv
372.753 139.212 369.476 128.074 369.474 116.114 cv
369.471 99.2191 376.043 80.7068 386.236 64.0445 cv
396.427 47.3813 410.236 32.5693 424.64 23.046 cv
424.088 22.2118 li
409.535 31.8374 395.648 46.7429 385.383 63.5227 cv
375.121 80.3034 368.477 98.9593 368.474 116.114 cv
368.472 128.252 371.813 139.649 379.576 149.023 cv
387.338 158.399 399.496 165.73 417.047 169.821 cv
417.274 168.848 li
cp
f
451.214 21.9171 mo
466.009 31.6989 480.64 47.1627 491.553 64.5216 cv
502.47 81.8794 509.663 101.133 509.66 118.458 cv
509.658 129.945 506.512 140.574 499.217 149.318 cv
491.921 158.062 480.45 164.944 463.716 168.848 cv
463.943 169.821 li
480.827 165.885 492.521 158.906 499.985 149.959 cv
507.451 141.014 510.662 130.124 510.66 118.458 cv
510.657 100.856 503.383 81.4624 492.4 63.9893 cv
481.412 46.5173 466.708 30.9661 451.766 21.0829 cv
451.214 21.9171 li
cp
f
315.578 146.276 mo
325.967 161.983 342.623 178.531 361.191 191.175 cv
379.76 203.814 400.235 212.56 418.318 212.565 cv
428.821 212.568 438.528 209.597 446.499 202.699 cv
454.471 195.804 460.687 185.014 464.316 169.448 cv
463.343 169.221 li
459.745 184.645 453.616 195.221 445.845 201.943 cv
438.072 208.664 428.638 211.563 418.318 211.565 cv
400.559 211.571 380.214 202.923 361.754 190.349 cv
343.291 177.78 326.707 161.295 316.412 145.724 cv
315.578 146.276 li
cp
f
316.412 146.276 mo
332.705 121.635 356.342 102.22 375.907 88.978 cv
385.689 82.3566 394.452 77.2773 400.768 73.8546 cv
403.925 72.1432 406.471 70.8459 408.226 69.9771 cv
409.104 69.5426 409.784 69.2153 410.244 68.9968 cv
410.704 68.7783 410.941 68.67 410.942 68.6696 cv
410.526 67.76 li
410.492 67.7841 348.396 96.1175 315.578 145.724 cv
316.412 146.276 li
cp
.968627 .576471 .117647 rgb
f
426.647 48.4852 mo
426.77 48.2278 li
426.638 48.4806 li
426.647 48.4852 li
426.77 48.2278 li
426.638 48.4806 li
426.751 48.5538 li
427.345 48.963 430.215 51.3865 436.058 61.7831 cv
441.905 72.1794 450.743 90.5448 463.364 122.847 cv
464.295 122.484 li
450.607 87.4499 441.358 68.7728 435.516 58.8327 cv
429.666 48.8954 427.253 47.6792 427.079 47.5831 cv
426.647 48.4852 li
cp
f
565.413 145.724 mo
554.819 129.707 538.445 112.281 520.439 98.8383 cv
502.43 85.4011 482.797 75.9271 465.603 75.919 cv
456.164 75.9154 447.451 78.7989 440.253 85.4659 cv
433.053 92.1311 427.377 102.542 423.877 117.553 cv
424.851 117.78 li
428.321 102.898 433.925 92.685 440.932 86.1997 cv
447.941 79.7162 456.362 76.9225 465.603 76.919 cv
482.427 76.9108 501.935 86.2666 519.841 99.6396 cv
537.749 113.007 554.063 130.372 564.578 146.276 cv
565.413 145.724 li
cp
1 0 0 rgb
f
564.578 145.724 mo
554.283 161.295 537.699 177.78 519.236 190.349 cv
500.775 202.923 480.43 211.571 462.672 211.565 cv
452.352 211.563 442.917 208.664 435.145 201.943 cv
427.373 195.221 421.245 184.645 417.648 169.221 cv
416.674 169.448 li
420.303 185.014 426.518 195.804 434.49 202.699 cv
442.461 209.597 452.169 212.568 462.672 212.565 cv
480.754 212.56 501.23 203.814 519.799 191.175 cv
538.367 178.531 555.023 161.983 565.413 146.276 cv
564.579 145.724 li
cp
f
440.771 270.917 mo
456.479 260.528 473.027 243.872 485.671 225.304 cv
498.309 206.735 507.055 186.26 507.06 168.177 cv
507.063 157.674 504.092 147.966 497.194 139.996 cv
490.299 132.024 479.509 125.808 463.943 122.179 cv
463.716 123.152 li
479.14 126.75 489.716 132.878 496.438 140.65 cv
503.159 148.422 506.058 157.857 506.06 168.177 cv
506.066 185.936 497.418 206.28 484.844 224.741 cv
472.275 243.204 455.791 259.788 440.22 270.083 cv
440.771 270.917 li
cp
f
440.771 270.083 mo
424.939 259.615 407.764 243.097 394.57 224.873 cv
381.371 206.652 372.168 186.717 372.175 169.486 cv
372.178 159.91 374.995 151.179 381.529 143.943 cv
388.064 136.708 398.351 130.954 413.346 127.457 cv
413.119 126.483 li
397.991 130.011 387.5 135.842 380.787 143.273 cv
374.072 150.702 371.172 159.717 371.175 169.486 cv
371.182 187.072 380.496 207.133 393.76 225.46 cv
407.03 243.784 424.265 260.365 440.22 270.917 cv
440.771 270.083 li
cp
f
143.5 287 mo
64.2471 287 0 222.753 0 143.5 cv
0 64.2471 64.2471 0 143.5 0 cv
222.753 0 287 64.2471 287 143.5 cv
287 222.753 222.753 287 143.5 287 cv
143.5 21.0001 mo
74.4639 21.0003 18.4998 76.9638 18.4995 146 cv
18.4998 215.036 74.4638 271 143.5 271 cv
212.535 271 268.5 215.036 268.5 146 cv
268.5 146 li
268.5 146 li
268.5 76.9639 212.535 21.0003 143.5 21.0001 cv
level3{
gsave
clp
[143.5 0 0 143.5 143.5 143.5 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 ]
/C1 [.94902 .94902 .94902 ]
/N 4.97729 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[143.5 0 0 143.5 143.5 143.5 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E6'!WiE)!WiH+!s8W-!sA`0"9\l3"U,)7"pP;;#6tM
?#RLeE$47.K$k*OR%1WjY%hK9a&eYik'GV>u(Dmu,)B0Y9*?H:F+X/-V,pjuf.4Zr$/hf"81c70N3BK>
e5X@b+7S$-F:/Fhf<`iO1?=78SB527$EHHDMI"-a%LPh+SPa@i1TqnWfYHt[K^;@n4cI1>!hrO"g~>
<~zzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E6'!WiE)!WiH+!s8W-!sA`0"9\l3"U,)7"pP;;#6tM
?#RLeE$47.K$k*OR%1WjY%hK9a&eYik'GV>u(Dmu,)B0Y9*?H:F+X/-V,pjuf.4Zr$/hf"81c70N3BK>
e5X@b+7S$-F:/Fhf<`iO1?=78SB527$EHHDMI"-a%LPh+SPa@i1TqnWfYHt[K^;@n4cI1>!hrO"g~>
<~zzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E6'!WiE)!WiH+!s8W-!sA`0"9\l3"U,)7"pP;;#6tM
?#RLeE$47.K$k*OR%1WjY%hK9a&eYik'GV>u(Dmu,)B0Y9*?H:F+X/-V,pjuf.4Zr$/hf"81c70N3BK>
e5X@b+7S$-F:/Fhf<`iO1?=78SB527$EHHDMI"-a%LPh+SPa@i1TqnWfYHt[K^;@n4cI1>!hrO"g~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
268 146 mo
268 214.759 212.259 270.5 143.5 270.5 cv
74.7402 270.5 18.9995 214.759 18.9995 146 cv
18.9995 77.2402 74.7402 21.5 143.5 21.5 cv
212.259 21.5 268 77.2402 268 146 cv
1 1 1 rgb
f
268 146 mo
267.5 146 li
267.5 180.243 253.621 211.24 231.181 233.681 cv
208.74 256.122 177.743 270 143.5 270 cv
109.257 270 78.2596 256.122 55.8184 233.681 cv
33.3778 211.24 19.4998 180.243 19.4995 146 cv
19.4998 111.757 33.378 80.7598 55.8184 58.3186 cv
78.2596 35.8783 109.257 22.0002 143.5 22 cv
177.743 22.0002 208.74 35.8783 231.181 58.3186 cv
253.621 80.7598 267.5 111.756 267.5 146 cv
268 146 li
268.5 146 li
268.5 76.9639 212.535 21.0003 143.5 21.0001 cv
74.4639 21.0003 18.4998 76.9638 18.4995 146 cv
18.4998 215.036 74.4638 271 143.5 271 cv
212.535 271 268.5 215.036 268.5 146 cv
268 146 li
0 0 0 rgb
f
143.5 179 mo
134.484 179 126.312 175.384 120.356 169.524 cv
120.293 169.461 120.229 169.398 120.166 169.335 cv
120.166 169.335 li
120.166 169.336 120.166 169.335 120.166 169.335 cv
120.166 169.335 120.166 169.335 120.166 169.335 cv
120.166 169.335 li
114.194 163.363 110.5 155.113 110.5 146 cv
110.5 137.01 114.095 128.859 119.926 122.907 cv
120.005 122.827 120.086 122.746 120.166 122.666 cv
120.166 122.666 li
126.136 116.695 134.387 113 143.5 113 cv
152.515 113 160.686 116.616 166.642 122.475 cv
166.707 122.539 166.77 122.601 166.834 122.666 cv
166.834 122.666 li
166.834 122.665 166.834 122.665 166.834 122.665 cv
166.834 122.665 166.834 122.665 166.834 122.665 cv
166.834 122.665 li
172.806 128.637 176.5 136.887 176.5 146 cv
176.5 154.985 172.91 163.131 167.085 169.081 cv
167.001 169.166 166.918 169.25 166.834 169.334 cv
166.834 169.334 li
160.864 175.307 152.614 179 143.5 179 cv
level3{
gsave
clp
[33 0 0 33 143.5 146 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .94902 .94902 ]
/C1 [.4 .4 .4 ]
/N 2.96295 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33 0 0 33 143.5 146 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o'u8?naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naQ&;nF5r:nF5r:nF5o8
n*f`6n*f]4mdBN2mdBK0mHs<.m-O**m-F!'lg*j$lK[Wul07Eqkih3mkN:phjlPUbjQ,@]j5T(XiSi_Q
i8<GKhVI#Cgt^Z=g=k65f\"g,f%&=#eC2jodF$=ecd'e[bfe2PaiVWE`l?!9_o'@-^q[Xu]tCtg\[f5Z
[^EKKZE^X;Y-"e+Wi;qpVPU)`TqJ$LSXc1;R$X,'PEM&hNfB!TM26n?K7\Z(IXHKgG^":PEcH#7ChdZs
~>
<~o'u8?naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naQ&;nF5r:nF5r:nF5o8
n*f`6n*f]4mdBN2mdBK0mHs<.m-O**m-F!'lg*j$lK[Wul07Eqkih3mkN:phjlPUbjQ,@]j5T(XiSi_Q
i8<GKhVI#Cgt^Z=g=k65f\"g,f%&=#eC2jodF$=ecd'e[bfe2PaiVWE`l?!9_o'@-^q[Xu]tCtg\[f5Z
[^EKKZE^X;Y-"e+Wi;qpVPU)`TqJ$LSXc1;R$X,'PEM&hNfB!TM26n?K7\Z(IXHKgG^":PEcH#7ChdZs
~>
<~o'u8?naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naQ&;nF5r:nF5r:nF5o8
n*f`6n*f]4mdBN2mdBK0mHs<.m-O**m-F!'lg*j$lK[Wul07Eqkih3mkN:phjlPUbjQ,@]j5T(XiSi_Q
i8<GKhVI#Cgt^Z=g=k65f\"g,f%&=#eC2jodF$=ecd'e[bfe2PaiVWE`l?!9_o'@-^q[Xu]tCtg\[f5Z
[^EKKZE^X;Y-"e+Wi;qpVPU)`TqJ$LSXc1;R$X,'PEM&hNfB!TM26n?K7\Z(IXHKgG^":PEcH#7ChdZs
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
120.165 169.335 mo
120.165 169.335 li
120.164 169.335 120.164 169.335 120.164 169.335 cv
115.531 168.254 111.33 166.946 107.532 165.431 cv
106.115 164.865 104.753 164.271 103.447 163.649 cv
102.74 158.14 103.432 152.093 105.438 146.001 cv
108.099 154.083 113.073 162.242 120.165 169.335 cv
83.0917 146.001 mo
83.0907 146 li
87.251 138.952 93.8648 132.912 103.447 128.351 cv
103.446 128.352 li
93.8645 132.913 87.2521 138.954 83.0917 146.001 cv
19.5 145.647 mo
19.5004 145.513 19.5009 145.381 19.5017 145.248 cv
21.5769 142.164 23.8933 139.048 26.4161 135.939 cv
32.1938 128.818 39.0544 121.729 46.6031 115.105 cv
45.5404 120.287 44.738 125.604 44.2161 131.023 cv
41.1165 132.509 37.9564 134.156 34.73 135.981 cv
29.7947 138.772 24.7123 141.978 19.5 145.647 cv
.498039 1 1 rgb
f
18.9999 146 mo
19.1656 145.749 19.3329 145.499 19.5017 145.248 cv
19.5009 145.381 19.5004 145.513 19.5 145.647 cv
19.3333 145.764 19.1665 145.882 18.9995 146 cv
0 .501961 .501961 rgb
f
120.165 122.666 mo
118.288 122.052 116.141 121.44 113.736 120.886 cv
108.436 119.667 101.891 118.738 94.2502 118.738 cv
89.156 118.738 83.5737 119.151 77.5511 120.167 cv
77.5511 120.166 li
77.5507 120.167 li
78.1848 110.122 81.3571 99.4159 86.2722 88.7731 cv
86.2725 88.773 li
86.273 88.7718 li
96.9158 83.858 107.622 80.683 117.666 80.0507 cv
117.666 80.0516 li
117.667 80.0516 li
115.795 91.1456 115.969 100.74 117.003 108.555 cv
117.002 108.555 li
117.754 114.234 118.959 118.974 120.165 122.666 cv
125.851 105.947 mo
130.411 96.3652 136.451 89.7511 143.498 85.5907 cv
143.5 85.5922 li
136.453 89.7525 130.412 96.3651 125.851 105.947 cv
125.85 105.947 125.852 105.947 125.851 105.947 cv
112.605 49.1032 mo
121.994 38.4037 132.321 29.0826 142.339 22.2779 cv
142.476 22.1854 142.611 22.0938 142.747 22.0023 cv
142.881 22.0015 143.013 22.0009 143.146 22.0005 cv
137.08 30.6204 132.283 38.8755 128.523 46.7162 cv
123.104 47.2381 117.787 48.0405 112.605 49.1032 cv
.498039 1 1 rgb
f
142.747 22.0023 mo
142.998 21.8334 143.249 21.6657 143.5 21.5 cv
143.382 21.6665 143.264 21.8338 143.146 22.0005 cv
143.013 22.0009 142.881 22.0015 142.747 22.0023 cv
0 .501961 .501961 rgb
f
166.834 122.665 mo
166.77 122.6 166.707 122.538 166.642 122.475 cv
159.595 115.485 151.507 110.575 143.498 107.938 cv
148.04 106.442 152.556 105.677 156.843 105.677 cv
158.307 105.677 159.746 105.767 161.148 105.947 cv
163.435 110.751 165.35 116.303 166.834 122.666 cv
.498039 1 1 rgb
f
166.834 122.666 mo
166.77 122.601 166.707 122.539 166.642 122.475 cv
166.707 122.538 166.77 122.6 166.834 122.665 cv
166.834 122.666 166.834 122.666 166.834 122.666 cv
level3{
gsave
clp
[33 0 0 33 143.5 146 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.47451 .976471 .976471 ]
/C1 [.2 .701961 .701961 ]
/N 2.96295 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33 0 0 33 143.5 146 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+FV
GB\7TGB\7TGB\7TGB\4RG'8%PG'8%PG'.qMF`hhLF`heJFEDVHFEDSFF)uDDEcQ2@EcQ/>EH,u<E,]c8
E,TZ5Df0H1DJj<.D/F**Ci!m&CMIU!C2%BrBP;'lB4kggAn>ObA7T4\@q/tW@:<SP?sd8J?=$oC>[1N<
>?Y35=]ed-=&r@%<E)pr;c6Lj:f'q`:/4MW9M8#N8P)HC7n,s:6psC/5s[b#5<_4n4?GSb3B/rU2Dm<I
~>
<~q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XUX
p\4FVp\4FVp\4FVp\4CTp@e4Rp@e4Rp@\+Op%A"Np%@tLo^qeJo^qbHoCMSFo()ABo()>@naZ/>nF5r:
nF,i7n*]W3mdBK0mHs9,m-O'(lg!d#lKRQtkih6nkND!ik2k^djQ,C^j5].YiSibRi8<GLhVR)Egt^]>
gY1B7g"=s/f@JO'e^W*te'c[ld*U+bcHa\Ybfe2PaiVWEa2Z-<`5KR1_83q%^V7Cp]Xtbd\[],W[^EKK
~>
<~q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XUX
p\4FVp\4FVp\4FVp\4CTp@e4Rp@e4Rp@\+Op%A"Np%@tLo^qeJo^qbHoCMSFo()ABo()>@naZ/>nF5r:
nF,i7n*]W3mdBK0mHs9,m-O'(lg!d#lKRQtkih6nkND!ik2k^djQ,C^j5].YiSibRi8<GLhVR)Egt^]>
gY1B7g"=s/f@JO'e^W*te'c[ld*U+bcHa\Ybfe2PaiVWEa2Z-<`5KR1_83q%^V7Cp]Xtbd\[],W[^EKK
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
142.747 269.998 mo
137.892 269.969 133.106 269.661 128.399 269.09 cv
103.083 264.315 80.8763 247.718 65.5326 223.967 cv
79.1617 232.772 95.1413 239.316 112.604 242.897 cv
122.122 253.742 132.601 263.17 142.747 269.998 cv
106.055 172.497 mo
104.716 169.786 103.852 166.806 103.447 163.649 cv
104.753 164.271 106.115 164.865 107.532 165.431 cv
111.33 166.946 115.532 168.255 120.165 169.335 cv
116.472 170.54 111.733 171.746 106.055 172.497 cv
77.5517 171.834 mo
61.1684 169.07 41.516 161.848 19.5 146.353 cv
19.4997 146.236 19.4995 146.117 19.4995 146 cv
19.4995 145.883 19.4997 145.764 19.5 145.647 cv
24.7122 141.979 29.7948 138.772 34.73 135.981 cv
37.9564 134.156 41.1165 132.51 44.216 131.024 cv
44.2161 131.023 li
56.4014 125.181 67.5819 121.848 77.5507 120.167 cv
77.5506 120.167 li
77.5511 120.167 li
76.9581 129.56 78.586 138.369 83.0907 146 cv
83.0905 146 li
83.0915 146.002 li
78.5867 153.632 76.9589 162.44 77.5517 171.834 cv
.984314 .788235 .556863 rgb
f
143.5 270.5 mo
138.366 270.5 133.325 270.019 128.399 269.09 cv
133.106 269.661 137.892 269.969 142.747 269.998 cv
142.998 270.167 143.249 270.334 143.5 270.5 cv
143.5 270.5 143.5 270.5 143.5 270.5 cv
19.5 146.353 mo
19.3333 146.236 19.1669 146.118 18.9999 146 cv
18.9999 146 li
18.9999 146 li
18.9999 146 li
18.9995 146 18.9995 146 18.9995 146 cv
18.9995 146 li
18.9999 146 18.9999 146 18.9999 146 cv
18.9999 146 li
19.1669 145.882 19.3333 145.764 19.5 145.647 cv
19.4997 145.764 19.4995 145.883 19.4995 146 cv
19.4995 146.117 19.4997 146.236 19.5 146.353 cv
.486274 .290196 .0588235 rgb
f
103.447 128.351 mo
103.852 125.194 104.716 122.214 106.055 119.503 cv
108.846 119.872 111.412 120.352 113.736 120.886 cv
116.14 121.44 118.287 122.052 120.164 122.666 cv
113.802 124.149 108.251 126.064 103.447 128.351 cv
46.6031 115.105 mo
46.6033 115.104 li
58.631 104.548 72.3931 95.1802 86.2727 88.7719 cv
86.2722 88.7731 li
72.3963 95.1811 58.6275 104.552 46.6031 115.105 cv
65.5328 68.0326 mo
80.8765 44.2818 103.084 27.6849 128.4 22.91 cv
133.108 22.3386 137.892 22.0311 142.747 22.0023 cv
142.611 22.0938 142.476 22.1854 142.339 22.2779 cv
132.321 29.0826 121.994 38.4037 112.604 49.1032 cv
95.1415 52.6844 79.1619 59.2278 65.5328 68.0326 cv
.984314 .788235 .556863 rgb
f
128.4 22.91 mo
133.326 21.9811 138.366 21.5 143.5 21.5 cv
143.5 21.4995 143.5 21.4995 143.5 21.4995 cv
143.249 21.6657 142.998 21.8334 142.747 22.0023 cv
137.892 22.0311 133.108 22.3386 128.4 22.91 cv
.486274 .290196 .0588235 rgb
f
120.165 169.335 mo
115.532 168.255 111.33 166.946 107.532 165.431 cv
111.33 166.946 115.531 168.254 120.164 169.335 cv
120.164 169.335 li
19.5 145.647 mo
19.5 145.647 li
24.7123 141.978 29.7947 138.772 34.73 135.981 cv
29.7948 138.772 24.7122 141.979 19.5 145.647 cv
.733333 .788235 .556863 rgb
f
18.9999 146 mo
18.9999 146 li
18.9999 146 li
18.9999 146 li
19.1665 145.882 19.3333 145.764 19.5 145.647 cv
19.5 145.647 li
19.3333 145.764 19.1669 145.882 18.9999 146 cv
.486274 .541176 .309804 rgb
f
83.0907 146 mo
78.586 138.369 76.9581 129.56 77.5511 120.167 cv
83.5737 119.151 89.156 118.738 94.2502 118.738 cv
101.891 118.738 108.436 119.667 113.736 120.886 cv
111.412 120.352 108.846 119.872 106.055 119.503 cv
104.716 122.214 103.852 125.194 103.447 128.351 cv
93.8648 132.912 87.251 138.952 83.0907 146 cv
44.2161 131.023 mo
44.738 125.604 45.5404 120.287 46.6031 115.105 cv
58.6275 104.552 72.3963 95.1811 86.2722 88.7731 cv
81.3571 99.4159 78.1848 110.122 77.5507 120.167 cv
67.5819 121.848 56.4014 125.181 44.2161 131.023 cv
142.339 22.2779 mo
142.476 22.1854 142.611 22.0938 142.747 22.0023 cv
142.747 22.0023 li
142.611 22.0938 142.476 22.1854 142.339 22.2779 cv
.733333 .788235 .556863 rgb
f
142.747 22.0023 mo
142.998 21.8334 143.249 21.6657 143.5 21.5 cv
143.5 21.4995 143.5 21.4995 143.5 21.4995 cv
143.249 21.6657 142.998 21.8334 142.747 22.0023 cv
142.747 22.0023 li
.486274 .541176 .309804 rgb
f
166.836 169.333 mo
166.919 169.25 167.003 169.165 167.085 169.081 cv
174.044 162.048 178.933 153.984 181.562 145.999 cv
183.568 152.091 184.26 158.139 183.554 163.647 cv
178.749 165.934 173.196 167.85 166.834 169.334 cv
203.908 145.999 mo
200.355 139.981 195.014 134.697 187.563 130.442 cv
195.014 134.697 200.356 139.98 203.908 145.998 cv
203.908 145.999 li
267.5 145.647 mo
258.88 139.58 250.625 134.783 242.784 131.023 cv
242.262 125.604 241.46 120.287 240.397 115.105 cv
251.242 124.622 260.67 135.101 267.498 145.247 cv
267.499 145.381 267.499 145.513 267.5 145.647 cv
166.834 122.665 mo
166.834 122.665 li
168.04 118.973 169.245 114.233 169.997 108.555 cv
169.997 108.555 li
171.031 100.739 171.204 91.1446 169.333 80.0507 cv
179.378 80.6848 190.085 83.8577 200.728 88.7728 cv
205.643 99.4155 208.815 110.122 209.449 120.167 cv
203.424 119.15 197.845 118.738 192.75 118.738 cv
188.462 118.738 184.516 119.031 180.945 119.503 cv
180.945 119.502 li
175.264 120.253 170.527 121.459 166.834 122.665 cv
161.148 105.947 mo
161.148 105.947 li
161.119 105.884 161.088 105.821 161.058 105.759 cv
161.088 105.821 161.119 105.884 161.148 105.947 cv
174.395 49.1032 mo
169.213 48.0405 163.896 47.2381 158.477 46.7162 cv
154.717 38.8755 149.92 30.6204 143.854 22.0005 cv
143.987 22.0009 144.119 22.0015 144.253 22.0023 cv
154.399 28.8299 164.878 38.2582 174.395 49.1032 cv
.498039 .498039 1 rgb
f
268 146 mo
267.956 145.969 267.916 145.941 267.873 145.91 cv
267.814 145.868 267.754 145.826 267.695 145.784 cv
267.675 145.77 267.652 145.754 267.631 145.739 cv
267.587 145.708 267.543 145.677 267.5 145.647 cv
267.499 145.513 267.499 145.381 267.498 145.247 cv
267.518 145.277 267.54 145.31 267.561 145.341 cv
267.567 145.35 267.571 145.357 267.577 145.366 cv
267.596 145.393 267.615 145.422 267.633 145.449 cv
267.648 145.47 267.662 145.492 267.676 145.513 cv
267.729 145.591 267.779 145.667 267.831 145.746 cv
267.843 145.764 267.853 145.778 267.865 145.796 cv
267.909 145.863 267.956 145.934 268 146 cv
268 146 li
144.253 22.0023 mo
144.119 22.0015 143.987 22.0009 143.854 22.0005 cv
143.736 21.8338 143.618 21.6665 143.5 21.4995 cv
143.751 21.6657 144.002 21.8334 144.253 22.0023 cv
0 0 .501961 rgb
f
120.165 122.665 mo
120.165 122.665 li
120.166 122.664 120.166 122.664 120.166 122.664 cv
120.165 122.665 120.165 122.665 120.165 122.665 cv
120.166 122.664 mo
121.226 118.119 122.506 113.986 123.985 110.246 cv
124.576 108.75 125.198 107.319 125.851 105.947 cv
127.254 105.767 128.692 105.678 130.156 105.678 cv
134.442 105.678 138.958 106.443 143.498 107.938 cv
135.417 110.599 127.257 115.573 120.165 122.665 cv
.498039 .498039 1 rgb
f
166.834 169.334 mo
166.918 169.25 167.001 169.166 167.085 169.081 cv
167.003 169.165 166.919 169.25 166.836 169.333 cv
166.834 169.334 166.834 169.334 166.834 169.334 cv
166.834 122.665 mo
166.834 122.665 li
166.834 122.665 166.834 122.665 166.834 122.665 cv
166.834 122.665 166.834 122.665 166.834 122.665 cv
level3{
gsave
clp
[33 0 0 33 143.5 146 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.47451 .47451 .976471 ]
/C1 [.2 .2 .701961 ]
/N 2.96295 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33 0 0 33 143.5 146 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+FV
GB\7TGB\7TGB\7TGB\4RG'8%PG'8%PG'.qMF`hhLF`heJFEDVHFEDSFF)uDDEcQ2@EcQ/>EH,u<E,]c8
E,TZ5Df0H1DJj<.D/F**Ci!m&CMIU!C2%BrBP;'lB4kggAn>ObA7T4\@q/tW@:<SP?sd8J?=$oC>[1N<
>?Y35=]ed-=&r@%<E)pr;c6Lj:f'q`:/4MW9M8#N8P)HC7n,s:6psC/5s[b#5<_4n4?GSb3B/rU2Dm<I
~>
<~G^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+FV
GB\7TGB\7TGB\7TGB\4RG'8%PG'8%PG'.qMF`hhLF`heJFEDVHFEDSFF)uDDEcQ2@EcQ/>EH,u<E,]c8
E,TZ5Df0H1DJj<.D/F**Ci!m&CMIU!C2%BrBP;'lB4kggAn>ObA7T4\@q/tW@:<SP?sd8J?=$oC>[1N<
>?Y35=]ed-=&r@%<E)pr;c6Lj:f'q`:/4MW9M8#N8P)HC7n,s:6psC/5s[b#5<_4n4?GSb3B/rU2Dm<I
~>
<~q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XUX
p\4FVp\4FVp\4FVp\4CTp@e4Rp@e4Rp@\+Op%A"Np%@tLo^qeJo^qbHoCMSFo()ABo()>@naZ/>nF5r:
nF,i7n*]W3mdBK0mHs9,m-O'(lg!d#lKRQtkih6nkND!ik2k^djQ,C^j5].YiSibRi8<GLhVR)Egt^]>
gY1B7g"=s/f@JO'e^W*te'c[ld*U+bcHa\Ybfe2PaiVWEa2Z-<`5KR1_83q%^V7Cp]Xtbd\[],W[^EKK
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
143.498 107.938 mo
138.958 106.443 134.442 105.678 130.156 105.678 cv
128.692 105.678 127.254 105.767 125.851 105.947 cv
130.412 96.3651 136.453 89.7525 143.5 85.5922 cv
150.502 89.7255 156.508 96.2776 161.058 105.759 cv
161.088 105.821 161.119 105.884 161.148 105.947 cv
159.746 105.767 158.307 105.677 156.843 105.677 cv
152.556 105.677 148.04 106.442 143.498 107.938 cv
.247059 .498039 1 rgb
f
267.498 145.247 mo
260.67 135.101 251.242 124.621 240.397 115.104 cv
236.816 97.6411 230.272 81.6618 221.467 68.0327 cv
245.218 83.3764 261.815 105.582 266.59 130.899 cv
267.161 135.606 267.469 140.392 267.498 145.247 cv
1 .498039 .498039 rgb
f
268 146 mo
267.956 145.934 267.909 145.863 267.865 145.796 cv
267.853 145.778 267.843 145.764 267.831 145.746 cv
267.779 145.667 267.729 145.591 267.676 145.513 cv
267.662 145.492 267.648 145.47 267.633 145.449 cv
267.615 145.422 267.596 145.393 267.577 145.366 cv
267.571 145.357 267.567 145.35 267.561 145.341 cv
267.54 145.31 267.518 145.277 267.498 145.247 cv
267.469 140.392 267.161 135.606 266.59 130.899 cv
267.519 135.824 268 140.866 268 146 cv
.501961 0 0 rgb
f
267.498 145.247 mo
260.67 135.101 251.242 124.622 240.397 115.105 cv
240.397 115.104 li
251.242 124.621 260.67 135.101 267.498 145.247 cv
267.498 145.247 li
.74902 .247059 .498039 rgb
f
19.5017 145.248 mo
19.5306 140.395 19.8379 135.611 20.4089 130.906 cv
25.1813 105.585 41.779 83.3782 65.5328 68.0326 cv
56.728 81.6617 50.1844 97.641 46.6033 115.104 cv
39.0544 121.729 32.1939 128.818 26.4161 135.939 cv
23.8933 139.048 21.5768 142.164 19.5017 145.248 cv
166.834 122.664 mo
165.35 116.302 163.435 110.751 161.148 105.947 cv
164.305 106.352 167.286 107.216 169.997 108.555 cv
169.245 114.233 168.04 118.972 166.834 122.664 cv
120.166 122.664 mo
120.166 122.664 li
120.165 122.665 120.165 122.665 120.165 122.665 cv
120.166 122.664 120.166 122.664 120.166 122.664 cv
120.166 122.664 mo
118.96 118.972 117.755 114.233 117.003 108.555 cv
119.714 107.216 122.694 106.352 125.851 105.947 cv
125.198 107.319 124.576 108.75 123.985 110.246 cv
122.506 113.986 121.225 118.12 120.165 122.665 cv
200.727 88.7722 mo
200.727 88.7721 li
199.177 85.4159 197.452 82.062 195.581 78.7422 cv
197.452 82.062 199.177 85.416 200.727 88.7722 cv
86.2727 88.7719 mo
92.6808 74.8961 102.052 61.1277 112.604 49.1032 cv
112.605 49.1032 li
102.052 61.1277 92.6811 74.8959 86.273 88.7718 cv
86.2727 88.7719 li
143.501 85.5918 mo
136.868 81.6762 129.346 79.9345 121.322 79.9345 cv
120.115 79.9345 118.895 79.9741 117.667 80.0516 cv
117.667 80.0506 li
117.666 80.0507 li
120.43 63.6674 127.652 44.0165 143.147 22.0005 cv
143.264 22.0002 143.383 22 143.5 22 cv
143.617 22 143.736 22.0002 143.853 22.0005 cv
159.348 44.0165 166.57 63.668 169.333 80.0511 cv
168.105 79.9738 166.883 79.934 165.676 79.934 cv
157.656 79.934 150.131 81.6779 143.501 85.5918 cv
1 .498039 .498039 rgb
f
18.9999 146 mo
18.9999 140.869 19.4811 135.828 20.4089 130.906 cv
19.8379 135.611 19.5306 140.395 19.5017 145.248 cv
19.3329 145.499 19.1656 145.749 18.9999 146 cv
18.9995 146 18.9995 146 18.9995 146 cv
143.853 22.0005 mo
143.736 22.0002 143.617 22 143.5 22 cv
143.383 22 143.264 22.0002 143.147 22.0005 cv
143.264 21.8338 143.382 21.667 143.5 21.5 cv
143.5 21.5 li
143.5 21.5 li
143.5 21.5 li
143.5 21.5 li
143.5 21.5 li
143.5 21.4995 143.5 21.4995 143.5 21.4995 cv
143.5 21.4995 li
143.5 21.5 143.5 21.5 143.5 21.5 cv
143.5 21.5 li
143.618 21.667 143.736 21.8338 143.853 22.0005 cv
.501961 0 0 rgb
f
19.5017 145.248 mo
19.5017 145.248 li
21.5768 142.164 23.8933 139.048 26.4161 135.939 cv
23.8933 139.048 21.5769 142.164 19.5017 145.248 cv
.74902 .498039 .498039 rgb
f
18.9999 146 mo
19.1656 145.749 19.3329 145.499 19.5017 145.248 cv
19.5017 145.248 li
19.3329 145.499 19.1656 145.749 18.9999 146 cv
18.9995 146 18.9995 146 18.9995 146 cv
.501961 .25098 .25098 rgb
f
117.003 108.555 mo
115.969 100.74 115.795 91.1456 117.667 80.0516 cv
118.895 79.9741 120.115 79.9345 121.322 79.9345 cv
129.346 79.9345 136.868 81.6762 143.501 85.5918 cv
143.5 85.5922 li
143.498 85.5907 li
136.451 89.7511 130.411 96.3652 125.851 105.947 cv
122.694 106.352 119.714 107.216 117.003 108.555 cv
86.273 88.7718 mo
92.6811 74.8959 102.052 61.1277 112.605 49.1032 cv
117.787 48.0405 123.104 47.2381 128.523 46.7162 cv
132.283 38.8755 137.08 30.6204 143.146 22.0005 cv
143.147 22.0005 li
127.652 44.0165 120.43 63.6674 117.666 80.0507 cv
107.622 80.683 96.9158 83.858 86.273 88.7718 cv
.74902 .498039 .498039 rgb
f
143.146 22.0005 mo
143.264 21.8338 143.382 21.6665 143.5 21.4995 cv
143.5 21.5 143.5 21.5 143.5 21.5 cv
143.382 21.667 143.264 21.8338 143.147 22.0005 cv
143.146 22.0005 li
.501961 .25098 .25098 rgb
f
46.6033 115.104 mo
50.1844 97.641 56.728 81.6617 65.5328 68.0326 cv
79.1619 59.2278 95.1415 52.6844 112.604 49.1032 cv
102.052 61.1277 92.6808 74.8961 86.2727 88.7719 cv
72.3931 95.1802 58.631 104.548 46.6033 115.104 cv
.992157 .392157 .278431 rgb
f
169.997 108.555 mo
167.286 107.216 164.305 106.352 161.148 105.947 cv
161.119 105.884 161.088 105.821 161.058 105.759 cv
156.508 96.2776 150.503 89.7252 143.501 85.5918 cv
150.131 81.6779 157.656 79.934 165.676 79.934 cv
166.883 79.934 168.105 79.9738 169.333 80.0511 cv
166.57 63.668 159.348 44.0165 143.853 22.0005 cv
143.854 22.0005 li
149.92 30.6204 154.717 38.8755 158.477 46.7162 cv
163.896 47.2381 169.213 48.0405 174.395 49.1032 cv
182.396 58.2193 189.717 68.3363 195.581 78.7422 cv
197.452 82.062 199.177 85.4159 200.727 88.7721 cv
200.727 88.7722 li
200.728 88.7728 li
190.085 83.8577 179.378 80.6848 169.333 80.0507 cv
171.204 91.1446 171.031 100.739 169.997 108.555 cv
.74902 .247059 .498039 rgb
f
143.854 22.0005 mo
143.853 22.0005 li
143.736 21.8338 143.618 21.667 143.5 21.5 cv
143.5 21.5 li
143.5 21.5 li
143.5 21.5 li
143.618 21.6665 143.736 21.8338 143.854 22.0005 cv
.501961 0 .25098 rgb
f
120.166 122.664 mo
120.166 122.664 li
121.225 118.12 122.506 113.986 123.985 110.246 cv
122.506 113.986 121.226 118.119 120.166 122.664 cv
120.165 122.665 120.165 122.665 120.165 122.665 cv
.74902 .247059 .498039 rgb
f
161.058 105.759 mo
156.508 96.2776 150.502 89.7255 143.5 85.5922 cv
143.501 85.5918 li
150.503 89.7252 156.508 96.2776 161.058 105.759 cv
.623529 .247059 .498039 rgb
f
143.146 270 mo
143.013 269.999 142.881 269.999 142.747 269.998 cv
132.601 263.17 122.122 253.742 112.605 242.897 cv
117.787 243.96 123.104 244.762 128.523 245.284 cv
132.283 253.125 137.08 261.38 143.146 270 cv
.788235 .576471 .780392 rgb
f
143.5 270.5 mo
143.249 270.334 142.998 270.167 142.747 269.998 cv
142.881 269.999 143.013 269.999 143.146 270 cv
143.264 270.166 143.382 270.333 143.5 270.5 cv
.290196 .0784314 .282353 rgb
f
142.747 269.998 mo
142.747 269.998 li
132.601 263.17 122.122 253.742 112.604 242.897 cv
112.605 242.897 li
122.122 253.742 132.601 263.17 142.747 269.998 cv
.780392 .470588 .560784 rgb
f
143.5 270.5 mo
143.249 270.334 142.998 270.167 142.747 269.998 cv
142.747 269.998 li
142.998 270.167 143.249 270.334 143.5 270.5 cv
143.5 270.5 143.5 270.5 143.5 270.5 cv
.533333 .219608 .309804 rgb
f
117.667 211.949 mo
107.622 211.315 96.9151 208.142 86.2723 203.227 cv
81.3573 192.584 78.1848 181.878 77.5507 171.833 cv
83.5754 172.85 89.1545 173.262 94.2502 173.262 cv
98.5378 173.262 102.484 172.969 106.055 172.497 cv
106.055 172.498 li
111.736 171.747 116.473 170.541 120.166 169.335 cv
120.166 169.335 120.166 169.335 120.166 169.335 cv
118.96 173.027 117.755 177.767 117.003 183.445 cv
117.003 183.445 li
115.969 191.261 115.796 200.855 117.667 211.949 cv
46.603 176.895 mo
35.758 167.377 26.3294 156.898 19.5017 146.752 cv
19.5009 146.619 19.5004 146.487 19.5 146.353 cv
28.1199 152.42 36.3754 157.218 44.2161 160.977 cv
44.738 166.396 45.5403 171.713 46.603 176.895 cv
103.447 163.649 mo
93.8651 159.089 87.2518 153.049 83.0915 146.002 cv
83.0917 146.001 li
87.2521 153.049 93.865 159.088 103.447 163.649 cv
103.447 163.649 li
105.438 146.001 mo
103.432 139.909 102.74 133.861 103.446 128.352 cv
108.251 126.066 113.804 124.15 120.166 122.666 cv
120.084 122.747 120.006 122.826 119.926 122.907 cv
112.96 129.943 108.069 138.01 105.438 146.001 cv
.788235 .576471 .780392 rgb
f
19.5017 146.752 mo
19.3329 146.501 19.1656 146.25 18.9999 146 cv
19.1665 146.118 19.3333 146.236 19.5 146.353 cv
19.5004 146.487 19.5009 146.619 19.5017 146.752 cv
.290196 .0784314 .282353 rgb
f
120.166 169.335 mo
120.166 169.335 li
120.166 169.335 120.166 169.335 120.166 169.335 cv
120.166 169.335 li
119.926 122.907 mo
120.006 122.826 120.084 122.747 120.164 122.666 cv
120.166 122.666 120.166 122.666 120.166 122.666 cv
120.086 122.746 120.005 122.827 119.926 122.907 cv
level3{
gsave
clp
[33 0 0 33 143.5 146 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.760784 .54902 .752941 ]
/C1 [.490196 .27451 .482353 ]
/N 2.96295 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33 0 0 33 143.5 146 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83t(_83q&
^qdb$^qdb$^qdb$^qd_"^V@Ou^V@Ou^V7Fr^:q=q^:q:o]tM+m]tM(k]Y(ni]Xtef]=Y\d]"5Ja\[f8]
\[]/Z\@B#W\$rfS[^NTO[C*BK['[0GZa-mBZE^[>Yct@8YHP+3Y-"h.XK8M(X/`2"WMuhpW2HPjVPU,c
Unjc\U8"?TTV.pLSt;LDS=H(<R[KS2R$X/*Q'ISuPEM)kOcYWbNfB$WMi3ILM26qAL4t;5K7\Z)J:E#r
~>
<~Mi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3IM
MMd:KMMd:KMMd:KMMd7IM2@(GM2@(GM26tDLkpkCLkphALPLY?LPLV=L5(G;KnY57KnY25KS5#3K7ef/
K7\],Jq8K(JUr?%J:N-!It)orIXQWmI=-EiH[C*cH?sj^H$FRYGB\7SG'8"NFEDVGF)l;AEH,r:Df9Q3
DJa6,Chmg$C2%BqBP1siAn>Oa@q/tW@:<PN?X@&E>[1K:>$5!1='&F&<)cdo;Gg7e:JOVY9M7uL8Ou?@
~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ls
^:q=q^:q=q^:q=q^:q:o]tM+m]tM+m]tD"j]Y(ni]Y(kg]=Y\e]=YYc]"5Ja]",A^\[f8\\@B&Y\$riU
\$i`R[^NTO[C*BK['[0GZa6sCZEga?Z*:I:Yck76Y-+q0Xf\\+XK/D&WiE(uWMlboVl-DhVPU,bUna][
U8"?TTV.pLSt;LDS=H(<R[TY4R$X/*QBd`"PEV/mOcYZcO,f3ZN/NUOM2@%DLPCM9KS+l-JUi6!IXQTj
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
103.447 163.649 mo
93.865 159.088 87.2521 153.049 83.0917 146.001 cv
87.2521 138.954 93.8645 132.913 103.446 128.352 cv
102.74 133.861 103.432 139.909 105.438 146.001 cv
103.432 152.093 102.74 158.14 103.447 163.649 cv
.537255 .576471 .780392 rgb
f
86.2723 203.227 mo
72.3965 196.819 58.6275 187.448 46.603 176.895 cv
45.5403 171.713 44.738 166.396 44.2161 160.977 cv
36.3754 157.218 28.1199 152.42 19.5 146.353 cv
19.5 146.353 li
41.516 161.848 61.1684 169.07 77.5517 171.834 cv
76.9589 162.44 78.5867 153.632 83.0915 146.002 cv
87.2518 153.049 93.8651 159.089 103.447 163.649 cv
103.852 166.806 104.716 169.786 106.055 172.497 cv
102.484 172.969 98.5378 173.262 94.2502 173.262 cv
89.1545 173.262 83.5754 172.85 77.5507 171.833 cv
78.1848 181.878 81.3573 192.584 86.2723 203.227 cv
.780392 .470588 .560784 rgb
f
19.5 146.353 mo
19.3333 146.236 19.1665 146.118 18.9995 146 cv
18.9999 146 18.9999 146 18.9999 146 cv
18.9999 146 li
19.1669 146.118 19.3333 146.236 19.5 146.353 cv
19.5 146.353 li
.533333 .219608 .309804 rgb
f
156.843 186.322 mo
152.558 186.322 148.042 185.557 143.501 184.062 cv
151.583 181.401 159.743 176.427 166.835 169.335 cv
166.835 169.335 li
166.834 169.336 166.834 169.336 166.834 169.336 cv
165.81 173.727 164.58 177.734 163.165 181.373 cv
162.529 183.007 161.857 184.564 161.149 186.053 cv
159.746 186.233 158.307 186.322 156.843 186.322 cv
125.942 186.242 mo
125.912 186.18 125.881 186.116 125.852 186.053 cv
125.852 186.053 li
125.881 186.116 125.912 186.18 125.942 186.242 cv
.788235 .576471 .780392 rgb
f
143.5 270 mo
143.383 270 143.264 270 143.147 270 cv
127.652 247.984 120.43 228.332 117.667 211.949 cv
118.895 212.026 120.117 212.066 121.324 212.066 cv
129.344 212.065 136.869 210.322 143.499 206.408 cv
150.132 210.324 157.654 212.066 165.678 212.065 cv
166.885 212.065 168.105 212.026 169.333 211.948 cv
169.333 211.949 li
169.334 211.949 li
166.57 228.333 159.348 247.984 143.853 270 cv
143.736 270 143.617 270 143.5 270 cv
.686274 .607843 .537255 rgb
f
143.5 270.5 mo
143.5 270.5 li
143.5 270.5 143.5 270.5 143.5 270.5 cv
143.5 270.5 li
143.5 270.5 li
143.5 270.5 li
143.5 270.5 li
143.382 270.333 143.264 270.166 143.147 270 cv
143.264 270 143.383 270 143.5 270 cv
143.617 270 143.736 270 143.853 270 cv
143.736 270.166 143.618 270.333 143.5 270.5 cv
143.5 270.5 li
143.5 270.5 143.5 270.5 143.5 270.5 cv
143.5 270.5 143.5 270.5 143.5 270.5 cv
143.5 270.5 li
143.5 270.5 143.5 270.5 143.5 270.5 cv
.188235 .109804 .0392157 rgb
f
65.5326 223.967 mo
41.7788 208.622 25.1813 186.415 20.4089 161.094 cv
19.8379 156.389 19.5306 151.605 19.5017 146.752 cv
26.3294 156.898 35.7582 167.379 46.6032 176.896 cv
50.1844 194.359 56.7278 210.338 65.5326 223.967 cv
94.5348 218.541 mo
91.4348 213.509 88.6492 208.374 86.2726 203.228 cv
86.273 203.228 li
88.6495 208.374 91.4348 213.509 94.5348 218.541 cv
.686274 .607843 .537255 rgb
f
20.4089 161.094 mo
19.4811 156.172 18.9999 151.13 18.9999 146 cv
18.9995 146 18.9995 146 18.9995 146 cv
19.1656 146.25 19.3329 146.501 19.5017 146.752 cv
19.5306 151.605 19.8379 156.389 20.4089 161.094 cv
.188235 .109804 .0392157 rgb
f
112.604 242.897 mo
95.1413 239.316 79.1617 232.772 65.5326 223.967 cv
56.7278 210.338 50.1844 194.359 46.6032 176.896 cv
58.631 187.451 72.3929 196.82 86.2726 203.228 cv
88.6492 208.374 91.4348 213.509 94.5348 218.541 cv
99.7935 227.077 105.965 235.332 112.604 242.897 cv
.678431 .501961 .313725 rgb
f
125.852 186.053 mo
122.695 185.648 119.714 184.784 117.003 183.445 cv
117.755 177.767 118.96 173.028 120.166 169.336 cv
121.65 175.698 123.565 181.249 125.852 186.053 cv
.686274 .607843 .537255 rgb
f
143.147 270 mo
143.146 270 li
137.08 261.38 132.283 253.125 128.523 245.284 cv
123.104 244.762 117.787 243.96 112.605 242.897 cv
105.966 235.332 99.7936 227.077 94.5348 218.541 cv
91.4348 213.509 88.6495 208.374 86.273 203.228 cv
86.2726 203.228 li
86.2723 203.227 li
96.9151 208.142 107.622 211.315 117.667 211.949 cv
115.796 200.855 115.969 191.261 117.003 183.445 cv
119.714 184.784 122.695 185.648 125.852 186.053 cv
125.881 186.116 125.912 186.18 125.942 186.242 cv
130.492 195.724 136.497 202.275 143.499 206.408 cv
136.869 210.322 129.344 212.065 121.324 212.066 cv
120.117 212.066 118.895 212.026 117.667 211.949 cv
120.43 228.332 127.652 247.984 143.147 270 cv
46.6032 176.896 mo
35.7582 167.379 26.3294 156.898 19.5017 146.752 cv
19.5017 146.752 li
26.3294 156.898 35.758 167.377 46.603 176.895 cv
46.6032 176.896 li
.580392 .396078 .427451 rgb
f
143.5 270.5 mo
143.5 270.5 li
143.382 270.333 143.264 270.166 143.146 270 cv
143.147 270 li
143.264 270.166 143.382 270.333 143.5 270.5 cv
19.5017 146.752 mo
19.3329 146.501 19.1656 146.25 18.9999 146 cv
18.9995 146 18.9995 146 18.9995 146 cv
19.1656 146.25 19.3329 146.501 19.5017 146.752 cv
19.5017 146.752 li
.333333 .14902 .176471 rgb
f
112.605 242.897 mo
112.604 242.897 li
105.965 235.332 99.7935 227.077 94.5348 218.541 cv
99.7936 227.077 105.966 235.332 112.605 242.897 cv
86.2726 203.228 mo
72.3929 196.82 58.631 187.451 46.6032 176.896 cv
46.603 176.895 li
58.6275 187.448 72.3965 196.819 86.2723 203.227 cv
86.2726 203.228 li
.576471 .345098 .317647 rgb
f
174.395 242.897 mo
184.948 230.872 194.319 217.104 200.727 203.228 cv
200.727 203.228 li
194.319 217.104 184.948 230.872 174.395 242.897 cv
174.395 242.897 li
221.467 223.967 mo
230.272 210.338 236.816 194.359 240.397 176.896 cv
247.952 170.266 254.817 163.171 260.598 156.044 cv
263.115 152.941 265.427 149.831 267.498 146.753 cv
267.469 151.607 267.161 156.395 266.59 161.102 cv
261.815 186.418 245.218 208.624 221.467 223.967 cv
.686274 .607843 .537255 rgb
f
266.59 161.102 mo
267.161 156.395 267.469 151.607 267.498 146.753 cv
267.667 146.502 267.834 146.25 268 146 cv
268 146 li
268 151.134 267.519 156.176 266.59 161.102 cv
.188235 .109804 .0392157 rgb
f
161.149 186.053 mo
161.858 184.564 162.529 183.007 163.165 181.373 cv
164.58 177.734 165.811 173.726 166.835 169.335 cv
168.04 173.028 169.245 177.767 169.997 183.445 cv
167.286 184.784 164.306 185.648 161.149 186.053 cv
.686274 .607843 .537255 rgb
f
163.165 181.373 mo
164.58 177.734 165.81 173.727 166.834 169.336 cv
166.834 169.336 li
165.811 173.726 164.58 177.734 163.165 181.373 cv
.580392 .396078 .427451 rgb
f
143.854 270 mo
149.92 261.38 154.717 253.125 158.477 245.284 cv
163.896 244.762 169.213 243.96 174.395 242.897 cv
164.878 253.742 154.399 263.17 144.253 269.998 cv
144.119 269.999 143.987 269.999 143.854 270 cv
.498039 .701961 .607843 rgb
f
143.5 270.5 mo
143.618 270.333 143.736 270.166 143.854 270 cv
143.987 269.999 144.119 269.999 144.253 269.998 cv
144.002 270.167 143.751 270.334 143.5 270.5 cv
0 .203922 .109804 rgb
f
169.334 211.949 mo
169.334 211.948 li
169.333 211.948 li
171.204 200.854 171.031 191.26 169.997 183.445 cv
169.998 183.444 li
169.246 177.766 168.041 173.026 166.835 169.335 cv
168.714 169.948 170.866 170.562 173.274 171.116 cv
178.572 172.334 185.113 173.263 192.75 173.262 cv
197.844 173.262 203.426 172.849 209.449 171.833 cv
209.449 171.834 li
209.449 171.833 li
208.815 181.878 205.643 192.584 200.728 203.227 cv
200.727 203.227 li
200.727 203.228 li
190.084 208.142 179.378 211.317 169.334 211.949 cv
143.502 206.409 mo
143.5 206.408 li
150.547 202.247 156.588 195.635 161.149 186.053 cv
161.15 186.053 161.148 186.053 161.149 186.053 cv
156.589 195.635 150.549 202.249 143.502 206.409 cv
130.157 186.323 mo
128.693 186.323 127.254 186.233 125.852 186.053 cv
123.565 181.249 121.65 175.697 120.166 169.335 cv
120.23 169.399 120.292 169.461 120.356 169.524 cv
127.404 176.515 135.492 181.425 143.501 184.062 cv
138.96 185.558 134.444 186.323 130.157 186.323 cv
.498039 .701961 .607843 rgb
f
120.356 169.524 mo
120.292 169.461 120.23 169.399 120.166 169.336 cv
120.166 169.335 120.166 169.335 120.166 169.335 cv
120.229 169.398 120.293 169.461 120.356 169.524 cv
level3{
gsave
clp
[33 0 0 33 143.5 146 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.47451 .678431 .580392 ]
/C1 [.2 .403922 .305882 ]
/N 2.96295 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33 0 0 33 143.5 146 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+FV
GB\7TGB\7TGB\7TGB\4RG'8%PG'8%PG'.qMF`hhLF`heJFEDVHFEDSFF)uDDEcQ2@EcQ/>EH,u<E,]c8
E,TZ5Df0H1DJj<.D/F**Ci!m&CMIU!C2%BrBP;'lB4kggAn>ObA7T4\@q/tW@:<SP?sd8J?=$oC>[1N<
>?Y35=]ed-=&r@%<E)pr;c6Lj:f'q`:/4MW9M8#N8P)HC7n,s:6psC/5s[b#5<_4n4?GSb3B/rU2Dm<I
~>
<~XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8J'
X/i;%X/i;%X/i;%X/i8#WiE)!WiE)!Wi;tsWMukrWMuhpW2QYnW2QVlVl-GjVP^5fVP^2dV5:#bUnjf^
Una][US=KWU8"?TTqS-PTV.pLT:VXGSt2FCS=H+=S"#k8R[KS3R$a8-Q^=#(Q'IW!P`q;pP*1riOH>Qb
O,f6[NJrgSMi*CKM26tCLPCP;KS4u1JqAQ(J:E&tI=6KiH[:!`G^+FUF`heIF)l8?E,TW3D/=!&C2%?o
~>
<~PEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV/m
P*1ukP*1ukP*1ukP*1riOcbcgOcbcgOcYZdOH>QcOH>NaO,o?_O,o<]NfK-[NK&pWNK&mUN/W^SMi3LO
Mi*CLMM[1HM2@%ELkphALPLV=L4t>8KnP,4K7ef.JqAQ)JUi9$It)rsIXZ]nI!g<gH[:!aH$OXZGB\7S
G'.qLFE;MDEcH)<E,TZ4DJa6,CMR["Bk_6nB4baeA7T1Z@UW\Q?XI,F>[1K:>$4s0=&r=$<)Z[l;,C%`
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
240.397 176.895 mo
241.46 171.713 242.262 166.396 242.784 160.977 cv
250.529 157.263 258.682 152.534 267.187 146.573 cv
267.199 146.564 267.207 146.559 267.219 146.551 cv
267.312 146.485 267.406 146.419 267.5 146.353 cv
267.499 146.487 267.499 146.619 267.498 146.753 cv
265.427 149.831 263.115 152.941 260.598 156.044 cv
254.817 163.171 247.952 170.265 240.397 176.895 cv
.498039 .701961 .607843 rgb
f
267.498 146.753 mo
267.499 146.619 267.499 146.487 267.5 146.353 cv
267.666 146.236 267.833 146.118 268 146 cv
268 146 li
267.834 146.25 267.667 146.502 267.498 146.753 cv
0 .203922 .109804 rgb
f
183.553 163.649 mo
183.554 163.647 li
193.136 159.087 199.748 153.046 203.908 145.999 cv
203.909 146 li
199.749 153.048 193.135 159.088 183.553 163.649 cv
181.562 145.999 mo
178.901 137.917 173.927 129.758 166.835 122.665 cv
166.835 122.665 li
166.836 122.666 166.836 122.666 166.836 122.666 cv
173.198 124.149 178.749 126.064 183.553 128.351 cv
184.26 133.86 183.568 139.907 181.562 145.999 cv
.498039 .701961 .607843 rgb
f
183.554 163.647 mo
184.26 158.139 183.568 152.091 181.562 145.999 cv
183.568 139.907 184.26 133.86 183.553 128.351 cv
184.952 129.017 186.289 129.715 187.563 130.442 cv
195.014 134.697 200.355 139.981 203.908 145.999 cv
199.748 153.046 193.136 159.087 183.554 163.647 cv
.247059 .45098 .607843 rgb
f
143.5 206.408 mo
136.498 202.275 130.492 195.724 125.942 186.242 cv
125.912 186.18 125.881 186.116 125.852 186.053 cv
127.254 186.233 128.693 186.323 130.157 186.323 cv
134.444 186.323 138.96 185.558 143.501 184.062 cv
148.042 185.557 152.558 186.322 156.843 186.322 cv
158.307 186.322 159.746 186.233 161.149 186.053 cv
156.588 195.635 150.547 202.247 143.5 206.408 cv
.392157 .490196 .498039 rgb
f
143.853 270 mo
159.348 247.984 166.57 228.333 169.334 211.949 cv
179.378 211.317 190.084 208.142 200.727 203.228 cv
194.319 217.104 184.948 230.872 174.395 242.897 cv
169.213 243.96 163.896 244.762 158.477 245.284 cv
154.717 253.125 149.92 261.38 143.854 270 cv
143.853 270 li
.341176 .505882 .376471 rgb
f
143.5 270.5 mo
143.618 270.333 143.736 270.166 143.853 270 cv
143.854 270 li
143.736 270.166 143.618 270.333 143.5 270.5 cv
143.5 270.5 143.5 270.5 143.5 270.5 cv
.0941176 .258824 .129412 rgb
f
165.678 212.065 mo
157.654 212.066 150.132 210.324 143.499 206.408 cv
143.5 206.408 li
143.502 206.409 li
150.549 202.249 156.589 195.635 161.149 186.053 cv
164.306 185.648 167.286 184.784 169.997 183.445 cv
171.031 191.26 171.204 200.854 169.333 211.948 cv
168.105 212.026 166.885 212.065 165.678 212.065 cv
.341176 .505882 .376471 rgb
f
143.499 206.408 mo
136.497 202.275 130.492 195.724 125.942 186.242 cv
130.492 195.724 136.498 202.275 143.5 206.408 cv
143.499 206.408 li
.290196 .403922 .321569 rgb
f
260.598 156.044 mo
263.115 152.941 265.427 149.831 267.498 146.753 cv
267.498 146.753 li
265.427 149.831 263.115 152.941 260.598 156.044 cv
.341176 .505882 .376471 rgb
f
267.498 146.753 mo
267.498 146.753 li
267.667 146.502 267.834 146.25 268 146 cv
268 146 li
267.834 146.25 267.667 146.502 267.498 146.753 cv
268 146 mo
268 146 li
268 146 li
268 146 li
268 146 li
268 146 li
.0941176 .258824 .129412 rgb
f
144.253 269.998 mo
154.399 263.17 164.878 253.742 174.395 242.897 cv
191.858 239.316 207.838 232.772 221.467 223.967 cv
206.123 247.718 183.918 264.315 158.601 269.09 cv
153.894 269.661 149.107 269.969 144.253 269.998 cv
1 1 .498039 rgb
f
143.5 270.5 mo
143.5 270.5 li
143.751 270.334 144.002 270.167 144.253 269.998 cv
149.107 269.969 153.894 269.661 158.601 269.09 cv
153.675 270.019 148.634 270.5 143.5 270.5 cv
.501961 .501961 0 rgb
f
200.727 203.228 mo
200.728 203.227 li
214.603 196.819 228.372 187.448 240.397 176.895 cv
240.397 176.896 li
228.369 187.452 214.607 196.82 200.727 203.228 cv
180.945 172.497 mo
178.157 172.128 175.596 171.65 173.274 171.116 cv
170.866 170.562 168.715 169.948 166.836 169.335 cv
173.198 167.851 178.749 165.936 183.553 163.649 cv
183.148 166.806 182.284 169.786 180.945 172.497 cv
209.449 171.833 mo
209.449 171.833 li
209.449 171.833 li
210.042 162.44 208.414 153.631 203.909 146 cv
203.909 146 li
203.908 145.998 li
208.413 138.368 210.041 129.56 209.448 120.166 cv
225.832 122.93 245.484 130.152 267.5 145.647 cv
267.5 145.764 267.5 145.883 267.5 146 cv
267.5 146.117 267.5 146.236 267.5 146.353 cv
267.406 146.419 267.312 146.485 267.219 146.551 cv
267.207 146.559 267.199 146.564 267.187 146.573 cv
258.682 152.534 250.529 157.263 242.784 160.976 cv
242.784 160.977 li
230.599 166.819 219.418 170.152 209.449 171.833 cv
183.553 128.351 mo
178.748 126.064 173.197 124.149 166.835 122.665 cv
170.528 121.46 175.267 120.254 180.945 119.503 cv
182.284 122.214 183.148 125.194 183.553 128.351 cv
1 1 .498039 rgb
f
267.5 146.353 mo
267.5 146.236 267.5 146.117 267.5 146 cv
267.5 145.883 267.5 145.764 267.5 145.647 cv
267.543 145.677 267.587 145.708 267.631 145.739 cv
267.652 145.754 267.675 145.77 267.695 145.784 cv
267.754 145.826 267.814 145.868 267.873 145.91 cv
267.916 145.941 267.956 145.969 268 146 cv
268 146 li
267.833 146.118 267.666 146.236 267.5 146.353 cv
.501961 .501961 0 rgb
f
203.908 145.998 mo
200.356 139.98 195.014 134.697 187.563 130.442 cv
186.289 129.715 184.952 129.017 183.553 128.351 cv
183.148 125.194 182.284 122.214 180.945 119.503 cv
184.516 119.031 188.462 118.738 192.75 118.738 cv
197.845 118.738 203.424 119.15 209.449 120.167 cv
208.815 110.122 205.643 99.4155 200.728 88.7728 cv
214.603 95.1809 228.372 104.552 240.397 115.105 cv
241.46 120.287 242.262 125.604 242.784 131.023 cv
250.625 134.783 258.88 139.58 267.5 145.647 cv
267.5 145.647 li
245.484 130.152 225.832 122.93 209.448 120.166 cv
210.041 129.56 208.413 138.368 203.908 145.998 cv
.74902 .74902 .498039 rgb
f
221.467 68.0327 mo
207.838 59.2279 191.859 52.6845 174.396 49.1033 cv
164.878 38.2584 154.399 28.8297 144.253 22.0023 cv
149.107 22.0311 153.893 22.3387 158.6 22.9101 cv
183.917 27.685 206.124 44.282 221.467 68.0327 cv
1 1 .498039 rgb
f
158.6 22.9101 mo
153.893 22.3387 149.107 22.0311 144.253 22.0023 cv
144.002 21.8334 143.751 21.6657 143.5 21.5 cv
143.5 21.4995 143.5 21.4995 143.5 21.4995 cv
148.634 21.5 153.674 21.9812 158.6 22.9101 cv
.501961 .501961 0 rgb
f
174.396 49.1033 mo
174.395 49.1032 li
164.878 38.2582 154.399 28.8299 144.253 22.0023 cv
144.253 22.0023 li
154.399 28.8297 164.878 38.2584 174.396 49.1033 cv
.74902 .74902 .498039 rgb
f
144.253 22.0023 mo
144.253 22.0023 li
144.002 21.8334 143.751 21.6657 143.5 21.5 cv
143.5 21.4995 143.5 21.4995 143.5 21.4995 cv
143.751 21.6657 144.002 21.8334 144.253 22.0023 cv
.501961 .501961 .25098 rgb
f
240.397 115.104 mo
228.369 104.549 214.607 95.1804 200.727 88.7722 cv
199.177 85.416 197.452 82.062 195.581 78.7422 cv
189.717 68.3363 182.396 58.2193 174.396 49.1033 cv
191.859 52.6845 207.838 59.2279 221.467 68.0327 cv
230.272 81.6618 236.816 97.6411 240.397 115.104 cv
1 .74902 .247059 rgb
f
240.397 115.105 mo
228.372 104.552 214.603 95.1809 200.728 88.7728 cv
200.727 88.7722 li
214.607 95.1804 228.369 104.549 240.397 115.104 cv
240.397 115.105 li
195.581 78.7422 mo
189.717 68.3363 182.396 58.2193 174.395 49.1032 cv
174.396 49.1033 li
182.396 58.2193 189.717 68.3363 195.581 78.7422 cv
.87451 .623529 .247059 rgb
f
174.395 242.897 mo
184.948 230.872 194.319 217.104 200.727 203.228 cv
214.607 196.82 228.369 187.452 240.397 176.896 cv
236.816 194.359 230.272 210.338 221.467 223.967 cv
207.838 232.772 191.858 239.316 174.395 242.897 cv
.843137 .803922 .266667 rgb
f
200.728 203.227 mo
205.643 192.584 208.815 181.878 209.449 171.833 cv
219.418 170.152 230.599 166.819 242.784 160.977 cv
242.262 166.396 241.46 171.713 240.397 176.895 cv
228.372 187.448 214.603 196.819 200.728 203.227 cv
192.75 173.262 mo
185.113 173.263 178.572 172.334 173.274 171.116 cv
175.596 171.65 178.157 172.128 180.945 172.497 cv
182.284 169.786 183.148 166.806 183.553 163.649 cv
193.135 159.088 199.749 153.048 203.909 146 cv
208.414 153.631 210.042 162.44 209.449 171.833 cv
203.426 172.849 197.844 173.262 192.75 173.262 cv
267.187 146.573 mo
267.199 146.564 267.207 146.559 267.219 146.551 cv
267.207 146.559 267.199 146.564 267.187 146.573 cv
.74902 .85098 .301961 rgb
f
183.553 128.351 mo
178.749 126.064 173.198 124.149 166.836 122.666 cv
166.836 122.666 li
173.197 124.149 178.748 126.064 183.553 128.351 cv
183.553 128.351 li
f
187.563 130.442 mo
186.289 129.715 184.952 129.017 183.553 128.351 cv
183.553 128.351 li
184.952 129.017 186.289 129.715 187.563 130.442 cv
.623529 .72549 .301961 rgb
f
176.5 146 mo
176 146 li
176 154.976 172.363 163.098 166.481 168.981 cv
160.598 174.863 152.476 178.5 143.5 178.5 cv
134.523 178.5 126.401 174.863 120.519 168.981 cv
114.637 163.098 111 154.976 111 146 cv
111 137.024 114.637 128.902 120.519 123.019 cv
126.401 117.137 134.523 113.5 143.5 113.5 cv
152.476 113.5 160.598 117.137 166.481 123.019 cv
172.363 128.902 176 137.024 176 146 cv
176.5 146 li
177 146 li
177 127.498 162.001 112.5 143.5 112.5 cv
124.997 112.5 110 127.498 110 146 cv
110 164.502 124.997 179.5 143.5 179.5 cv
162.001 179.5 177 164.502 177 146 cv
176.5 146 li
cp
0 0 0 rgb
f
121.933 124.434 mo
120.957 125.409 119.373 125.409 118.397 124.434 cv
117.422 123.457 117.422 121.874 118.396 120.898 cv
119.373 119.922 120.957 119.922 121.934 120.898 cv
122.908 121.874 122.908 123.457 121.933 124.434 cv
cp
f
121.933 124.434 mo
121.579 124.08 li
121.188 124.471 120.679 124.665 120.165 124.665 cv
119.651 124.665 119.142 124.471 118.751 124.08 cv
118.36 123.688 118.166 123.179 118.166 122.665 cv
118.166 122.151 118.36 121.643 118.75 121.251 cv
119.142 120.86 119.651 120.666 120.165 120.666 cv
120.679 120.666 121.188 120.86 121.58 121.252 cv
121.97 121.643 122.164 122.151 122.164 122.665 cv
122.164 123.179 121.97 123.688 121.579 124.08 cv
121.933 124.434 li
122.286 124.787 li
122.871 124.202 123.165 123.431 123.164 122.665 cv
123.165 121.899 122.871 121.129 122.287 120.545 cv
121.702 119.96 120.931 119.665 120.165 119.666 cv
119.399 119.665 118.628 119.96 118.043 120.544 cv
117.459 121.129 117.165 121.899 117.166 122.665 cv
117.165 123.431 117.459 124.202 118.044 124.787 cv
118.628 125.372 119.399 125.666 120.165 125.665 cv
120.931 125.666 121.702 125.372 122.286 124.787 cv
121.933 124.434 li
cp
f
21.4995 146 mo
21.4995 147.381 20.3804 148.5 18.9995 148.5 cv
17.6187 148.5 16.4995 147.381 16.4995 146 cv
16.4995 144.619 17.6187 143.5 18.9995 143.5 cv
20.3804 143.5 21.4995 144.619 21.4995 146 cv
cp
f
21.4995 146 mo
20.9995 146 li
20.9975 147.105 20.1041 147.998 18.9995 148 cv
17.8949 147.998 17.0015 147.105 16.9995 146 cv
17.0015 144.895 17.8949 144.002 18.9995 144 cv
20.1041 144.002 20.9975 144.895 20.9995 146 cv
21.4995 146 li
21.9995 146 li
21.9992 144.343 20.6567 143 18.9995 143 cv
17.3424 143 15.9998 144.343 15.9995 146 cv
15.9998 147.657 17.3424 149 18.9995 149 cv
20.6567 149 21.9992 147.657 21.9995 146 cv
21.4995 146 li
cp
f
165.066 124.434 mo
164.09 123.457 164.09 121.874 165.066 120.897 cv
166.043 119.922 167.625 119.922 168.602 120.898 cv
169.578 121.874 169.578 123.457 168.602 124.434 cv
167.625 125.41 166.043 125.409 165.066 124.434 cv
cp
f
165.066 124.434 mo
165.42 124.08 li
165.028 123.688 164.835 123.179 164.834 122.666 cv
164.835 122.152 165.028 121.643 165.42 121.251 cv
165.812 120.86 166.32 120.666 166.833 120.666 cv
167.347 120.666 167.856 120.86 168.248 121.252 cv
168.64 121.643 168.833 122.152 168.834 122.666 cv
168.833 123.179 168.64 123.688 168.248 124.08 cv
167.856 124.471 167.347 124.665 166.834 124.665 cv
166.321 124.665 165.812 124.471 165.42 124.08 cv
165.066 124.434 li
164.713 124.787 li
165.298 125.372 166.068 125.666 166.834 125.665 cv
167.6 125.666 168.37 125.372 168.955 124.787 cv
169.54 124.203 169.835 123.432 169.834 122.666 cv
169.835 121.899 169.54 121.129 168.955 120.544 cv
168.37 119.959 167.599 119.665 166.833 119.666 cv
166.068 119.665 165.297 119.96 164.713 120.544 cv
164.128 121.128 163.833 121.899 163.834 122.666 cv
163.833 123.432 164.128 124.203 164.713 124.787 cv
165.066 124.434 li
cp
f
143.5 24 mo
142.119 24 141 22.8809 141 21.5 cv
141 20.1191 142.119 19 143.5 19 cv
144.881 19 146 20.1191 146 21.5 cv
146 22.8809 144.881 24 143.5 24 cv
cp
f
143.5 24 mo
143.5 23.5 li
142.395 23.498 141.502 22.6046 141.5 21.5 cv
141.502 20.3954 142.395 19.502 143.5 19.5 cv
144.605 19.502 145.498 20.3954 145.5 21.5 cv
145.498 22.6046 144.605 23.498 143.5 23.5 cv
143.5 24 li
143.5 24.5 li
145.157 24.4997 146.5 23.1571 146.5 21.5 cv
146.5 19.8429 145.157 18.5003 143.5 18.5 cv
141.843 18.5003 140.5 19.8429 140.5 21.5 cv
140.5 23.1571 141.843 24.4997 143.5 24.5 cv
143.5 24 li
cp
f
165.066 167.567 mo
166.043 166.591 167.625 166.591 168.602 167.567 cv
169.578 168.543 169.578 170.126 168.602 171.103 cv
167.625 172.079 166.043 172.079 165.066 171.103 cv
164.09 170.126 164.09 168.543 165.066 167.567 cv
cp
f
165.066 167.567 mo
165.42 167.921 li
165.812 167.529 166.321 167.335 166.834 167.335 cv
167.347 167.335 167.856 167.529 168.248 167.921 cv
168.64 168.312 168.833 168.821 168.834 169.335 cv
168.833 169.848 168.64 170.357 168.248 170.749 cv
167.856 171.14 167.347 171.334 166.834 171.335 cv
166.321 171.334 165.812 171.14 165.42 170.749 cv
165.028 170.357 164.835 169.848 164.834 169.335 cv
164.835 168.821 165.028 168.312 165.42 167.921 cv
165.066 167.567 li
164.713 167.213 li
164.128 167.798 163.833 168.568 163.834 169.335 cv
163.833 170.101 164.128 170.871 164.713 171.456 cv
165.297 172.041 166.068 172.335 166.834 172.335 cv
167.6 172.335 168.37 172.041 168.955 171.456 cv
169.54 170.871 169.835 170.101 169.834 169.335 cv
169.835 168.568 169.54 167.798 168.955 167.213 cv
168.37 166.629 167.6 166.334 166.834 166.335 cv
166.068 166.334 165.297 166.629 164.713 167.213 cv
165.066 167.567 li
cp
f
265.5 146 mo
265.5 144.619 266.619 143.5 268 143.5 cv
269.381 143.5 270.5 144.619 270.5 146 cv
270.5 147.381 269.381 148.5 268 148.5 cv
266.619 148.5 265.5 147.381 265.5 146 cv
cp
f
265.5 146 mo
266 146 li
266.002 144.895 266.895 144.002 268 144 cv
269.105 144.002 269.998 144.895 270 146 cv
269.998 147.105 269.105 147.998 268 148 cv
266.895 147.998 266.002 147.105 266 146 cv
265.5 146 li
265 146 li
265 147.657 266.343 149 268 149 cv
269.657 149 271 147.657 271 146 cv
271 144.343 269.657 143 268 143 cv
266.343 143 265 144.343 265 146 cv
265.5 146 li
cp
f
121.934 167.567 mo
122.908 168.543 122.91 170.126 121.934 171.103 cv
120.957 172.079 119.373 172.079 118.396 171.103 cv
117.421 170.126 117.421 168.543 118.396 167.567 cv
119.373 166.59 120.957 166.591 121.934 167.567 cv
cp
f
121.934 167.567 mo
121.58 167.92 li
121.971 168.312 122.165 168.822 122.165 169.335 cv
122.165 169.849 121.971 170.357 121.58 170.749 cv
121.188 171.14 120.679 171.334 120.165 171.335 cv
119.651 171.334 119.142 171.14 118.75 170.749 cv
118.359 170.357 118.165 169.848 118.165 169.335 cv
118.165 168.821 118.359 168.312 118.75 167.92 cv
119.142 167.529 119.651 167.335 120.165 167.335 cv
120.679 167.335 121.188 167.529 121.58 167.921 cv
121.934 167.567 li
122.287 167.213 li
121.702 166.629 120.931 166.334 120.165 166.335 cv
119.399 166.334 118.628 166.628 118.043 167.213 cv
117.458 167.798 117.164 168.568 117.165 169.335 cv
117.164 170.101 117.458 170.871 118.043 171.456 cv
118.628 172.041 119.399 172.335 120.165 172.335 cv
120.931 172.335 121.702 172.041 122.287 171.456 cv
122.872 170.872 123.166 170.101 123.165 169.335 cv
123.166 168.569 122.871 167.798 122.287 167.214 cv
121.934 167.567 li
cp
f
143.5 268 mo
144.881 268 146 269.119 146 270.5 cv
146 271.881 144.881 273 143.5 273 cv
142.119 273 141 271.881 141 270.5 cv
141 269.119 142.119 268 143.5 268 cv
cp
f
143.5 268 mo
143.5 268.5 li
144.605 268.502 145.498 269.395 145.5 270.5 cv
145.498 271.605 144.605 272.498 143.5 272.5 cv
142.395 272.498 141.502 271.605 141.5 270.5 cv
141.502 269.395 142.395 268.502 143.5 268.5 cv
143.5 268 li
143.5 267.5 li
141.843 267.5 140.5 268.843 140.5 270.5 cv
140.5 272.157 141.843 273.5 143.5 273.5 cv
145.157 273.5 146.5 272.157 146.5 270.5 cv
146.5 268.843 145.157 267.5 143.5 267.5 cv
143.5 268 li
cp
f
120.519 123.02 mo
131.512 112.022 145.093 106.174 156.843 106.178 cv
164.358 106.18 171.108 108.556 176.027 113.473 cv
180.945 118.392 183.32 125.142 183.322 132.657 cv
183.326 144.407 177.478 157.988 166.48 168.981 cv
167.188 169.689 li
178.346 158.527 184.319 144.737 184.322 132.657 cv
184.324 124.937 181.869 117.899 176.734 112.766 cv
171.601 107.632 164.563 105.176 156.843 105.178 cv
144.763 105.182 130.973 111.154 119.811 122.312 cv
120.519 123.02 li
cp
.968627 .576471 .117647 rgb
f
19.4995 146 mo
19.5 118.559 33.3431 93.7018 55.778 75.6791 cv
78.211 57.6596 109.229 46.4993 143.5 46.5 cv
177.771 46.4993 208.788 57.6596 231.221 75.6791 cv
253.656 93.7018 267.499 118.559 267.5 146 cv
268.5 146 li
268.5 118.212 254.473 93.0696 231.848 74.8995 cv
209.22 56.7261 177.988 45.5007 143.5 45.5 cv
109.011 45.5007 77.779 56.7261 55.1517 74.8995 cv
32.5262 93.0696 18.499 118.212 18.4995 146 cv
19.4995 146 li
cp
f
166.48 123.019 mo
177.478 134.012 183.326 147.593 183.322 159.343 cv
183.32 166.858 180.944 173.608 176.026 178.527 cv
171.107 183.445 164.357 185.821 156.842 185.823 cv
145.092 185.826 131.512 179.978 120.519 168.981 cv
119.811 169.689 li
130.973 180.846 144.763 186.819 156.842 186.823 cv
164.563 186.824 171.6 184.369 176.733 179.234 cv
181.868 174.101 184.324 167.063 184.322 159.343 cv
184.318 147.263 178.346 133.473 167.188 122.312 cv
166.48 123.019 li
cp
f
143.5 22 mo
170.941 22.0005 195.798 35.8435 213.821 58.2782 cv
231.84 80.7111 243.001 111.729 243 146 cv
243.001 180.271 231.84 211.289 213.821 233.722 cv
195.798 256.156 170.941 269.999 143.5 270 cv
143.5 271 li
171.288 271 196.43 256.973 214.601 234.348 cv
232.774 211.721 243.999 180.488 244 146 cv
243.999 111.512 232.774 80.2792 214.601 57.652 cv
196.43 35.0266 171.288 20.9995 143.5 21 cv
143.5 22 li
cp
f
166.48 168.981 mo
155.487 179.978 141.906 185.826 130.156 185.822 cv
122.641 185.82 115.891 183.445 110.973 178.527 cv
106.055 173.608 103.679 166.858 103.678 159.343 cv
103.674 147.593 109.522 134.013 120.519 123.02 cv
119.811 122.312 li
108.654 133.474 102.681 147.263 102.678 159.343 cv
102.676 167.064 105.131 174.101 110.266 179.234 cv
115.399 184.369 122.436 186.824 130.156 186.822 cv
142.236 186.819 156.026 180.846 167.188 169.689 cv
166.48 168.981 li
cp
f
267.5 146 mo
267.499 173.441 253.656 198.298 231.222 216.321 cv
208.789 234.34 177.771 245.501 143.5 245.5 cv
109.229 245.501 78.2109 234.34 55.778 216.321 cv
33.3431 198.298 19.5 173.441 19.4995 146 cv
18.4995 146 li
18.499 173.788 32.5262 198.93 55.1517 217.101 cv
77.7791 235.274 109.011 246.499 143.5 246.5 cv
177.988 246.499 209.221 235.274 231.848 217.101 cv
254.473 198.93 268.5 173.788 268.5 146 cv
267.5 146 li
cp
f
120.519 168.981 mo
109.522 157.988 103.673 144.407 103.677 132.657 cv
103.679 125.142 106.055 118.392 110.973 113.473 cv
115.891 108.556 122.642 106.18 130.156 106.178 cv
141.906 106.174 155.487 112.022 166.48 123.019 cv
167.188 122.312 li
156.026 111.154 142.236 105.181 130.156 105.178 cv
122.436 105.176 115.399 107.632 110.266 112.766 cv
105.131 117.899 102.675 124.937 102.677 132.657 cv
102.681 144.737 108.654 158.527 119.811 169.689 cv
120.519 168.981 li
cp
f
143.5 270 mo
116.059 269.999 91.2018 256.156 73.1791 233.722 cv
55.1596 211.289 43.9993 180.271 44 146 cv
43.9993 111.729 55.1596 80.7113 73.1791 58.2784 cv
91.2018 35.8436 116.059 22.0005 143.5 22 cv
143.5 21 li
115.712 20.9995 90.5696 35.0267 72.3995 57.6522 cv
54.2261 80.2794 43.0007 111.512 43 146 cv
43.0007 180.488 54.2261 211.721 72.3995 234.348 cv
90.5697 256.973 115.712 271 143.5 271 cv
143.5 270 li
cp
f
143.092 21.211 mo
121.556 51.6108 115.735 77.5926 115.737 96.7518 cv
115.737 107.917 117.711 116.763 119.69 122.821 cv
120.64 122.51 li
118.69 116.539 116.737 107.799 116.737 96.7518 cv
116.739 77.7963 122.481 52.042 143.908 21.789 cv
143.092 21.211 li
cp
1 0 0 rgb
f
143.092 21.789 mo
164.518 52.0411 170.26 77.7948 170.262 96.7502 cv
170.262 107.798 168.309 116.539 166.359 122.51 cv
167.309 122.821 li
169.287 116.763 171.262 107.916 171.262 96.7502 cv
171.264 77.5911 165.443 51.61 143.908 21.211 cv
143.092 21.789 li
cp
f
18.7105 146.408 mo
49.1102 167.943 75.0914 173.764 94.2504 173.762 cv
105.416 173.762 114.263 171.788 120.32 169.81 cv
120.01 168.859 li
114.038 170.809 105.298 172.762 94.2504 172.762 cv
75.2951 172.761 49.5414 167.019 19.2885 145.592 cv
18.7105 146.408 li
cp
f
19.2885 146.408 mo
49.5414 124.981 75.2951 119.239 94.2504 119.238 cv
105.298 119.238 114.038 121.191 120.01 123.141 cv
120.32 122.19 li
114.263 120.212 105.416 118.238 94.2504 118.238 cv
75.0914 118.236 49.1102 124.057 18.7105 145.592 cv
19.2885 146.408 li
cp
f
143.908 270.789 mo
165.443 240.39 171.264 214.409 171.262 195.25 cv
171.262 184.084 169.287 175.237 167.309 169.179 cv
166.359 169.49 li
168.309 175.461 170.262 184.202 170.262 195.25 cv
170.26 214.205 164.518 239.959 143.092 270.211 cv
143.908 270.789 li
cp
f
143.908 270.211 mo
122.481 239.958 116.739 214.204 116.737 195.248 cv
116.737 184.201 118.69 175.461 120.64 169.49 cv
119.69 169.179 li
117.711 175.237 115.737 184.083 115.737 195.248 cv
115.735 214.407 121.556 240.389 143.092 270.789 cv
143.908 270.211 li
cp
f
268.289 145.592 mo
237.89 124.057 211.908 118.236 192.748 118.238 cv
181.583 118.238 172.736 120.212 166.679 122.19 cv
166.989 123.141 li
172.96 121.191 181.701 119.238 192.748 119.238 cv
211.704 119.239 237.458 124.981 267.711 146.408 cv
268.289 145.592 li
cp
f
267.711 145.592 mo
237.458 167.019 211.704 172.761 192.748 172.762 cv
181.701 172.762 172.96 170.809 166.989 168.859 cv
166.679 169.81 li
172.736 171.788 181.583 173.762 192.748 173.762 cv
211.908 173.764 237.89 167.943 268.289 146.408 cv
267.711 145.592 li
cp
f
143.224 21.0829 mo
127.517 31.472 110.969 48.1285 98.3245 66.6961 cv
85.6854 85.2654 76.9399 105.74 76.9342 123.823 cv
76.9316 134.326 79.9029 144.034 86.8001 152.004 cv
93.696 159.976 104.486 166.192 120.051 169.821 cv
120.279 168.848 li
104.854 165.25 94.2785 159.122 87.5565 151.35 cv
80.8359 143.578 77.9367 134.143 77.9342 123.823 cv
77.9285 106.064 86.5767 85.7198 99.151 67.2589 cv
111.72 48.7962 128.205 32.212 143.776 21.917 cv
143.224 21.0829 li
cp
f
143.224 21.9171 mo
158.795 32.2119 175.279 48.796 187.848 67.2586 cv
200.423 85.7194 209.07 106.064 209.065 123.823 cv
209.062 134.143 206.163 143.577 199.443 151.35 cv
192.72 159.122 182.145 165.25 166.72 168.848 cv
166.948 169.821 li
182.513 166.192 193.303 159.976 200.199 152.004 cv
207.096 144.033 210.067 134.326 210.065 123.823 cv
210.059 105.74 201.314 85.265 188.675 66.6958 cv
176.031 48.1283 159.483 31.4719 143.776 21.0829 cv
143.224 21.917 li
cp
f
18.5825 146.276 mo
28.9713 161.983 45.6277 178.531 64.1951 191.175 cv
82.7644 203.814 103.239 212.56 121.322 212.565 cv
131.825 212.568 141.533 209.597 149.504 202.699 cv
157.476 195.804 163.692 185.014 167.321 169.448 cv
166.347 169.221 li
162.75 184.645 156.621 195.221 148.849 201.943 cv
141.077 208.664 131.642 211.563 121.322 211.565 cv
103.563 211.571 83.2188 202.923 64.7579 190.349 cv
46.2953 177.78 29.7113 161.295 19.4166 145.724 cv
18.5824 146.276 li
cp
f
19.4166 146.276 mo
29.7113 130.705 46.2953 114.22 64.7579 101.651 cv
83.2188 89.077 103.563 80.4288 121.322 80.4345 cv
131.642 80.4371 141.077 83.3362 148.849 90.0568 cv
156.621 96.7789 162.75 107.355 166.347 122.779 cv
167.321 122.552 li
163.692 106.986 157.476 96.1963 149.504 89.3005 cv
141.533 82.4032 131.825 79.432 121.322 79.4345 cv
103.239 79.4402 82.7644 88.1857 64.1951 100.825 cv
45.6277 113.469 28.9713 130.017 18.5824 145.724 cv
19.4166 146.276 li
cp
f
268.417 145.724 mo
258.028 130.017 241.371 113.469 222.803 100.825 cv
204.234 88.1857 183.759 79.4402 165.676 79.4345 cv
155.173 79.432 145.466 82.4032 137.495 89.3005 cv
129.523 96.1964 123.307 106.986 119.678 122.552 cv
120.652 122.779 li
124.249 107.355 130.378 96.7789 138.149 90.0568 cv
145.922 83.3362 155.356 80.4371 165.676 80.4345 cv
183.435 80.4288 203.78 89.077 222.241 101.651 cv
240.703 114.22 257.288 130.705 267.583 146.276 cv
268.417 145.724 li
cp
f
267.583 145.724 mo
257.288 161.295 240.703 177.78 222.241 190.349 cv
203.78 202.923 183.435 211.571 165.676 211.565 cv
155.356 211.563 145.922 208.664 138.149 201.943 cv
130.378 195.221 124.249 184.645 120.652 169.221 cv
119.678 169.448 li
123.307 185.014 129.523 195.804 137.495 202.699 cv
145.466 209.597 155.173 212.568 165.676 212.565 cv
183.759 212.56 204.234 203.814 222.803 191.175 cv
241.371 178.531 258.028 161.983 268.417 146.276 cv
267.583 145.724 li
cp
f
143.776 270.917 mo
159.483 260.528 176.031 243.872 188.675 225.304 cv
201.314 206.735 210.059 186.26 210.065 168.177 cv
210.067 157.674 207.096 147.966 200.199 139.996 cv
193.303 132.024 182.513 125.808 166.948 122.179 cv
166.72 123.152 li
182.145 126.75 192.72 132.878 199.443 140.65 cv
206.163 148.422 209.062 157.857 209.065 168.177 cv
209.071 185.936 200.423 206.28 187.848 224.741 cv
175.279 243.204 158.795 259.788 143.224 270.083 cv
143.776 270.917 li
cp
f
143.776 270.083 mo
128.205 259.788 111.72 243.204 99.151 224.741 cv
86.5767 206.28 77.9285 185.936 77.9342 168.176 cv
77.9367 157.857 80.8358 148.422 87.5565 140.65 cv
94.2785 132.878 104.854 126.75 120.279 123.152 cv
120.051 122.179 li
104.486 125.808 93.696 132.023 86.8001 139.995 cv
79.9029 147.966 76.9316 157.674 76.9342 168.176 cv
76.9399 186.259 85.6854 206.735 98.3245 225.304 cv
110.969 243.871 127.517 260.528 143.224 270.917 cv
143.776 270.083 li
cp
f
426.863 50.5342 mo
425.482 50.5342 424.363 49.415 424.363 48.0342 cv
424.363 46.6533 425.482 45.5342 426.863 45.5342 cv
428.244 45.5342 429.363 46.6533 429.363 48.0342 cv
429.363 49.415 428.244 50.5342 426.863 50.5342 cv
cp
0 0 0 rgb
f
426.863 50.5342 mo
426.863 50.0342 li
425.758 50.0322 424.865 49.1388 424.863 48.0342 cv
424.865 46.9296 425.758 46.0362 426.863 46.0342 cv
427.967 46.0362 428.861 46.9296 428.863 48.0342 cv
428.861 49.1388 427.967 50.0322 426.863 50.0342 cv
426.863 50.5342 li
426.863 51.0342 li
428.52 51.0339 429.862 49.6913 429.863 48.0342 cv
429.862 46.377 428.52 45.0345 426.863 45.0342 cv
425.206 45.0345 423.863 46.377 423.863 48.0342 cv
423.863 49.6913 425.206 51.0339 426.863 51.0342 cv
426.863 50.5342 li
cp
f
410.734 70.7148 mo
409.353 70.7148 408.234 69.5957 408.234 68.2148 cv
408.234 66.834 409.353 65.7148 410.734 65.7148 cv
412.115 65.7148 413.234 66.834 413.234 68.2148 cv
413.234 69.5957 412.115 70.7148 410.734 70.7148 cv
cp
f
410.734 70.7148 mo
410.734 70.2148 li
409.629 70.2128 408.736 69.3194 408.734 68.2148 cv
408.736 67.1103 409.629 66.2168 410.734 66.2148 cv
411.838 66.2168 412.732 67.1103 412.734 68.2148 cv
412.732 69.3194 411.838 70.2128 410.734 70.2148 cv
410.734 70.7148 li
410.734 71.2148 li
412.391 71.2146 413.734 69.872 413.734 68.2148 cv
413.734 66.5577 412.391 65.2151 410.734 65.2148 cv
409.077 65.2151 407.734 66.5577 407.734 68.2148 cv
407.734 69.872 409.077 71.2146 410.734 71.2148 cv
410.734 70.7148 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Vincent Pilaud) ()%%Title: (2triangCylinderCut.eps)%%CreationDate: 29/10/12 23:38%%Canvassize: 16383%AI9_DataStream%Gb"-6l&m=6E@1G`nIG)eAVhL7ibl4k7TLcY14qqdEsQ1f*0+u.+N<UI:c!7d<`ap+I3Uo\?YoE4<7Tbd191q-!<Wff?1J7oG<=@I%rldV(m/6;+[pQgpqj[2hs7PtnWQ2<!A'*]^Qf[_iBE.eXhnAsMk*BYZ[uC3UQ-b]L]Lkb!O0*VjFF!6@h2?4/]R9V8([p7pGkoTC%QZoXj^&R6Xa33qD^HMS@oA@W=Sfe!ebL`rTrQFa/qY?'LH2-au=8>qL=0Gt;hn=O2r53M[Sh2?q_lqAC^3]b.J,/f_5JMUGo4'<d%`UR$2nsA6)>uE9Rf&FGjqr7:X?bQAk<;Q0d^Nq.)rW`D$^Z+-X^ARId`Z[KJV3?E'Qfko/5<gd5ro0RLmcE(#p93rHrr;sRC[D#3%YMVHls$+9GHePbFbHg@3rr2#KY?sNon<0!!QK;75#+:90s(uu&n9ERJnJLc1g6Q6Oj8[l0^&6]eQiHVtRAh"+hL9_Dc#7a3^NfE<%kNVX<_j@S+58j6bU_3R)s7s9F?b_!gbI=Z=kR^O>eb.>)H2#k4f2fiQYHOSujr5E4])C+trr2`jhn8k0/-#&1[i\qiHi%jm=oTcU%n\t+W^O3dRn@)c>I/E[,rdd63I*I))_1d2?SqVRY4UQVej4`-R.E==<dH^!][;&ZoC:o!ul-Ff%X73Ue?iB-;gRh^=lEC3XrN!-1%Pmm%_PfXu]3K.TfqX4?brKX(+q!djVoj8!kni'ciZ=\UXV)Ir>^D32aqtq2k/[T"Za!Mff^QcIf4ob!kZQK$ar6I%rfCAe9&"p6t%^1,%,;Xh#:r4H:I1e.D'&c[h&s,BnUHbJEQIB"":<=1pTK"FXk?):f0?Dl"_`)#1;jU4lYNk9VX?2+dlES'<(].Om^H+DitQOE5l%?Lcq=[1k`O^#K(DX$3:Af)BE6ZpjpHT(N''Gk_\3E>QWJT=>8=nr`5;0I$G54W"c[@ba-\qCKX>TD4'Oi?rBgH.&-9,5fBhnJe;A%'ACsheFmku`eC%pkB]RbY7Gr^F0)^HZ\4tIUlJ],YC5$:C$XunYE@_9?apL(_b\dX/#]5os65F"2t"QXI"c]DoN@+`5Of&Te+LaW%m5[f.'6dl4po1<m<2/uamA!+J!VG13a4F#^VmDDqFP_COFQD/&oN_9im:sn[?@%BVi?!s'.2/JodlM7B0?/d>\4c'*j3p$9BCQZ0%@!%1MS?dS3kfd`K9&37[:+K(VkdaTKdXpoq?W3M>m@DP6[]B"ST)4E?fX1+Wb?NTPom-MNIVI,NB.>e)Rd8aB%9J!-rGK5QT/h;]%]62k25#3-b.s3r0DtJg_2]D7X^9+]eo!T%lOj>;EhIa\&lM^C![9e9%>o.tK[rTI<^-^3HCqoWN&e&.%DuD_EQEuln^\+X.rOi*[%YL`>eCYj6@YL?)CZi/IYo3":r^\-p^g"i3bCqoZ/ra%g-^\)@[?cp^"G5/'&Wh96Rrg*).F@l:S\&tUI]A?!Vh>$kn]j&XYeN<St%:0*,L#<m!KS9P"Dptp>aA)Gm"l!`TMkC$!Jc<>%ZcGKT/J%EeO\_"G5jZDOp"+I!LDh1^G;01IFQ;8^XV2foP1\YXk(Ao'J7*YYD%eB;PTr?U]d^IOc-f4KE_-<h+RepEEQjiZ0CI5]+3hQ?P,r-A1Ld/!o.Ug6<Jk:F7,:B#./"b#>Mm-3:EXQnRS[*<s?7A^bT-_FuD%H:NC],3.D-1!e!g_G8leQ2QS#T%;@7D<-W)FhYq>=6l]Xe][o*3N[<4qhDPWT&"6H6QbghdP82ZWh7\NI_*JhV4TL*Q[AOHf62(%%H.pTqW2j:"I.p8FGpPU6?aM`U?^&%4k9Y>CjG?]]-!=`MBc(rp]f\1'(bT9B[&>d@PsN*MfMcY8j*TA5:Gm2/0Q*ec[<S6#J)PL_%ORc7a=k`[fFe(2Y>%Mhfc8h)io6T[_QTG,JVq[Y2&$Hso7ir86[Bm"bSs#dOmD>g)m&A:G(!e@X>-7/S(cS'&c?dA(YWjnL/X>$c%=Rf&"G>J$>f1Y`7P#>k&r:s36hQ=H_P!'</k9=.*<,2MI_KECmT*&6ukFMHtIlX(R")8+aRCn":H0MreZI!-gIZJf%lK=bkpO'N<%T&3gE;\+5heU-Rd\M4ofF?/</=g8/<iN-,h6?Dl9V:oun95MhODV\aE^?8T1Sb5o]We4R?;0I=)rO;6:WCt9Xhd'9n)JA5>=5^nS%f)5qH)cuM@))p0?hN]RkE0($Q.MNV>?[HQ/PV0(04%bjlD-(\3gU1/Ok8=@2Yq=BOlTA\F:MUd'iqmfn/j48eU5WS$e%LY<N=VPh%9/%i^*>fI1-sZ!^]1Q,eXQ?8<5.>PE%DsXQ>ip4:Q#5A!)\"[*c5FbE&(YBq7E1Q5X:\XX137`"B]UiY*cufa->Dp0\&Z&NIDXeL%?\GL[\Qk\+CbJP#Ei#R+q,GBcG&</#B^hmQEYrY3A!<<AlRMEd$QW_fgca*WGY<ZI^*GXa>PN'1S#MKsmI#/:KJpjF:(=6NFEjoS%P,-NDqrr!9>??j^2ctG%H$uoCVi@>;G$!1uNA7"Y`[ZRHC5fVYfjR1.qJ?JEko1W$_/@_Ioi3i>M;s7OGFjSj73*hQbe2iAQ'A^q%k_J'I)f@EjFWMjmHsTU2gp36[T%F@`,NK3G-b(f^eCP%3MpBjCCNl6VZ@,dsWB$hS9;h[9$@^:6(T\)A%Eal8Y_%]n4eL'UZdR"H%Al>UleC(c[OW%!7QaRKsFYm2dX<'j8;(CcCXeA4$:W?;AGm%\eA@d(FZL1o!Y9;HbjIAY.\B$j=Y]cp%<9bK4m.L^Fbk8ieW1;,N%^$'65_:('Go-_7dH@kS3D7#N-o6rgP4)Mah@GJ;W=a)&<<SCZN8b<DbA[_E:>+:OrU78lVFAV88-`cGo-ek!^aseqj+0U[nCi/?]%'o`31T1(6SHP:8NmbElT,cclN2r9Ct(?h4(q38p/Sa2Ge5KZ+?R\ak83TkH177k\W:9d[RnC]j<AWUE24&fhfD!d*Bj>ne[ad?Xu%AT3;Y/4O>:Ta*@DB[W:*f[2W?Bc=J)1F816Cu`O(l?qp,4Lmf=Y"Pk+KUV=VQ)3k(gQd&N<Ogc(3TJn;_Ok3jh6-F4@lG$ahrS;e%c.?'%clFC@fOo!sHjZU?NHTHB$]W-MT%\AXVNDA6,U8VG<%4*T=QLj3E`N%Eh/qd-D5LmX.r:QWdOkY!N_@q$/p>C'EH@rqqO#C0%KYrN@*0^[H/S1dEd<6Gg(B((9`h!B1\q<I3mH:Nj1Snt.o,VM6j3FQ&`dG7bF^++e+VZX$I$V0Xe@\g$\^>]9MFJ!QZ^B62h&-+4%Bm`]hhB15?)P<:5EpGN2-<[jBYBatuUY_UE1c3Waj1'L@5Rf*o(Wspkf!pTImaLhiesu<#F)Vm)(:ARqDHEnOef9'BjqkJrWr,S9%>K"0a:[=N\"YfEAUtEQM`@1@6lsQpX:4m"?0Q*@7(kP?RFXb2Z(*0eb_fo"*n<kI@`7fXQa6KGeg;K`LWW?",_qs+uIIIuHF-@"[%=mu3+k!=E_A^#)sp"t<Yg:9M8$+8:[Cg<6@!h2'>.U%&L>mkI]S+SncAboUb(2rkFB55>QbFKs7b?U[mEc_5@O\l`s2u^\n<?Hjp%]1I/(9[fFL`J9GVq98a&KA':Zaum`T+9r,tA6B3V46E)T?8Le?0&c).e7*JPUN\luZqM1+Ao2JQ6/`J]lcN]cca`D[cE?S(+l?DL%F(qt5bA#_c\m,&I=/q1?`OG.C:XP8aGGdO#FHJ'SS/pX?Ns$FnUe&_qm!DSm'mng(<kB:jQCepuJQaMQYZEL4g:Oi6Ca%?9D7q>`%jA)DNUq]3BmV1C&*o+*8grgC%=GZ>6U3[%@TJTJul`70.C@S2Lg<ZduanhUe`M/"kVGGiZk`#->ffFJ;["`\jOMu'?pOuWdHst[P%Mf=SSGJ?82kEX\@5#?[T>-&h8T5e1QjjW]aM4t^XI8K?3Xuc$E];Zn9)cq^)Ur*fG24AH%oKYCCoFNj?qrp\GZrLG*2DFir;o.Tr%`<D)B_EdcVSTjb=kq&>I%:g])O!tTY%\OI'Eh_,cPujnR-Z.`k9h=%:&):4_[V$Wcc_3I"\E7#mY\I4l(L?B?gBX3t!?*Ds36/*A%(/cqh?1'#H>`u%&iFD8,&*+;)2635dIK966?pVt@2lqMtO0(Nl@c6\,BC5r_l:%jXJO[&r^NVi^jQO.0-M+B>d_'^K-1A+)E;duD%_n>-;\!5K[]/ngdo6ocX8)*ptmcYBLjrUZdDUqX$bRND4n5T!s%Jd%'A=9.4]0#kdj-9Q!6f2qOP<7:XK?rDt4Of=HL,:QNAbK8C%[gkoEh:<9@CqD))R>0Kg$fk7'_=**Wmbn>`nSm1Uk#X[qE/tTcCUpa[pQJt8f=8637N9tF`n/"-gbP:E,%MgC7+P)p=e;[8+'cFM%ktC_CA1p@E%A/s\`VUg+=KQf-,O@^WUBf$ll\`A(mG;n9Af[gfrc?-rXKBc+T<5S>c'jje<,:l-Bh<Kud^$<&&SXA8PiqR&VhlT,%UpVDQ9TK>SdljXaj?+?Fl?%ouFTsRT]W*"KOkgmM!A.\)@WSo3X,%dr<r&N&'6`Vo,L^r%G-=`)BI0mU09=SEm?3q8EYknC6E7_%%4cLD:V1&ST;GLuQ?KanmlY#7sCt\^ke:Hoh?Akr9R;UZP/%>ZV+^A9dL/Kg\%/.0pU%=Huoi9!hS7\GKoeYsEH4T85)Ph\2+5t(*%g5WBr7<Fq_D]WYe'Hhm3nba/Fd+("G,kt5<cO9L48c<r0/aSDlPK#09(maBM8T^W\YAG"`%2/ta#g'*Z@EWraq4<pMY7-Ks*^^JG%7dI9YC"\h.a,)_.PYu1$77JFF5*^TQjIXGPSqXbUkrp*]Y$H#%92],`d93rD53&,9CQk?VgH!ljM_q>EYr.Zm>\W)le45D=AB4qo%"`JPP$Y0XbIZ[d!2*S#3h:a56a8i%'74%sjEr+rO?moh1UGolaPO>`bcCV5dVd7mpHZN&1lg>^e2\.E6:CVcF<'Th,'^bqo>q^n0%:\O5lo8[`oqH8+h4[Q6)oQ@Y-hm]$jBu<)5B5\U;UtR-[JY[E+Br=t][VBDBE2dKY:-/iunJQD![^l*UHeu&JG4pi6W\N7A+-_#a%#b<J?ifhg;V#M5n7EW>PQL/nDEFUjo$3o&@BrPunhe[QiK*'K6ihq=80?JNl.&q67jW&)$lE"E2F,.,!rCd,rA-SiHUBdJ_E]23-%[-nr\S,5NhjK[IcQo270a<uG.@)J-l903s`Qs(+#rJ3*7Vt4iRq$B-F]KfZh2YP>6Ve<R%4:0n9e%rP6d78Q?H2r;Y;?pC.cK.)f%7cmr[(S8cufK'j6J3Km+HmiLKqM%I53<gt%VuaWf8fEe3ZqO[LRVuGC<:oV(mtdJ9kYbZ6foMrJWb]@`<]AkNV*JdBdR#5HBrgV8%^^jg#Ge7XS>]K9lof&KqC_rj`>HP@u(=t0tmNCOFC]dKUlpS#Q9$SK"%E-i^N9"K'`V'R]co]p$jIASE>ATm4XLqH<`qIH?c+=1H%[/XLC_SYt0l(1Dg7W"gl'=/eg/C&4\*0)4kBitD;IB4:LSaCW?][Nl2HE+-QDu5O!PO<KZ%6HYLUXTrMQ#;lh3oda'DG7Uo8o)%?%WM*_F6!LYC@i[M#U.6JNh5,K?Fm#8&^GkF=UWik_NS:E1h89+Qe$'Ul^=_>i>JTKG%6*"P?"_*r8HW41f`RY610nhU<U`l,.SC;<%]')hSCUfT%+k_:/Z)9@$1WRb.<pEk+@K_l:Q21pfn=tEmk=+D_<EHaa3p/9\..'NL=l<Y`?,sDDS)]eT$HW?!A*^?WgXPqe5CmLL%GpJVIl$Ch<_Upr!P,lDlbnVV6M8!AuIFT(9jg%M5G<4pbB"^.;qC0l[Apm\ZXL1c>:NuQPAtEe`G!Y4lDbq<2ZEtRu2Pial(>1TV%]MdE_BmHI/Rt^1i8feHpS]@6F+7i+hb')/Rk+"K9f[\_[;be*S;i8h?_0U=PqkC4XQp$2&nR-)*Ubb-@b&R*Mr#?b#?0+[sXgGNg%_D14U>s(tuIsA$:8\eOO7%kqJ)u`?m?Ij;Ih5)]c[mZ/KR2kqq+*ie;!NW9'@^\QW(Kuu+*,(A#WWdl4)/WNW21)B-5M)BN%!hU4%PTY(VP0R6;_)o;0h9?j"FY3?2I4\WLeTQA#@D1m[B'!@k/%X4fmA"Vr@C4;SUjq-4[nI[GrMR04O-a&>[)0CaN05g2ZImkHNAW'2%f7!*dS(-"C(/XfDkujd\FlY@*+$Fe/X]kCG@p7.L9cZ65PT@?ofWWYZULtH</`+ab8o9&++^:F*93#PT8b;=R1e4+c#WoCA*O.bi%8fmGng:Q-PCg_q%])])Q*-1(pXqsgi)=7a.E8'8uMA7Yak9K"+\o+riKoOAk8#+o,q<:1<(O5goJ+S^>?sM;t>in9.c/jbSRK%E=%577@"g4n9,cu$-Ilp]Z_fGAa9DTF^ccf?f2<a4k\?3Gc:W\)\7fhSb7h_=6E:>Y0d9K=d#[q!!OgfJ%nf.2h$E+f'-ZnLE-q.`sB%LfAB_X/,Q,c:bVYD4]t7M12M&ld`W46J-bup:'F+;LI'(2#D,oV(m0Q3FlVn=7c.rmR`CWVKPiY/?3!YeK\$PkJ=G&e)l>dSY+6P%DH3.s*Q;-`N?[R[=UV-E<BMWG3IEbJn[*SqOHhZmI%t=f*[4gNJ[l9j^idi@EF!QYP@qd7_W#((*O.el,-F41mV1!#G9\39ca.P]%"4k3T3B2Qb>OE(p'<V;oI>68UlOHbsn$C<ZDSGFr#Dc:*4k[(%OO:T*!9c?6Z=RK[`nZ[A2jpTs"dqAcEst35]i%Vuk\%TU46jO;%)1T?WkhQ$gYIiRVWV'g$fi>BXeDaNO<Y%/6KTj0Y5FU-Up,g@j\bXRiNclqc+Mqr9fjTqHkIfZ6FUVVp]gqNB,!k$Z,rmMZcNV"\%Dg^upAb0=@rtIu0H)&^XaadT4qe49Xp8:^21[h6q3d#>`//?q$6k<)HC;M#JO208KY\61$c[rkRb?O"CTP;F.p$&3WIe.rWWGG])%$iTACF/!;6do>$K2ng+tQ'5e(n&I`K$6BZ8U=<T7:Gj4eSCZfuGl+L&d"?nnH]Hj/4g^R2:T-7)>E$A2eR6.7cH"afeA4;B2&6Qg%%JSI',@AsX>o))[p[6nM;=?-sEP7:Rm)pF,GHj@`lXuJ+TA@9\$=H*slgjHQn<r/n%.G)%hn=L5)u\[hS,`<TjbIch<`C;.s6@A3%PIk28"j6?(?hg8eX'`O=<rVcYn)&Qjoj>E2ot/+KSA'=DcS(?/ruSDjh]2[iTDusT(E\*Lr/6&d?gljdqW9f2R.ApJq"!0@+'q-X%rp&gAI:m]Sf?`?h4R,/m@=Ik+huE?)b?r#2s(6WUDr,p8mH^+ZQiHBhbP,p^*qcE-\%d:cqVBb1UL*ipjmi0$YE&YUq>7A1^PuU5%IfB':q]j9+2Xu]l12Ypk&AJ#>gZNK]rP.74?iLoaP^C/iofK_E\_Q]WRX+nk\&\++QZ'Y8k$]cas%cb?Dr*_Y$GVX/]f]cV0>BNm%%I(4Vhp@]C!&/hN4MUpiS)5:ernY3<+.G6?SRjdaIf8SN^HjCD,TjsGIpR!jJe,NmgUB5-5IACra#EHN]_]%kFaF)HcaPpFqZesS%NBD^jiRKk/8;g4cJ&[IRT"faQ8ne+fhnFF,"58+,h*/<I[JUlir;E+7IeW]h2fCrtrqBIN0/0OFY?ubSqen[2I.LXo@@hrHlKqY>%k2^gG?J<kPDn^\p%<h)Cm>'S*H1RAtcMT2$cnc(/r:<9<T&39OqCcFG^CoE&oAa3Unu_DLQX:b_@n"H2B8=M7O6\M?cX.^ll0t;T%bOs=jO&WXgR'1IU*MsA3OXo<op#^#<eSuW%f6S@eH!D/tm`'D".kJ?G-iOj#*CAb^.8Y_"j4/Fk[<C]/i#\$QiL\XY>iR"EC=041%=#n49eBK>l8ZoC)M#H/OFe9G[0QOOWqbtXX'tG6ge'fb:jgrNUQgWtHk2h[@R2TQ&jBdF7`L_gM,mJ8$PO#q6AS'Ilaed?$Dl&?u%HnLb+-eH&q@>dfmOIi9N:$B_&[pDjq:bbh6Y&3,k#BX8$U>/AAXgKe5WL_!d]PI9/g)!llUo-X.`_&;te3iH-HMm7.h;SA<H(I7f%oiQp7+*$,m?AId_r?Kq]?<D*J#INsl*Zqp6dX8<8:[<GC%Qc/4l2,p7[kp9G[p4:>Y(ogYFZXGYFR:oE%P(h;8jRbue6)Io7+c\g%culu>ALh%J<S,_kf-f#<*GJ\*H4VpS=X_i,qNT;KkX3)1='S5FEDUcs<3:8E<'BGK0)..?M0^E4qa8%(D(B0&V/.I(e#0l#X740V%pB-"1Hl)066F,K=Y05c)h/;TTQ:u4bo:B'D>kdU[r.#Z'KK9e29W1^\8u1PK)Z:-Y]lVb?V!<UOMubH..^>.A&#@g:"n.;u=YNCS%)Q>1g*pe(p<g)d"eEZZuMA:`V2f_oMI7UX_d4-AaP*O0"RK,OX@jTGsr:O%Js3VS8eiq.chdg-V+E\7#:a]B,dM@u&`gX\/Y/V$g%!3jR,pG$jZ4a/:h,cF,`LU-ef^I==K214-DYmT))EBR-(&)3`Nf13!uYIg:i10nNt#Q8dp)HS"^Z`B+efL=qATBqGYOc:ATJs1K;%?$U/EqK7qdbj31TMH/[?#8n4;W.-:"_:lal(aO@oJr%q<C<k?kScs2LSBPF!#R%5qEY7F;<KjX\J>bl]S?HthZdm7pHoRbE-W0+r%q`@ku0]@6_JmWcn$CQ%JaunIQk0s-J3d!e/+KCYo8^NugV-deombe:5+S76m9mE5G]VD_,[4gnsdru&`R+0JOl`@s6P=Y!^@V,WP%M(ZW.YfOhg>o*DWl?]C%\]RlVUiRnl[C)5HnpDY--h;X/cR8;]"3E>>5Ps",rSa@YbHiM(?IknLO[Pt#r'Q\XS8/D,,N<(YN?p^^%*KKHj*,C$NQ37[fPUaF1I.jU:=loGul(P'291(:6oTc$/%sT]>:4c_t>M27[hc`HTNpAHCkpOt(I/lmf]RB4oqggB6n<f+els+p-%_Op2k%pn5Z;d>+B6iRa"qq-%q5KZL"r5b-E>g]a-r=O5)]"9:Z_SiPEVJH&i+"ikY5H\U"Yq&%ZV+3.$AgAGq%mP8K\qVTaSKDCC%=(ACZq24I*$"mhXB/86URI55UA&*O.A&Xl&=KcCS3KQ,Y=q9h_&K\&ZqJL9;1V*188UuPu*P%/DinV\gYEX%D^CLO"fJpD3nA3(t%O#n0H`l6+1+5_).".?Z>E:E=N<5Fa?.PgTJT5r+4-fj$ZX&-i>]%0bS0s,.%i]+soERO%pZLf=]DBU)g%'-</([696:AAk+[dp2l%r!-L,_(2UZi]9aT*od_P],ku%]+4O)puqC,$^-CqrYk^p@"4\jf4fH:l)Nd4H-!uLeq8!sM&SDj3.H&Aqt?X"J?scHQoMq%%;&r)%r4j2dFf;KjG$ka;E9`'+b^9G]+V3uPNC*i,@F6**I,a"=`"#F%FK:NdUJ6+\:V=TUa-G8iE=pe,SWac).`k?c]sk!YhHR/-GqbOX%?[Ae(*(IeNmY?PL#*0)-A`0E"5KG%>R9X*Pfu1Pc79&qA@J*op.k-&.`2fj((E%EEdn)8"gURYcSYbom378AT,22tNHA55+X[R?E%\?9:igb!.oTh4s*P3Y>WL$_fDLI\iBpKrt1$bQu,TfM<O*kBkVCL[s3)neP@4\qN]*qBbFAR,%=]HWBZq1OHA:A;A9;]N734C<l[%5#)d[\E+iYiZQN6S;W&[Mh$j."tS@_PDbFeA3.fO;3[uC_,CuA]?4493qR!fQhqeM3U^(/1)WPOW3etU1D?[s"8b6CeT;!Ye/HSB%34)8:j]je&0M7Vp'XF88``!X,*YE!sj#m!r1RV#]o=5Yu3Bpn9d!/:tk:1$uTN)iU]s&X0I7d%@6!(:`olM;ab$[MEjkYh)H;_N&%-iWrQ?K'_<\.6uC8+_q)?Diii#Q(9EoI>o,l+n,53nPN9TA+QLe2DYiAgM;!j^@M]1bMEnnPHH8_H[gS0%;6J=5Bj.oR2G8(t:3M%<u]$]YD#!69[q`AFu8h<iIRLXZunD82Zj9emo!+:/0Q^@',_9^9f/%=]S%`Bj;bG,j:rIoAr<`@d7"Q+$MQB"\tYpP)aF_?,:D]l%6o+BF)ESKFV]>lL1]=(Hs&e<%i9igNpK-&J:dJ,`6I9/05f+kh!j7niE-JNg0Jl8KK\\?)L1hMnDsJd/k:M`!#G33XT>&0tGnPVB%FdP@G+*#8\>mL6OIIt[C>iie%rArRQD0P[/om#cEj#L*5LYK2"#C01-AX;]S8`nMM9CCPT8T*"J[N(HYRa]>!\P4,*m'9.LG6q$R%3?t-%f.FPtilNB<(U;2]__/@='DCR)OZB\GmLu'ZP)/9Xe^=q+RNBnF[_*/IA3,e,4Nh$9S35lmBf7#QnW8OX#X9+8HUec^&3Vc.%gete$6<NeYQ8/`8cGHa])(0@XbC\_Yhi)&KK[F-ZpTh"hj?XA,E>#g%J%lt6g6+/H-5,N_IkStbSs[m&YOIAT4Y`WX-M560rjPr'%`.X_Lck@)hED1%<Q=si4C<#Q]PB6j4%CPl!R_@s+Z-7c"kB)M%o+2QVIVSl#D=YRlWpci36Bjtr+UV*ji]oU(R'/YOReb'5)i$qn%L%C+)2DB(LBs6uKG</FPHJ6RRG4GV\I9.aXP&:dT$[rW8R))8pGf6/bToO"F8%*1lE/$_9::GbK+,DkmmS*r%2_<FkNu`V9+@j/,%p#(i^ao)utA@SCe!KYAn_++m(dLJMt#SMPXD8IE(n)+(g*FV`%O,BjQG6jdE17BN46UKKuO%jM.1pmQ!D:6:XX$;,AOLu&ZlJ_i(%.@ok&`!3WZ`<$WZEL<Ca)kGdbJUS^OLe+2V:.g1*Bc@cM1d`c?BsEFo$p;nQB^YjETV.;8'GtB-+<lH(*B%T(KDqsnjq6T59GjEc%g1O2H&!`,;q$c?0@BcYtFS=e%="r@'r9;K=3emqOSXG.C4PBJhF%A]SSYBO$CSu!E7hgt>S_&4QNY0aVW2Y.IXKrM&P*81T"uG#=%ZR:[lhe@e*mG:Q9R*d^ET/kPA<$qSU7+9/a;BX5Y:`:Nll@c!:2Di\!^)fq]hT*CnOOf57+/X9`\''D*eLhA;.GAeP=j?d&Q3)N&%JlGs'pQj1nC"uqh[O5s>_Y2(%ekGI`-#-dV?7$rk5!=7gAi"^PbKIWEb%CLd@7n\nN'_+fmSgE@?q*$Up?.'^jI6>3ZN]3pUhi]I%*r.hh2PY35`]:NW@7nLa/3Wkm_VuIJ:V2/PQDNCq(r6m=4H[l%ffYDAT7Cb%dIEh=T/\Y#mb`)>hjn\0rn)@\5+HfJj'QXqeXE]$%f3uf/oc,U1j,,(N9Co]KF(<?.]sDg`PGN?n"(,C'3F-3,FR?D)De[=mkohXL%SfWjE,,s8^$M=(o=)$&WE\NKH'c']DlN":8R"mA%qOV5?90iAbf:PWgl/UCS]DhUH=+')'9m::0,M2eUAHlq`hHU0.G8T"_j((Bt3BiXMr7[;8X.IROWI\cZ#6rmkbJ@)?Y@dC`=h`fs%ca'sK_0sn-jpc(f+EEd5p8V5Q3QHaai74!W:O(il&7H>0%(cp79ju=Vbm%W)1l5?k#_,)Xo8cJ,r?9db8VQ>g?\e+HkBC1/7kQQb%_^ufI=*sS>'0XTAp?ODpR1`[Cj;+WaW,?>;NkWeumZdE+Jf,L.Q9g1dKX`Bu-cY`e5pjcf24?Xh.*oA5R20DC3FUL$goC2C>C*@4%fWX2)i#4iMf:PWgO.OFgfAWM)qKPPOiQcpt;0P,rR$mR63_e5G</o,gn?G;LP/p>h$3rWLr1op<*9Nht"rHmeGqmR,Co;8q$U&sd%EYql%E8[6FC;s(i2.`=MNDp4Og/uTAR@3!#I)MK933GKNbD,(\54R6s8VI[Wdrl`qqQKU`=+B9TLH5iEFXlS1Fd]BAHg4`2@DS@u%g6lD0OF3U3-?G;]lXi"El0Nma%j/H0iMf$M0>-R+faa\(.+$)15l3N;fFFU]ps7&k5PJI@&e`-9ap5YhZJjSX0t$Gfkdnoc$"A]:%)7Kg$cXO2*(c]VG+:rq/5k$6S2G7\t2]q,p'@RV?5*>"AH%,56'7'SL5b93_#)P!(/1Ks(d%O[Lbenr._'ac?H49W&.a%<X3sB/p%kMLE&cL"3nl(dDUhu2<E,!kDLrq6'_e_>TNfB9?o^\ldDd8K*Zc+,nd@qqF:Zu,oOHR@,C7]<?kc89?\S\f!,8'lD%:q-o-)Ht^R%ZK<BVVV:tS*@FL$R8_T.M.n"Uel,'j`un(_/TX8418V;SJAZF=hikqJK+_;MotBX&4P3m1+q^LEet1$Dg#tIZ0tZgHbgr>&;eEW"%>.J&DIEr7@cTncOmU'4<rn/5G\XW,3Tc4qWpZqXtU]]6f_-SB.\^POI2@M5pZV>p^gHN]u:U9YU6eA/-k:K$71;rIo<=PuY6$PM7%*U*s".1;_<Fl"kfPX#^'USV'FbFfKk5>X,W7OW=]j8DM_gs,q3QGI9G(d(K']LcZ3re"qrhijAsK9B,EE]WR>q*"YcK;ue]Wf=86%CHi\`T.#V3,qEY%.4^ReS@1>u;S'GLnE!8g$75c2\8X3<7R/.+%RMnA:l/8iS:rAoQ;S#ld(bVUp;GnMO=Z/uitP5u9NF1?(ri-a%k*2aI,7,`TI2:;CA\",kCtQc`>]0r/3t?s-R)8F!<0JDgBJN6[_h1=gSPj(No/O!;8hL@DQ]2M=UmG:pEDee7VZ#MmJje@Gcj=@g%e,cFe:XTMZ*$C:@InnkEa-&t74b34p."uU(,<mT%`5Eb=pO\U=Y<o^+AWV8]_lc>'Og;+t@GV;^Y!S":\aDe0Snf@#elp%nORImj%,'0e\#:*@EKh9fpaPe<GYfa6fAl9k7)HkRTlO)`,E(/sVl(-O`,Prgqn,@W=O]!emEP(3>QZq&^8#PenBg+>Cg_`0!$l:-^]J)*g%a*@*1ET#"7DdqdOA]4?"6G3Zr[K@beRF,;0FtK_p&`(a-.uFLNK*?8`/V'n\gH%[1%,;oD\UEWiAF!n%m8!#[$.XLc\A#j*-U#_*%[3$*WS^0ecHmHq@o-mHfjYiXOEO_;&$(85Xa+:a7pm)Nc==<Pm]UIY!eCd/2l=[i/F4-c3Q0u`SJEhb1W\8HY3hfgJe8R/q:SdJJ%$;[Je6jaGqiPu%<DN3p'pR'\-M](7krBmdYjD;a6ph,'bQtA.f;>0q\c5O0dh+NB";gC.;T1j5LKdTgsaV=ab;Kst9T1ndIo(?ON%5FLM,9)$)=V>H)`Sk.gs'V7kSUS^"]m[r&qrmR;85M-[b^3fb-\&WuIrVZ$jZ,5[">:eRMoNct1oi#IHT1&1(4T-M\*m7>]e`@<]%Hi1d^hn4C5iPWk!gNTjXb>8$fPQ#7cG)FA%T)C$dacjL#a^=W"07!,T4S_XAr$>/<Osbb$P@aAs,X7F.'.H&+_B82!;,;hugA+mP%EJ?I>ruj;j<7pKBO<;0ls77Hu,<\4@,'!Vomta4)>unQObg:sf5Q;5;Jc$n\It$omXS2C,`QJ5OlW<PI^OH!<=SCe$@p5MdV=rr\%4qe[:*7lL1+<G<]Jl6,!hqIf[])@])kJt?'5Q?KQrl[#:s5s)Ps*ZnV`U\NV48F#'nXHN%l99ZJBtnA$?g(:8nOSWfHclWn<\Ytr%<>E;1@M1j"EGnFI/b'?KF-kU2n-D1ZiV8J[V2io5JRUU)B0D,u`'/NN/^et/eiiiU>("!0TDmi4)H$3D'&,tnkuVk-Ni2X<IEo.m%!JdZFMhmdV]s!>N!*Di!2.`"/l298BpM7jrA1&F.H.HNTZhIcA\r=/AnqQhj')OE5B5<`YehoW)X(Ha.@09)1_/;1`1:`ct),7&3%'ebC==ftE)a/gru+oE(!ab7at4sl[#@<$*W<\BF75)(-O?FIJIb:,SYKs_q>L\8N]E05VX0>JJQBpUX-HdJ0r91Fb?FC?b'DCdmK%'khjFKWY3@r4<tj'B877A"ta!kbWUt>3_A]8-aftaggWBSBsVRd*]&C7,Qnil<lV0NG?IGCC:Yu=imtD1,#Dc.Qrft^nW>3?rPpU%EL1lpe8m^UD9dSkR<>3`T'B2(9uIh1b_t'CXGE^#lnW/r!Em!H1!2XRk!Y0"nJU.sZC>nFUT=gK9gWr.LOZaEnAm#@h_h:+<tSN8%mqB[(Ee:D<<]%C*(#04/b`Zkh2E'agms^K;p)d)ciI;=)Er6a'A3HEZXQ=)1a$s=+`Ek;fc711<0aLp?TYoqr=+!\7;%d[C=dT*.%8&-P7o,:4^L@d$RooAR#FVg&=jKSi[jjk'f(7E``$dY+=*a50^oSCi79ZUjo]O9#qPEo7_#a20DljCVHenSuW<b7hfXOI(nBBr\7%k("L+.G5htEn8OeA?bUVU@^RM&B>+=OL(YEk7Vk;HBTol=dH,d:Y&(F8-]BX,!GITW#5HFMG6.cYH.#,E#j98m8pLrg%J;jL35Z%%4[jIcisKM4a9E!t6tqgXMR6N-;'JZZWcU\N:j-?g/R!kpUl_kC;UlB@C0SH'c,glD'Z*M$XA^F;GQs/p=J`D.eglde2oH\;W@c5"%jH1Rb'4bGOJ!JPUKf'QQf14N6U*+1qZ;&-EUgLDF1N8ghPcCJac#q-m7'XknMf:4ieRt\COCH1JUTi<ZKeS+;(YWZ!QcNeZE.Ypa%JEekSdQD5>Ak2P6B2Y03fih5WD=CZ-1bW&D4U):W3TuiQct:fs&`+bAlEir&>MN,VHkmTM6.W(9n+(CQ7eR[H.me>?.jPtK7EIN"%D$)uf]M/cG`.rQ+@=dA]dDbQHW0LhKg`hP8L<106#hTKhaUH>l(G%/IMps7L#jT75iZ?L,V-`(XENdk@U.SIN6XlCgXHdH3;G@7A%at<0;o(4J\PV`p,;eJe5=HeT>:'&1QCmZ?uY;.8H=ZZg:D0@IEOj1X<3'%(d&g8E5Z49d`^WAOXjGJ9/$%l1>=G5Xa=3,8R.gB:d%FlO]$bDlXhFWhcQ:9kEd._(hL_h;>X#2Sl?'l0&U&I&1_^G-j408*:[1kREO3oVJ0\I=p2TO=l.)bCBi1;HZ)@&bWofJKnnh8TMJ%=\1=:Tjkj<."YS!!6"rn@aU/l`3.=[0UmeP@H7H!aj=[rq%\Lb@to\1ald1rl-%,s02j$DW^[#[GU:O?AJAV@6uZeag7,VaUP8a]%@gB7!4?/Q:SSX?5MuqV4Ea#raKI6uNRTJOA]r`)#PI4(BF'k!'%Tso_gJ^aOTW3_=BA>A!@Fa-Cb@N#V"qr6U/`:Yfk-?DXVed=?%VTq%8=\"`\GfKIQKsL&Ki`7D\Vurg^Fc=Yt%XFh7JO%UsY9OBOMW-DFn]rI#l\h*T?bMKSnbgdV".2-Gl/LZt+XN@AkdSW*949*h%Q@^6B)r$1C'?c`@aij)PQW?Eb`Zc0YAh3N)W.M3EL*mm8>#JlodRo&bAq>fo%Zr?&FYJ$>TqP?I"k$.s9M\V_+;?ISPsD[A@RB.G%g]b\I4=Gf,K@)>Km4a;>GG(8-/_Tm/dJuk4PEa$O,)o!0g^]_t%nfh8pLD5rckR1IQ1R;qIO_Ae#,nK;.\Rd(/0ujBN$rWn<'d<Y%#]WPn/>s%d13OL-"ZiUhfi@[a%].1AX=,-u*g;ualBDlU65,E<e;Qb0Y38:cQLA:(%F>hh"*M-\K1PGh_9&1(85,A?CP!<G:X,X*%9=#&F!0q,j3q^LY#rh+]/[,\'(5#<=$KZKZF\<Urjl,:A0'V2VWA-IKK(J=CYM*VZUf)cYA(9\Z'_r[5lLigi_=uVM+(p-P!6iL(%#ph.pqRu7-7B*'/JdHc$`5CE@(/]I!:L$=M+A5e.^b#YT%2MkbLKKIQ9.p[qNG.p@<W`tA+L?Al--&6>]FE4C]aRM&T.1_N[3=-h%:mAmZ(DZ?$<?u7":l;@ms#fXdoYh2.DnVIk+oTf5Rb5#'rE7mSAg9q&=gSMjj$bs\`srP^<'-K?f]X>6JnR+69W_o.#]hCjs,ujr%&]Cn(7E[+""TOHpU\J(^5,0-36nd&;&TsjVFs6B;M05X["1sfD@PVs27(MMrn]1obifunNQ_Fs18q(:(d$"s_7clSZSIX2gfT7DE%*>.Nnl]B=&'FP:9Gb:(9@+Un<*N[Tp]j=a<-/fo>SV_2\iA4#mVN#7%#ua/LM^^W^$)[d<VLg+AYSUG9.3K^Cdlhc8;JY][#g2j]%J1%[3,6ukHWT-C4%%<A$7!7FT0(n=9>O&-`$aqW5bK34bJ!5r,dH.)B(*4YmO>5EdCHBnBP%FOr;tAkZP332M;(u/e5)W0d8cQKh%)S@F6oiY:A-7Aci%r*D(=k#3(]F.8--Da&]NmCSQXGbXKd$E#_T7M-D"jX1G`e%5@2[oEp$J@dLB\rD#,Ge,>@S+@QD^XRhY"3t%%YCj&X+TcaCY"]XSR7\Ad)%%qFjXrSOAmg<Aclj]hFb!.h21n#jB-MuC*b?#h$:U8oK&7"qV/0A(;c1)oF0AP3s2qRU,4A[>f.]Xo%eq)YHABAB\F:2O_=8#;*.]6EmWUq4\0#(8;cl\_DE))c-7ftA6of%c)-1!jjhI4IcaCa%,<l7B<o,8lDf*f\3]Q7La!@O$'AIJ'M%J>Lh\gA%CWP'_I[_E&n7RC#P+IA:@Qk[a3.]GhmP<Ts_T<Kn6ogrXH,;Q'MlQ"odl:fDt;[C0M0Lp]Y.RgP#fU5DDTS556rI8/b.%C+6GT\96RO)\uI!Hn,N7,<-HDQge&PP0mS=j.q#J_V#<&Kmp0;n2,6;Uad&64&e(+=d2BhF9F!p.im$*<f,O-@)Qb&s/fCEI7suF%#7@0rY4.[L92S_+k*(eJ5,nY5SfsY;gk*UE&H*^I*B!*sJj]`7KQj=ndtNK,iVJ=c?X`n"GJg/s\=d+kR.e]Fc('=DN##e&5h<PC%4#K"bi*ZmME[mfFD=CO/;k.\sFKqLY(!aBchkI\6>_.fqM:f^&*,#DdYdpEq"4q+Ws'?V_hLK7*)E1FeWnKG^&76r*iW'd<cp1$n%26iTF%],\U^nQi(D%+]/W1L;m<sB1gr%Pq*a\jN5l4)5l?^Q-YKepONWN/_u=[n&K:q=Xf]NUohZHW`"_B+GW$Ms8Z;kWQo/!W@E%_ap!KSUU(&MCe2J<CRoDXh**kqKf)T_9d%q:!0P-3)>0M:)#'UC#!]^g$'Y8+qpJA_8/Pd%ui:FbU8qBU1^<c2g[7e1!*?\e<P5X%GctNC)u48RJRP=3lg:p@iP]:e:=^/7CP%in)_6b3>u9!NG7gT!](2M=@6J#E_7Ke\8!]/=-"<c@[H0=,!M0[%-#?0:12i-Mi++j,%DZS="048iHZ5o;id*3Id0J^$PY/%q?Na:[cd%9G7NGe;=+Q&I5h;'IWVrQ'ArQ4EA_3e9$#V.H#f,Njs=;L0dQ)m7CasO^O.'V?%%Jl1uJ,'9.u2S@Z$T=q3?WhO0pCe!b%YG7LED)C;W*\LuI`a*'g<m?8*\`&*haO2pAH\_(-$T!A<<R$g^I"o]3AN8L&e<m-H)fYkY%*ecA>d"VHSG<<2OiRi:[p-Jq4Ur%#s7BZjL9DpEmPSZ:sYt*iW0p#lBk]UKHa:)Q:.]*Z4di0fjR)gUQ?s*kIC5@ErIKu/f@gY%i%L;>62#ej%_U\[S]?YU1d6@F^-!cZS^\)c<^07Z-M`<6f@KhZ'4Oks,"Y59VDNk*U:2f=3^QViT/Q#?p#a,?`nNA1eK@c3[N<e0ij%r!-Omd1YM]6@Jpa4BP5F!AjQXF.oW.$D\h&0EAFu1ZY]R#mn",>d&6-M-d";)Qkm*]I4b1No:*bRo^cE5_"puOem%TcJ2hfa=;S/%@H^Zo0;<Vf6j3ijglO$24"K)u0>+Eod(?bfj/KFa*9^<D_$nd:1M@?U\J?"WkN>/*38=`'4]GVt=uIYoRPpm.;fj;5q^fqlC7%)K%@*".]Nr0&t`H:cP?o/.q+I>W6015,\;V&[I)>n%K^n]oj0h[>8_JKIb</Ln%BLf2Y;M,\9q6X[c?p_7sr__a,i3<VJX`BeZ8Zcr?%(>XH\;h8=]S>-oO9X:P>'*c$@'5lP;3<hP0piJ=VM)C(DYL8gM-T@cYUHsLS:(<:?l6_[2!6Z^'joX*@&\qp37F4WHPY2&!bA.b_%@$B,T;AS*0Dqq(J$O]rf=Kj(Zc(.br)7VC^2p(aEVL$GW'mgX(nVq7-eBu3fJd[.p\`a;Q;&KGTYS#-Bs3pk<C1.?92qVT?l>oC2%58\/B?;g(Anjb;^ARCfA?P"EGp4[lT<Agp&]HJ.;Jst$:<qUr]f81IokEErj;lM07`4)`rrb@0uojK>.'1T4+XiNKM8e8>n=/)@d%\d(/FHEq@9Q5+]XHqYEADI-BoSd:laTn"0cVCu2X=0hp!Lkpgs&)]\u5h1l1T8'XC/PjrSq+Z5f0nPe?)I-&$;5g%2*i)Di.E-I]%?G?9W9Ei@JKk[T*\C)6\2_D-HE-7Ssm!I'lk:8Yhnmi.ESmcR<L+9Mt.')9i'4jWK;Z"0nJr<s*Ro6C"=o-lM(RGMRAbp5?`#n8f%A_ePtT[s8,=rn&,<Os\_&CiuG7s%+g>38`6/Ip5:7Yp\eqfl+I7L)e+0N+a9JETa"Wq[I\m9M'9=9os011>HiSYObhb\I^D%88+t%OjUYhFd>"Z#r3ci#,l`RVVnMTF\4fIJIcWICW0j>G:+C:n41=p#=];fjcl:/>6%CKNe<o@'I,ChS'6Y6@m)'oKKk'V!AHlL<0_@l%?r^^:ig9&^0?n\&'StsZ7N>;a&];MBSA@8oqP4!?eLgJ4Oe93/)DeocUj;Ia"?DTE5OFcTOcZpmM[mdF=h2-_U2UZ9BELq>h)K%!%RUZX/5kC(#pa*#&WZ2%j4+usS_8Lrn<,deHrt"qZ^o8+Ze5=8f)T##2"VMl!b.M57bsV3*8i^!tTN;9DUKY\qMe*4.'bP>k;p>i?%e41L_'@8Vt8B=,R'u[e<%$%K&K90g<\7@%N>tY`C8-GX6;(S1;[e@Q\+58N"n!Z,J$&V)Nbpkh,+c!E[0d22"=q'7C6Yb/C0a'/=%,l$jk!Y;]/aa74l^*BW`F*H#[Nmn@$BW.EQYKT3s.kiHtF!fY"*b5Zjaptj!!i'iML_M7n0Zl1[1:KA]JU)64Z^/,H;5<b4.N)])%5eQUP;q/]^LeL-s?SA"p_Fu8b16Hm>PRQ6m)$V5KKF9SIrQIGMe"Lee9JOKP0a:t+2CmSN#ShGXYUYA_>N@,F<U,il:?Wm5L#rK&%W&l+S2P&b9Ld+6`;md/`ZO"+Yr`rS\o`FrMB%o.">[52oNE]Un=C-Z>ASUE6Bo!j!3]S'WQ1dREVs]?kI&XL(<crR@-MKur/4'nW%b+PLpH\\hip-R>oho46+0_+bS0gID/`jkfkoIY<53@iHml[%W0=NII-;`-$Vd+KHuZ1Gb5roklCPHg'c2&pU%UB9lI,(EcjWsjRR%\0gl1;hWA2$8@rUZcl+@`Ou&k2PV'BDpKT07`SkUTDi[L?6;A='E<XFkB^@:Pr8;AVL8ZW!1,V?:X<:Q9Xd_9LdDV:+,n45YJU/D%hb[KVM-V!YQ[7S1TrJ<S%[pQ=k!3p:aFi4r9K>BN/<Od^aHD'5>1B&T%=1rcAjK]MobX2GOm1ZqI<[uFqN^$kTkBFHXA3tcN*U"A%K3'?bgF.>+<nP16_RFo+9R*DOStnt'/jhXP<E%[m`p.cU+WDp=cP1QGe?h/<7cb`F<Yu\emNC!>1HhU+o8A=K%'0?SIIZRmNZc-R%K.?6bVK5k4g.ErnWKS$IO$tp1.\"1O*[\H8Go'U;![3qSY^Q9[J$3ZM6>;_DcliY&*CM9M73O2O%lu""Bfl[CA&?MX6c^iumiZli%Bc/V=etdJ3K81I]PEpZP['NbY%ODfe)B<s(R-i*;]GHWfo$d'>b4o$!pm:9VG"aD98?tdJpp.t_]$[4/cTqj_/Y:3$l04sS"I"E4%N.H9-jPF`NQ\#bW4mEh22J<F,Mnn*"\kE3(RDJ+W+q<V=,"Dl(;=%S'#+]r)13-N!eW"UT1kKCWgHQpK;5e5AUgag;&*aXuEbS2K%e'A;&eU<#Kjb:XkHs^E?p.g)^FgW%?:afkNc/&k-!Efn<+:!T21^HpFV@ZQLP*Obn#e-;k\KE7$)\=p=7?8Z,k`ZqX*W17m:phIm%"BEF<FY/g<(%",A<W_[$,K7[f$4-UH4orV]Ts5oj;\l#@1,fmo)]\(-?]P&OA78&AOU2-UGnYjj8nb#Ok-92M+8J<9;/<u$2k-du%=!0?CTJs.u23Uu2&*5C79Z=$ih9mPgZK=)eR7B&%=b$W,(>jc=.r16;&^W,u-`\Q^g5WC3`%.06e/J`2_Dk6(=Xdo'l8Q*#f9CJO%#n7Ng(=u/,=*$.!"J3UU4R,rtq.$::64F\j62'O1(3I5>+Z1)0L]K!#)F==!Q;msqXm=G+p!McNK`&DtZqG`tG@lkJp#N%ZO(;*q%>f/[3r0j)D:`D"F)L:^V=b4PZkrN#s2P=bc:!l4+`NfM;deordEig7"6+YWNqlj<C7fb8P7O]T:Chi$G1RJQ@NJJ+4jMM]#Q@Fs[%V6#NPoXl?V$t<UhZDFt==n"mpbXZ:_0kbI:/4^qd;TD>Pb$Vr24J_(&7cr_e1^@e7R;GBFE8:*9!iYOITnFnO7F>Dle;I66hZ,f6%XDnE)V('p_?j0tlA@s^#6-:%&F0G][&"?RN'l&-s<iCEW<bUe/XFPup>He2"@qMqHAGZL1J=lEKX8qVlgr$o7,.Ej-)d'pt"jJA?%>/=,@*Naic6*-?H($7nM7k<MI$;Ou:Y!Q+M%BKQ).Ba8t$8"IF.j2*G"tQ@e1K_K"&Q+gg'g*A]d0cJ'k\,Z1("(D9QnpPL)<(cE%?q)Yc`Sr*]V3=U4I\Y!Tk5lRoNRG=4ijM]Hke5_!^eqp80K':1jP<;iga@*V;'Jqff579rhkuHcefJWA,i6fc"\SB(UN@,=gi!m;%Le1ldgF7[pZb#N<"DQ;#'=do]iK4moh#@XjKY4kqV4;H"c2CGAi>bQGpHSSW@5S46q#B:u&pd7s!0HIFO';Sa.%WF!0Mj%5=':]O%Th$)s/odOT<q?G5MI^!66'3i=1(G!iTP%XQ.$DMKMgH-Er;"^6$qCBF,,,I*,@O&:Qn0,mOW`a8=q&Yq,a",aFl5eS?RaFX!0Tb9%!4<mROq:-h!D1j2h5:`.6&s;+Jq7-XR+TM*$+.pVAQ5J(AM1gtOn(4`Fl;WaOhZRTF8Urg*WPZE*^5`o\5K@ooRMD>-#/eRfoj25%$66m<Ra.=_b^i6$V`V_"H(hARh<qG7&)pnLcqVC#jW:qJ![a(.S%_'bkr\YrZraJIOkgU5qPND?a#`0nZg%'X-ToaP$9clFKcTYH%%s:4qgkIl+?`-^J>(a3T:a[Ab%mlg`65Os7/^u4k_T\D[l@^o(fAUj"lOXMn5&$("$@a>-n44qFeUpD*ZRid%l%D4-Mf_:`JdZa^%F<VJ&C#P1L(gI7i=A=<1N-&)pq&e#0l7)9Kg=`m13SFf,VhG`LUcFaI#<Q^M,hOQHYRbnTaNhUsaS=u1bCXSpC"1SKJ?"s$3X7Ye%;OO"JYC%CB,Rs/a)2X/@Amr5,d<IBtCXfYY7\#RKUW<_o,qos@<91ot[6kEiV&]"1A9brU^s,OQ5_^BpSs-c\U>eH`3U=,7r:GN#%jj/=s"CnAN@BDTo]U(V[*i?I:fE#m9baRE6i";N4H0/[If]9,:ra^KWH%s(\RA8Y:#:@H!m?nO)[)9W$:1#+p^!-B=d.c;bN3nJ7%D#GJ-<H?b9haa(Xf(5Utdh1srBf=]SH]QNSQ8ZnD#6aAe3l^=hM!ei7<qeWpcL1)DR!8"WQ[)rONna)?1\K5]$PDS:du</W+pY/)%,bE]iZbs\kp9Xq7_i_KG77b]iEfsM_T-l2d-o/<DeR2d.De"C2HT/$>FPNJ&)9<mO8]Q099c.-?.?jjWLUouTW57<+?UT+piSEI7%#.h_BmdbWhG(Sc1iE'=sJXZ)rbXd`Z^q6ek\LqIOh>'_M1Yt8=TNh^)T'lPX#2UAQ+k$/jn%N7/9A8@\;+521i8"L:ni5RqN:Wm[%K=`B"1.1CGC`NpB`&ciEnFW&D+2H\Ub^7Z_\3!Zs#puZ!D]WkA,j:J_GN``BfkMINp[3/@hHdK6-H&T&pINI^D0U84#^CZL#MXs]%l=Lkk,eAin-O7:/1H*ak+l8h+,).G_qr^eq'-KXPa3.-Vc4_*l[ZV[;1Ve6+AHsT)bWCMf9`t!I%eN76mi]BVL[Se$)WZJ+K23(?%WIsr<$E#dLpHDCB]BKZ![?k)S7:m\:AD!UEJ:![ZU;mF6m"9O\bldQtWUDd$'UTCS!T#QIYn7=T?Lnp>AhMUJ$=7*QhI*UN0[oV%%`FeuC!+LQrLtad02X$N`7SH'`A/BBrO-hMO/FB+;a.uPj61W+nV[$ZUnkdpY%,6XZ4cO!,V/E2!+AF9WFU,a;CU6g@C]q`ZXR/2R%.mM@akY\5(Bs5CIe_\N/^\4gTR<MtQ\/C1qDg[::4[ZDCRDGb_.LKMHY\G0TZgNCr;QqVcYY<HXl_n6>ScI/E2LsC[LP)V7Po4c4%rU;T2Vq5lLQ9Ugs6Ei0/JrQiuqQj0=&]T^SGteB^NG*);AI#b8=LP1?@akAiE^Y-lE/co1*hP4Wee)%gYme9&'VL<l1PK$\37?ft%6X(3SeC">$,G8>ZJ6FbP?T7sL>">0^<<ps@Wk5KW7p6QTTS^oTUc"F`d!%`j+Qf\uZ8KCuWs?mXek#(]i4DE\_`,*h5m7b(L/*Xp%L$9]n,1>V+9VNlFmL[t=o9$N<S4^)Aq+q^_d!9g`8Vlp1:_Gh0VF*q29plJ;_'?G1C2!&=6qktm"LRc`#-o.l[YVj["'-XUc,A?6%?p81-[84m)/*2FDWnJi](0'[rRk`GW]\/4b/@!<TM.cg3!31aS6/<3Eg.MhZ*T?V3H/PJ!0A"YT#*_0a$!=Vk\g+[&r8S!"[Lu(q%qst;[[O,T'[J.P]XHQu.IM@8gp-cQQ,IK+f!n>Y]b<SmVB*O%t'1"4Bf<j*LJf9c^"KTu_e-OkR6Jr,aVO?\r(^!&5f-g236VsQS%Ua]qE:e0Su07AVKQElmEiWs9)q[T.&+fK+*^c*qjVumRlBELTGKW?C.">t]m6r?^9:<:fd)*33bZDiYC@JFOriNR$/r,b230"->'%:-a!AFhjo;C4]jEN1L55#i*Y?dh)(()B:jKor0V1T,'Nup5MOSk9bR.U*VgC)C>irm5&o(ksMGgJXo8N:=ib$JXpDaG)6;_^"P7u%FrCQ!b:NFF4JE0ALLI+$k6X3Zfua_G_bS+t$>UX6BpiVb3CB]SfDa%9Bh1+L,Y(VecGZWAYqk\eRE6+_3b5W#%67/C["j4&7`m3T%,r9R&Y%m#IEZ-sI?.7qmS4:Y%>k8Fc%8A'\Frujq!S1[4"$)@>FN]$p1b?_Jg$FAeEs&OU5c7aTCcgkQMXWqRaD%O6CPk/OE3PIj%:`^aWU!t<FHq$j9_"RVjCB1i;B]9+S/X)9X;gjRo`[8YORuu1)W)Dd!l,]BM5*46$79S0%5<3a&fIWsZ1N47=/tS8:Gng;[.'Qh$%V\t',YQ:^@)T<j&":Af[P/\BE2r&N&4Rj:H9s_"s!LcK&)%g<_9dAO0k<[C\Bh80'BDO=):.JFo"#5dc9/CCk"/\pb4K@A:bGqPj%$AJ2i9PE[\2(7a6+;;<XJX(u=Ne^2#:hdIqElW^YnhD=Sb&Ge<PC319a]F-DTZGD,BjlJtC86EW0jq#FL69c0S8m^'B`K,R2-ZI;%QOtR$Bcs46*t(_N#"WB_p/D5[)TW,oWXKqS5ZHI=USF74];u)SN<iAf!ud/99V9^cN0\=g&Ahkkk[Gu,%ZE#nr.c:F)Ta*mh/ZV>%L:]Nh7n!NZOB[27MU!24fO:L1e"kHC6t`=Lla]To(^ZIXZXX2-B,Eb-n*n]'/%WOTctpqScj>ClS1XIU(cpCh*KGhC`u42$/2Y^.%#`R&*BI&Ee6?/$=:4DVg!hhp6ChCRNF%E8?*&RKd&k@P"+q:Fj$5s<flBm-q@;=o<%LdGGi4(s95j(24"TnaabV@1Ea$6?l[?UcB%QBhm?E^i8\GD30ai+N&8'M)=I$%lIArtafS`5&*]qucc]AI_j<a=ZV$5al35aOL]GL6;u"g<79Fi%4CZr::=c*bC(-p,X2?m-W#q%BCCbFNW*-&\)VI$+bB/k@n_\k06=ob)uq_C%EQcG;C[%'1N6p"VJ_+3:Bt"Fi6Hnq96gb.7e0h]TIX"pYJc"9hU7@+p?m1Y(kQ1e%DhmC@74]582'\YBU:hIfUI[XR<mc^>j#0T&[A0,E,0ND"FH1E;<#[cdZY](6>077;7V6A\@DJBN+0q)r&\g^q)!;<JQG-=5102E%%*b=4Jb5$3CJ%YPJdSSp3Ei)3_TN_R[#=;Yc!'.sX>#fJXOagc(JFG7S1DJ3CX97N'.;\kkj=JNtbp-\fF&Isg6_"f&PC]m*&C*s?%'[:P=SDdmK\IF3JLhnMSLN!HjWV&:Pc3StNjA)<J(N%+YDt)nF,S&dI%W;hJ66[+ED)q+RP1'otS/1eN.?/J?%-G8EQld41(DF5;%;RK[5[Mb2a=L*s(N_lGVaPZ"UYar+T,8fiEaIUFm5b$m8D!)Se%!)VhAd102ZAgUB__kq>0mCNCc+oEM#&[;_:co?GQpJt#A>Zp2%ba4'L#c#Boc-3Aoi;o_l.g&@&,FTc)OPF]'k(MQekEaL_R/lFVjWf"^pj-Z:9lT7I'gh.uAdH>>_Z2LMRXpqVqJ0)e"(le01.,.)%_,cG(L<>GXAk+Tm@ZBCXaGeU`be)o&@1kLTS<@Jf.r]Jp1!BT_OSSr3QUTNL1!H(>*-Vs+Ug\kQ)1i`\&6'!l0Y9V)6(%8D^d1IE%B9;!h#(RQtNDNMb!-<kg7ffO+0>g83>LDEQ)$(SE&Mg&HZ0CO7YfkBL(tc,r,>Lk.%P],n)hWOcJ]gU.!hS%ab8GSACYusod7_!s%*OQ=4%opDBb8JCpSfWEJJ_DV/m4c]p]<DheZ4)^A(g$oHL5`(2\dlM2Jgs/G)dYN*;&.X_=%8b-_Ig/1+F0f]!EKEDo<VkjRI?6\%%]Tr.GLcUCDU)2r2!7D@W*bI[HOZWg7(@&)"/lXd)UDG<S8qpm#AAi@kG7:V4%_LXRE0pD/!4,e"E./[0Wn&TG:;Pie6$pZ1:SW,%09/rU(1Xu\.Hdeq#0durG`,Tk5;LbA05B)u69,ndr>))cF?o]&pZ[27U&QP^OOi]]%N%&lHC#*I"doV?:%74W6$J)3_eZi^WC_W<%I#\=\mGZ/;ODe^d_3:"m_,LDe-duU-^De=L8:hTJHq#Ke<Rl.\-c=fWB1F=*CY(h*".foUV1*C#PE?F.oW32PP6(5EoOpQ=,JjK%%Lng0mO9hrsF>D(C[,`5g):YYk3tn+mm0sAM%SgWq=AM"tEZf\$3]J!+&-Ui-3#PWu\An_Irg`-i0E>]>BdBgXl%!aJSsW`i`M?qo%l8c_-$:-H_gX4+e1=ht>k[aJ3^i)\OVU0S8n/dSS`2)qo+>"7ISG>ek3Z7`$#[KMQRAUk_4OD2#Lq_@Z3Z2W9F:nBf=:qMnI@ud*%5._%IZc,&Bac0/m!DZ+W*%lm^S;_iYF[2-lOBkBZRLILej%pCG3Eh*eYrap^'62P':$,pJLX;TlhROMmN%c2K\fI6`<9gk%BJS'S%dD$_fPHhtiNm3)`3'Z!q-OuZgl>U2X7YfFkZuBJ>n<-sC"&:C`0uL;93&)Zam[<%P`.Oe#JeMd#.!<=^+cCtb%1H2I*&,(U*Luo5%&"aooG\^ZSl@a@I%PTW)3k25CM1HT*&SX1+@Z1s!YSg%A/H`-j7hPnd#<?B]@d'^d"`A=u`D5B\@)QX(_cR@:>]BCE#QmI'`=$tB%[hrR6mGO4r+N3bInpjt4&C^SVqZ%1;5HQY'^^oV2G3+Z)#%/"G7WS8Xlm(d#L*"W`h"WII)#U&+^`;QH^(![!GP!T6['C26Ybp=U%.D`n]eI5"9)*A>8P1m-kLZ*k`[;oZ1,D!CN@#(Ldct;Jq9L5V:%NPa<X=<S1_jCra_?q;QQ3ABB"s$1q?E\b^*JQsMIiUS/KVY?R%m]+<0_>0IBd,E_6r\5PmaSnggFElnmDN5^6NN8sOdJo")FeH+eaC3`.6&21"[]7/L7h,VQZmt]qLE*0.072o%#BIN?!?H'DV<6.`%`mAAT6&2."i=&53$M.BI?K]Y?8F$BA0W#iQ=6uTtZ<,+<*'2;GoEH>%DM\^`+$bT)#8SVK!?DB3M5Hn2LO#0c0^+0"K1HPQ^;UQi%';=8B6&24d<#dqM>2'+6\3l$K<NG'ZF;RmFgiphJ-n9AtL'(bOZA*oL%Qq$CmVp)5\p$%$1f4S\mC5_MSGiY,is%Ec[SthpL(UNm%I`6<EnD#;.F;$SQph%A8!H&_aUS)<J"#i?b/=+=5$U&W'(VON*r"_4"pdrpsM?+YK#5+Su7H#bCk!N!R%bte?0TV-`G;11M67FZ3%AA[@T`^(pO%c0O,MnMo@^rf[ugT"![;-%(A;_f^%'18tAnabdC%reh]=n3%M$bI]7k*A![aQQ873*Au9.M$L(PSjZeEL:RNoA^i;%$U;Otf)_%g-INWD3&%YBo^`\#6l$P37Fn@[ADIJO"(YhU=']7?("eUQ;1lo$k"k.\3Yk:Uk,2\V0#BHG-5.!_#91)&FbbrF)1692%N@f=TVB]TEF21\c"igDobfE>I)[Ak/gc-q7k@TH;qV4%[dc\V9OZk][-IV(s+d"rINem><R/rF62i`[c\T'a-ccllRoXPiQ8=pk,%6i,m!@NjQ93("kF@;&2&G8N@PE]=JGE00KAgqb,h@lR;H^0;Q\kq9kX&>Z-9bSWli4]jb*JRmaf%tChe<3QTrQOXQP17ho>3!^.\%9#K7GOH;cT;^Vu!dZ,PchCt$VZ.;)]ON<u!6[\rc6nak6ll_D*PTm>F#Y6)p(?#f,!=>qf%,r-*$-RgTD'0t[O]H7YZ3?9dT%bgs%'':c,4*s)Ggt!->.1r3h[5JM*;_22N*WY823C;Z_G0h8c13f](][74>`(ki<kna<?<5j"9_&oZ(KXs5I%.l6E!>^f`Ebf616I534%r.m9Bcn2BX7jLf<qAoLt0ou_>kTLKB5C*UR_2fW=RDFq*!\s2>LHljWkTQ$*r9,:8a$+eT`1`55!h#13*Wg?BUIRQhq</EP)>WJ.%&-kCF"N5;@*W_[;Nue=AfV:r%*;8S.O;[cU&J.;mH5+:`O!=ue@3.Q=@[KXrJiMo?K-2u6d=WR%H1W586QSAr1*[hbdK3>gJ4J+Y%osKb>Dhq%2U%T8kaQ2O@GCW3IV2QK6h@Uf$q!B'hR!@b#H@U0,c3mL2'AB]&',(T&&H\o0lVNR'AG2km!Ru,()1QqAf@M_6^\u;]%_YaYPa1:GacL8OHk-n[C?i9K^gZNK]IO-Q8B*Y\GjSL&!jm]BW]9b?=reb=%T_\33!@JQRN53dK=2="(i[cYcH:IE@2oW!S;Io<r%iN]]YptGlZeHJm.fEJS1j9srXL.\6MOq#F\a#-m;.#"2e2=nT`i=2M&Ln-S,%K&R'm',hQlk4uCk\<P.:^U8HSYC90qrI>s>>6>/%>M!3&o*n2`Y0D::)keH0H$.p;HV?`r;ssV($@g.r`o#ap5[,ndNRu]cp2_nM8[T.9%f:UH:dnD=<P%Bu)ttAW'mO`I;g9q6,h\7$%mf!+/n@*bBWNpl#GM(7,kefO_UUR]?FZKBrnB6IQN*e&3b:_G0o_23D992u`,PW?Sm^;'HpVqUVDRQSW:b=q8o/Mq2r5HAe058;X%._aP:nr_q6P#"O@XBkI)S6+.--;qTeZ'@"A:2bdb>mj)TM8t%"iH]?t(Kb\,iLrjU*Ejk-05D^udZ6;Hjck8QAQGY]h3PC"@[o"b%=>OE!_Br+sPU,p.-ugY'Ratq*G?>%8g0u^;d:*7Dls?X$3jp=SogTkL/1Y\1lgmZB=djMa\[a+Vn4E8$hV2k`(3=3CgsE$r`<cis%3o\"XdVEh+e:0D=$du5I9lI0X>+pa(X&i8_@eHHTqLlhZm9Wlq<f"ZGXKWG3F*PAf"c,7n!p<tcdP#2I1bY(fBSCs<o6D0*d!#(_%S>BhOgE[mV:^^>a%C?4^9;ko'K?n"Y$Li`a1[e7THk@A:L!VIhmhah<K0j+9q7paj2DA`A'^JkPmn>6>(g[RNOg`-p*SUc6n>7_*%(t#O/$q]?-Y"RWR=%nW0i_[CXQ3J9.EYW[+*NH,f"l\5-7U4#>C?,*q-^9b[lH_8?6(83)>@GRjCS@J4;-^?aXTH4U713&GQ0J-#%#q]s!&a3K/:dtUTOhLrP,]mVUe;Dfs"&iAO8ndkEg2'hRnj".H]AR-5Lf?prhmR@oM@OI9+P96nHZVlS*u9Q)0m#>3ifqsV<jr"M%k-]N)SfjfP!sb9/@D\IH'ff;F,d'Kb#]WgJp8r&:k^-(RUhO6W/<E!K$3LgK70f(3BlU/e'FUYjg/q^0JSEX!STHF98gYK1cAitS%Z*(Z\R:r,&';LR'-`Y#pZI'FlL_/*\WkF*r9FEAr@+6&!F19"eI?0Ym!b*)?hP_GcRTZ=qf\'Gq&9lKe]'k%]j2aV?DFudndan2d%JeFSJd4FepfL=UW:"`l-30)C;14,fW02%[E>:[eor_2t"KEqpKDqub7p,MKI*Z.F>Mdm_.#O+<R=E#[J:$a:pWVYHl;h4TNLTti@%_1;uN/i<IjSSH9#DHiZhJ3GJn>[=<7^nedoaV)"co]D>H@H8.Wn&k&uieHJS%;?K?:B=aT`"&>>`"Mag'lTAB;+7)mW2)U*'pg>#%dm+.78(knoLJU=G6SH0;UTt`La^NpW`qtkD&6ke'U_P`I#5dOf<Gb$1nGP\WhLDkY)>l3\A+b">QoBV6<[J7.pDZ)O[ag42p1hY>%H=#/RI@0$P]7=Un?9qqmms2G.V(aZ(3><?2H/Ml)eXDBC8,suHoF;FgJO1?%)/c=5+jq,R<i?b7)C*oP]bXLSfB%U`XG(BAaY0ij%KV9<7l$QpY%,.[!JA@O0"q/C,XEE#sLW6Xrk!6V\PH;rSpdLA;=BCQNF53gs7m=?.SGV#I]VJ1.l]MI%Yc5%?R82#ZhT2ONc&&Tf%AG:i<arJ=$<^C\!XQ"b4Xao)g0%I2@^T_2+>@(R?=5g_GR(qp'8=UcBL0Ch59:WJS!qLG0M!R#IHfcSgTl@p3E]*XI-9]"Nl^/I=%jAV7Z_3cS3ibPZ54O9DX-5O".'C@oP`@?j7J8T-):QI%!MbO,t$L*>t$5P9'XcC8]7g0ig01Z`T_MV8tl_]\V),Z"?,\g`o^>oU;%g8iKARW"M3P+K%4W!j7i[FSTN>2,u@6_Kr;dk0L5JnL-uHjLr'MnR>6$XJmW@\+HF'dujJ@9AG394^^`\uD_meDn5oPe'S?X1@kM%\N3f?#k[Lg%iFrg$?.72k5atr%CU2T*^cUVMT.!Y_1OZ]a1ajbJ%"?mA+iaO-<]:W26qdro/*^XI2*<,F()t*^>3R:>T_ZB$<Q*k%D0>e?R\HOo`K>.@#THl]7?C%Jh6=^,C)n$Cj`78[,)nI)+WZnQaL<5Cbdqi32jaE]j4%:AoGph'_*b?\G=Y<.JA[?bMH.I.80M6A%K3?Z@dDAW>@>6*Z5d;aSGRY/G)d,"SRu%ASO$`VoX>&98TQCI`#6+RT'rU8cK47L^l*o/[.8*'3n`O[)eHRrMqdQ*4*oUA).GKJn%[6"E>Te7d7gY*u+BOU>bHG:.?pU'd$WDULiS*8>ZZ(po8RqV=!9GL>s#WK%3T$;Vs2WkuroqR-*UJIcBY_#/W6T%K%,e9[9*Wo<1%!fT;#c68CMh0K5V3(%9nq%m?W\N0H!CK:3:.B;tjB]5[IL3NLD=r;M=7p;9)NkH`IR#QZ,kdp@qL,HYr1_ea+?8!!kb\M2U.ZV*=%qdkQsQYp1L?E_)r>^*m+:"4e'\(.b#R`9#H<1t/;3X7s*Mo(,QrufU`>+t=CV^/Ae%@[XAXfR';DV]T6=^&lK+$5L^pf]tTCrgK(%'`bIR9AWe$$.l8/M+;:a5XdZiU!9Efb>@ALcQS:p.?SN\)p`^E.6L^7$cCVA9Ej%bfUZLHjp\F9(3adQ,?G6Zo\Fc$(=L*4Jnf*a%HP`-64gqd6Y/sa")U1%Ha&r]M/m\R@WO?`>h.eR_cD3]GJXnm-8I9edLcg1D'jB\IB9t#O+t`.-]:_g_G[?d0n49OMNuYjkKrnI\%@&4YUle+EfaPZ<9\A2[iY[SqJS"S1JTO^HgfVkrP*Xgo?!C!7._?K-9V43uAB)9kkW/YP#<aupd&A;*p5^l!lA_-t@hbl/f%d']V%k5OY8Fq^+nn@(kkeLRRcLFHgd&q_rakNZL`@"T$(?gqo9Xi7hBWO7a-\:.%tf%,Ir&A:+K:b*&)j1L`k:0`GGPlXCY_#:Kc3'E@I%R0H#8^4RS.f3368N=,aQk/p[teltOU(RM-]l;e;;PC^P>=3"1N`3J^8=!/dM4YTA/@)Le8-GK(@/&3<*-<6=4HssucohKNV<C/IF%p$NHnk,Cl0:o>a'^"tRSNGQI3e$E>7A_#isS4$#?BML(.msXEK_8@2l<6*aaLKq7'-aO[*a>/RS#*iWW5J6^u0-8V:J$Kj0md/E9%grL/Jb;a<K-&m40c-lguqG>tGW93BfBlZ12,^T\<qW'?+DESj-Wgd_B*fLPr[c_o?i_FP@=NC)N=+(ZK*YPpk!sIPgeK#")WM5Ei%R"f:\29-#Xd1r;?dO+/!2XG%",NUp5^Xke<#`4=9*tTY0fA!r6Xk)q.i,4DP$AWdi#!+59Q[V;qW1XS+cptQs1[E:=#FJ_>T=1q)%G(go?`1/U$#7TE!<fK=NL(IeIP8+QV9\F)279@QclCBkX?%4cl4bS!hRR]OtMDpqb3noC\5>C,!2BWl`A*i3HJ`?U'0Um5hBV%NT%F(;RG1N'VQlulbNLGPTU,.3Nq#T.Qn:7?I2l6,QPD.&hTEMCCOkOb6DP-'[uLRH!CN[5IQGU:IV[2rlE4:YE8-6:@tU0QMG6+b,u%$O'u/JJkMj8A]R(#FM:C(rEL8L,t+n4kC1frrh[rfVr^kBI8Ncci//2%Z3!Eh-KYtHT68,(@ic%2jt;8<Bn<1Gn7J-*GRrYS.oMk%WD8L@`"uPWJ.Lt5mB4aNZDu?u_IQDGUk3@rN2D2Be4:#ADOGDUG8>CW<1?,ef&7X"[B#>nIG:fbVJ<gn/8i?P$[<iTG]cg%fN]gF%*^!fqm8a]he_pR6F4`.rPu2)2LM$0"Rdr5n93Zd?\=(O0cG]JM<3I,3T\[dMfs:`c=6,u,^&hLI%(?^Lg!*n-=LbM$E-/:jp>LlH%//i7&+iLLb0<B8i$qP^s:7A_.\q,Sf=m/n-dTqB6]NW#"ik$/Kc#7aE$&mt$\EU$!)MMmrV2SK;9D<a,VBRNs=U@,sTjp?T`l'Vd%X;,9beI5%FKp<tok=ursY>#A<kBSPCh5NSrgM0IW`Ycpu!6cSr*bkUu+Ag8N1:?Jl;".@j,:#5GE@se&Yter=(/CXD:=0E;Jo[u'%+kk#qdIcO+c-K??8>c&\jUo]t?bP=]TfH(Kgpi=*I)<KgfAm@>"ts4kE=L=/!QCRfVHTobMgW7/SA6_ZKL7S)H#4eq$;=1U,cH(A%?R99:e:SK6X#%cU2D^4je"10V/fq2`&(FXZb;=_]^TWPVX)5S_5L*9c%A5?ADKV#-=0V's$EPn^fY`p%-LD^`1Lk"hHC*/fs-r2c%g(r+G9TdpW9!64YS>SZLYp,)Q'C+qh(7ncSq<6j$g"t8`UnJR\\.%CUD7sC@a%Z<qO6=@*b_W>_<Qhl'l<^U(\kM2ioioT^9d_kV%'S^L^Lo\#BLJtGpAY@JYGt?HY5e;".So-lW*N6lc<VDK#Qfu')XK&j,]H@XuL@<-&rAH:'![g9p']HcKorT*;,(/`s;,=hRMm1g`%j%k)k=('QWIPfs*P]#D$F9T@]=r:</(1!hA61CNp.6`(hbYL,WnG'lXD$nms!hS:\lYX6a!"q@1M*IW$)sh^BJ`'-s?PHOXL"l#R%CC'1Td?X,Rj>pX<jpZ,bIo;7I&jg*]Mjb;`(m\cnH<c/!XQP'U?eQmS[K+WR[Q3m1)3Tk)-Xe)s>)ibZPP;!p<G)[GndH^T/?@t'%e>YKXFOqGAT:3D`bt_"C>W$H0GLnp6`G_Z/h:Ye@4^dm'llM58>7u[(/)_NaAtV4CDik,9-g1,0#@CTtVPSY3UF(D!WtshPW\W;^%Jhe`\4f>QR?OMS0Vo;e7nt8*j\gI\]SiLW1d>#$HgS^4<Sb$B?rKIte3Gn9nf!'HDCaQ?pQf<%Z]AA3Oo\a&[B^WuW-]d]f*n39I%h)\g6J5I'=4D@Y/;FQ+VN44b+0tl")jpF`*l@RBF_625'Z>K^s>FG9lnGJ)Ce>r[=j#,<$2Ts$enn]i5BR+iDDCqWfHb[_!VKpGf%hn\E5DP8Z=(i:G>r-TnVY%fS7]K89fBQ;3fO/hX&#574=U.aY@7&A_)6q0qY0Ft$7&NF*Zi[!R`8\A_]W6_&5>-#[&9m80n%jmdZ%G[S8fYV_<nP+4l%'K]CP:bra)<9AIUX(H%5-ZOs/MBbVRJo+8Vb1E5rf?r"YE?9<D)$_+;"*`_,#9Lj^Kl(sTb/<T]7lBG;/YbMe%ga=q^=IW80H<[f(r+^SA)6S!r-As#)4cn>7!macl648OA"2W6*^,+3(N'9gK/Gh'g0(b5ok>pp2-=I(1;d&Ali%roMGO0<BH.`T6%YCPOCds]5TbN@oo6pPiE%EHABki1H^DVPB)GBH-Vqp3[>nER>V/*N0QeIu+9eOtrGW85Si8@i$,DcD8bl(Pf0e`XQb1>F<nGur1I%1]^Xto4]5kG7@m03Kqk.A!Q9YXuD;Q7I?]G6YdkA]eR&/Za:C33Lei6H)Pn/5te-R(KSc?!fYCbXk6N]a\gLMRDt?=+4V-fX`[:D%B1k4L9%.f0QE8)\a`%:?FqncYDMO[<de+;!SZ%[Wfq9>R-$Zc*3=N%/g28PBkd)77$EahaMEZ?^N\C*>).VsLctRnI;]*d_BA77(%%O[7Uhgo+7Y)4eUhn1Q/ciIDkO)HAMFuu?KdpC^*;qe5Rhauq<\pN;1]bZq!P?N_8%)qNZGr.;,Jg/-FajYM0HZN(\>6jHIDKpP5%Vr1-%Nu#a8gB(=#4Bmj?]$%^QlNcmtm!1Qe\&&_bfE*7aRCnIY6d&uN4T8i*G$?d1cE`E;TjMX^JQmS#>?rOm>>e[0>tR&n:&"uf%&St\:(Fn'8(sMr6_W3-S)]*7icC@=6(146s:X$.FA77A*MFe+X!>)jfHJaruTl>.tg<GBW$Yn=J,=SU9`I-DaW5aTO@#X=-+QTJ>%APs-%dL:%G)If-NO;:STql6rt`C]?2*`0NCIN?gtY0(j=WA-eG>J5X5-'j<Z$l(Us6OucI?Hpm_S%X]r5$U*U8RB4Kc-;Q]K&3qb%_oa^:i<:UX*^.U4]3:+WDr/LBV$*H1oe8Tt^&!-)./(sNdGd\9h3(WTkL^&KA4>E.,>0)"W.M2^bFsn07(d&Uh#ckZYO^e^:'Arg%*3JF2h'l?KdqnPJM9QP?][_g.qi*W4/m,T\C[uk>`C4KnlYki/S&:ri*7U,KOM.lZm1P1lhI[4[$q_g>STLmA)M97OIH2X-p9(\K%7kE@WGIY%]:X^Ah%DFgR>?dQJ\tq$+J/X-\a$i4F=1]bR/^C,l#5to5VNTo`jOrFm]C+.0^[4%q`<$a(!X6X$0I^984lgGDj'"_f%==<G%(KS1[T(2;,'\X/MHEZ%e,dO+1Dqr^rC9ObUTCdgPDfeOjaXA2Zac6@qMfe%,>;d/fY3\MKK4r*XIELP?W^A#aO\+4gRon6m%"ETSq:Yrm"35>sQNnc'Za5rhO2.+DjMB;4$/F->fEGD@of6B*2)]"&f,Pm':*S`17r0X@"Qa7`8<![6E9c"e9%^Mj0m-EsDQd&en%XUbH^e@BCLAK<]jaH)2K:3R+Q(j4nS*T3>e>%ho"'Q/L?#Cq,D4&o<+`mn#/l2>Q.Fe%HG`^=b>ii00l1ZiWjCkfoqHg1Vc:u7T&%<O=gVAPM+r``$[[##_F#4V;'H/M32%Zp#3tmVd9'KeE)?=N.rU,=n<T$B+@WAoS`Qd^U4a>iWg;6hKJ`$!d+-9'o[5(hImG?l0q@%o%t.YV>\8gK-g,tN@3#*K=\Dc::5&iRBd3/9UKn41ii23KbTYQ\>_THN;6MMWVqOo5_D;P@=D+Y3d0Q`BC@u"'3CKRdJF!X!tI9m%$6XmUf`>`UUB&tZ9X91OCY"R8=mjUS^W'P4FuuXf:hTkc"u"7cgRF=/eQp^2Z)bH-*#0O[XpGTF2+J&m"!(j@B"DICT*SQs0V0Ps%79PSf)FSdflYsboqd;8]8_qu6K`i8Dfmsd`klt=*.^.t[+BOhIUBXe*/U2S4J4.`A:>fAq!a"PIZF:%abg<;hC*=2FHPKW&V259k%L1#gP+PUih%&0Va_96iJ.(c/**$ViGZk/:e$%u*(d6]Rd3#Ok[P=T*F9>glt,RG;AUo1'oW\bt52,<Ir,_j+%+@F<#d.U-M#8Q8e%:?lBu-oB'[\8%V;M!j(sf+H+SL&kLZ+F%UW:Zu0r+_c1[+-JZAW746K01NJd.TE]f$24R%_aD@k-@?(0Sqmc-Le2I$:G":8EFPuW%3N*]WLtGVGS!F@4j$^giW+!>+MUR<Qcloq(nAIFq7=ciV)0l"7C:T-[\3Y:`<EBlDU#oIo%H0^6-Ucku=Erhb$<E(U_*-m>Td/9;%%AV`lIF/U!&+3@PKLKA(`eY2T17-@Igk+7GPQHYO.h_9m$\Cu(?*"G!NA,T^8aIRpPOZ]oGWc?71fSH`3=$m;J^i5+Gi,g*5";KO%po8]9n6nY;9Dehs2b?K3mlA4S$.YtQUP<3A[%[)N5W6SaX[l192`T^rE$AFm`05k0O/k-:Jej?,_[JP&>m@sM+TNUB$$F8/5'K,G%Y@CQ/_D)+:?Fa8'.$CpBn7.b-!6>pa>W&5)jeX:0,rEY-`(:LW5XP':@#.h-Fjh"RbQ+#t[^q9b6TIVHeY>h=8#T7mOBFtSD]""t%'r;;,["jErBo7VG%[7\upl<g$c$4*k<n-Jg\9b?]8jf,q`S_+bn2%r*EP4n2`46aSol3[-]G@jWJ67uQMrE),3RI&VCUejG>rkP^%=X4D0hoGAa%7K8KiFcg^E;t7,HpUcW,!NX?5@d0fMU2i&(o;##7B3I5,%olp,[h0`h<ol=!N9^\C;md\:_Z@8[9E6^SqerXe>P(D%DC6$$I;QisHaQsE`/Z5M+M^'uaW)WrOu!X8'D3O%&r$q).?&',D\-fV^dY0nLJc_)WF6EZSgSt8n3l5N3=t[nBI9E9<V,hB=9,;C%=<0Y3b?kqQ$/l^d9Ii(;oi`(OQTJSqW<kJeY!sLuVQ40bJaHrN=V*#ML3GRc9`n%R"L<jCg*$[!Jr)T*<5f1dEZDn\[;ud':nf+(%!RH_Ad8bjeR\7u?-%ZGNVZ;1Ec[i%F[\BP""<uhrFV:H\rec$4%SR*MJf!fr,63*hbN]_^p*MgCMeHL]m1$7)@L-8I)LFZ)O20/f%"^L/fD]4FVf.Dr]mYD)nC:6;g$r\:GKuWei;H"jrJ^Vo_\E4TGN$eaE]S042[(6@,&.Fh+ptAYH5)AK!!'Fopk7BsI?JWHXoMT9%%(O7,'nGZbe9E7p?WFSkO$t2RW7SZr+`P!IuYU0?07MBe,!?Fb6k"=,9=]%P;88-7gL1##J(leuF-Tp`=8X:-3$.-BY4;!;$<X-.M%*\2S'gRCW%h6TM:X3l0:lE]\,$&1ifFMN6^&4S6*J.L2'YAQb%A",>aWp)-\7Yp?P$TJu#,`cHf@2/51#C4NJA0/*63oE_mAA"Y*%oS>-4Nu:_=_VK2k`=4sWAdebVH]70"eXhLcj/>rjJt^D?&WDmA_5S)A>RO43=t#\niB9eu[R@)KS/*:[[EK'a?AV8'Web^QN+X`A%1'.N-O3,3<\qf-llHg80NX1A4%D`-gV]UAH9GQ>h4^SGKHX`cP*Q]D2,u5#&ckBte]Tjd\^7_$]`$ICn5pRH+56CMRU]a?pd5%Jj%&8dNLENN\<btpq#?S+9@*EiO#Y<rBDg*S<QTI434Yd>1\:$RR?n=`+1#oP<`,GEYgUTIIG7%f`8&sH:U;s;8PTZ.R&!f[VZh6&pW%a``V$#gSMR_5Rb'E$'TT3="aTL5\:NU=pc#+GG?L)oRe+/Y,t%P:[Y,:/ZjD"VZ?Pj>hcR,aoso&A&Du]-KpO21qO^6eDkkUQ%ri%b",hG)4>6Y,df0o(^JF9H-ta>pgHihf$eF)nAZ0qAl(E@@:'>(1)/?K^b#Gb"+s/L$'NXciZlRqa"/*qaH.AD/k1"Xal]0COt9)8%@nJk4I4%s7CdhUoU#u'e8;`"qHSR3`\k63J<#hMaX)>.V*e0@#*i_[c9VRC0)9KgOJC+BL=X?fuPiB3O6I"L]ONa5j<c'-r-Ri1f%V(Oi/4%LR>8B*O:a75s+8c]A2;C8=aXahSu7=-.,FEDph3=>oA:_!(P&aalb-Tm/Lb<[@C-3tl5R5C5H6EgOE=CtNrOuF/YP3op]%!N:&BmgIb4lB#H2+HM`?fb(GhTh$4P8E:9Z.bXtRU([Quc2mQc6mg+8<u4qlI'!mo"JXVri-HMlF&Y8><Ftq]>H;j]XeqolEdP&'%>l)'0Dh;&!0J'&$mWIX:Ec<TA9dts1Bi0/ZeZ4S_K^ZHZFMHMZhn_P5?Yp[p>@JHsZlG$22JX&sp]A6J^6tJiPj1Eep0Fi7]m&::%_h/P0@k\\HHu5BnqQ!Za^/Lf&[f5;(dGsgW2(jB>2'0N2nbDb\Gbk&*;t]jroZYbC;lbM9*gj`$IiO_Sq1i5>VH^`G'oXa#nlS.<%7^#@IJYq65oj!p!=eicG>f:0^Vj)ON\QP&/ab)gSU^QGM$a?AE8!,mH3kb#1c2YG4!WFK!:1^CLk8!g!#:>aCi)m_iitugDkV[^H%P=epQ.FU)OnWQ1t=L3.tX`Z-8l<)*1K3FUVFWUmX^7gZS%Z%>ALtE)]KB/7i7WIEO@[C6m_p`\Sl7!IYTLeJE>(p/K26!LNef8`C%=DN5eSd?;&$aB/q[Z4"]/Ls`.V,/D4J+.#SPA)o.X\Puk__f,<!6BETloUZ$?\9:rDf6V8RX0>@M8t9oHa0QZpRgsK?53b`_=chh%XY]YE`noUJNknDd]14GpVXE<jh4)!&;g30FmS2M#eMW546[+UiDXLgjr_<=(Y`Im(p)[RE!QKWZhuCCgqgT>q-Xc669sifu7]?&^%'WG:%d?B5?s5OcRXZ.$/pb"HE4X*mP7)"7%W=bO4?bBRC93l:@3JfZY;+kW<\*C*)?PDMBI7(:5D1ie?2`g*<m+V[ZVo!7$Kisd(%*a5E70reU>AG?EuNO]JhQN]Cp6AuhHJYh!8nbUAnCIdef&>+I(4ZFP-1@AsSD,lTZgXFot'4SU.oHsTKmYXp*peH$%q[o@dM@Ma3%4S??dUcQ1E;Hlr)d@\cTA&#3OVI!hDY?@hZR2!o7U>FkO]M$MH>ecBdElCgbT`;noNoW4nL?,!up4)jKH73"`[-LUYDTL)jOjosF%A^leA.-dqI8aqb-+Seg;mjDoI8W,J&7;j*,k$oqka'KGV99UE0m7!#VUkOFVXa3W#,3!*1jIM?s2=<RnmD"ZEO&0=A.2Eu49@W3,%ZguG2":+#*pGRIW8_Gi%MCecp*K,?Jea%Z>L?de]e#uBE6&uFh4MDE4DN!?YCjcI2*nHcgLTa5:E1jXh5#7mOQh61S+!C-cP2],&%iq@lY:8c+2$kGXu%kH\kIiKPV;6FE+Fao@i:Pke,X$;VY^"/Do&%9l*X@W$,&U6X%T)QPB7*_:Og.A;DHB"M?Jqn@*%%mH;g_:W[%.&bOo<bpOF:ERYl++02D+uO-Fl,u[^jFYnIFD=]0?13'*I#O+R'M_>c@E-NtX*gCI(j\k&/c%1rL)H1oY7G4_GIIN0aY<@S9M.S5%q]?-b;K%=adp_T0Emo,t!N1_,rg\phR/`sG)Z+WDb-srtTuU\AFR(b(Ass2c0$<BBO:K2-=41N)aS^&0`8;m^L)uOM$OBI=3fK,b%2=<TtD:2kV0pr^`DqrcL`d7YtEjBt<Yaf(ZnO7MD,V*dgUu2B4E$'@UdolH_Zgdie':FABpjE8>U<Y.dgr@kCEu(?2K!aOD^ZZK!%;)C:JMEYE++X\(Sb@>[mBB;g`RSTn0r0O5u2=a\F2O/#UWA`m:/Z5s:;aYCOdO%5Ta\'`,R=?^6V@nkZ[&K0GQ"X*Q2O.s>0@B@`%<Y'->aN`U^O5K#S2/;4P6i2.-[\7+Kn\<:+eAtG=k!.-LD#>7/]&a$l$+Y3%a$!mAIdNF39ZI(cXo1]uD\/^K2<ltEVUo_%d7ru8%>Mmj^/_@ZGVjX'N7R+CV8m:9)%I1Fc`^M#s?h$IdRB'\gR_R0S21D@SQqQQW3W7o@aC^A?A8ju?qRYj0dY]k.n'mADX&TU1?u=#3%\LplG2M1^$X"@=dh-]JA`.o-)jemPG\,Q!L%hR@]_HFU7R5ANu_hC'9]]=!B9nW]h6tVL0Z$tkAWj_oLHm_5L"Y03VA*ClcPJ)U;%Bf4VH:6"O\_/YT]hoXfZem;^1oEU_B]/];:cD8M]l:SEY:O/3TnqFglI7t`BD\9$2\X?L)e!6Boe(49LpnERGR(qlAIIkKVqs1pb%T8-^->@cZ?R)3Aj?tfLTOojhu:X-Q#5IEu,a7c%Srf9i9RZMH/WhMb,6Ao(Rs6pb>2LP%[VZoGt=&cZ8^ER_!Muh&YU<:SVC[Z&!%dVm<o?<pH(HIO\#8MQ@kO4bdHaSjq42.[kQ7/r&&CIjPlqDOZ95Fboh;gW4n0+DhQ:!KN6\O8N6$WRO0TY314NA9j5'2F/UDOU[a%f+sm2bf<F+:ofNcO'QtI<5>BkCOgnZZnruDIK:Yb1ZD7pDFB."CIIA4o#Ff;jDUH$lZ[hmm+#^]eif:5?4QYhktF[JFl+-YQ[\0n%Fm$7@\1uU+oSAI:m\DcC`a!`9,;SDme#u^lGI9Gm'0T?d;q3njWcN4?d)4pqqNNR=1ng+X)Y@s7o+Neo^Ma)cZk0t;XfDPXR`F0K%0jUCGXVCg-mSXM/l.r37#Ysh@*I)lKhsS'8<kC!0m[*X#(1m,rIOUHB'-R4n?(D_GV\D)P:2]mdA6ue>%1T6(>h(_qia[@=.K"&.%p]sgQkMq$4`ubUUrF)3kVT32*WsJ33jF#jm2ZES'0JX.nK=:JtZP048I,cOl#$Gg'/ffm1;3s.8$4F*NqLY08Ys$XE,N,Df='<Ys%P]6tkN6=>-V)%uh:I7=1$W:mQ+Pa0u74_0jI,.Y)]k6ARJu$Mt>@eC$a9;M^l`;dGB4&0of`-gg97Ks!$$(2sh0_eVR[mN;Rj?!d%]anT%N4YcA@(jZ-6piYCJ&DDZ`^BacnIUpFQ`AZ8^<Vfk36g"G1Oq.DI.FIk9'nj8f)D!$cd]K`djo7mkU]ffr96"gQscH<5fZ5T%pL0X4^6g03X2p:O:MKn<OS$mtAr>*Q@%LN@A'tcip0Qpf)>EKEaql0Fec1e];<%a8I90<o=U)D7T.f9$`i1N(q,$BllS$?(A2cIp%aMu&'-4'U_!If\$h#K+,K27\oO]cI#jk!\ba!kPVgm4dSed&f)^A-a`;$qfj0k-sI@tXh.MO(H[TL-"lCJmr:7B0FL>$dP8)pm%u%pk%"CHG$%GV:Xq]-*P:(S2eD6IiLD_(j1[!(L!h>CYbGGL,U<SIIK\nOjpHiUl"["^L?-koR=^J%cU4OWubVfn=>Sdrh^;,$AfBk%O"QsBpW)LIU?V2@j*#1bo_>9QQ,o/_4MP$uJ8q<2?:m'R\oW0-'=A=@S1TbP<pXoYg!9Yq>KOd#-2Y:]CE15Ce#d.>oVPj7rFD=6%-3$isB"F6i&R3@J\A6@"NnNnJBVsP)e*Z0[LaLn>QDaoAe*Z2[p@38%G][AgnW%uk[u\Qkc8FEA*a`pVS[OUXhVC!MU;/-;P9LIM%okh7h&RT[$I:%3RpYGV=Lf]tYkqdbZa&2^[fB]QRB^ts1??Z5UK5U3ncts\Cq[toqnYXBJEs#NPnj]`aXhD,#Ib%\F\\"QVeW#k=%2;b?8D&SBQO(b%*SM1Mp9g`rN*k,iSDX;ai2F5%B,5kGUoXZ*QJ/DpO[/]1P9VBBsY(M6!$MbOQpp,-?[Y>d++r'fZPmrqrc<sLL%3YSm]^Jid!J@dH^-!%q3#A[9_jSm/3B$gj"qEFh/`!a=^q@;9PIlP_p3Iu`?i%e$e2Uf1\1i>+/g\fXd"cUmf\;_EF6/e;Igh%J6%RDs*@ELU[tAfA.Hn@21u%;:-I'T-T9lLtOW/l^GG!i&Qo6uL"-)"fJ]JA6)WD0gZN\-[k-F++>lBanR$IKob0N;<8eoSAJ%q&'8U%e26$^dr5*PfW38CXa;PJ]QP_N:M3GKc'[eAYsDpEFm&D`WH$CXI\lVFX3H3ckXeXBdkdp$]=N'([eG3Rf'.HYIKo:1SUZRhVCoGX%\+\LMpSt(q:2TVD3&N^ZkZ*`p?)`;.WmNoVpgZq=OIlIDWIDTX[/Oc5r13dE`g_>IQqWBW`^HbH1s8cec7:Z3XNem@qSXiS=(@b7%g[$dmJ0asT,<<pAaVUbE>]ac;MT64AnYciJ\l>a-5g]/J,\_u$Q[\4P;dYejK,u&_p^>HB5,4t/U=[qt00j*;(Hh\B_;@DFe;&(9%-Bh2g8cLnjdq$na)`B2=P]Er;\:9Z"msKA7A+&B+b9XT3VV(?JfuXc5Z8![o]0b@cmjrCpqB4&_I([6":4Lfo4qd54epe[70Lq1d%7u5iKc/3#k$%7Kl/##q@rT@(ZR;Xr5s8F\+9@l51eE]_FnhY^@Q[77mEe64LnUlE@-"cM+82WP8pBt,[H>]bTU;$I=ZCW*LH:_KB%$;phocCJ[_^38RTqG52>04OelK]*%g]X`uKrNCDe+jNjWQ_3;=E9eqT%@Od%%84kA+(mEmLGnrsEY?]7qQi[M9oa-)N\_+:.N`^j%RUpm)1>\%5R.GsR5Ld4@o7]*DBra-DYl@'/G2*O]Dn3(@9s()QG0.6#K5#=u)^<bj^hIfH2_D-*D$>m1b+'6us6"OfjS6ms_o1H;%3cJ>9j0r*>:V^65^&^okLIR@,nN5/?VT#!6W#;HM*YVtI;5`MN1H_NP*n(OYDmVg4S*l/=od-O9H^Pq=UNQm7eaM]1N6A=#RE4+c%9ZY^F)a!MIjenpq'2[E!`i1[2pRDqD9ZB.=`>$qnGOj!8XtboO3%OPSp1bp#Xs$L!)ImOl-b`5YK-$.h>[mgti+ZG+I+@XAXtbs"%HlCV(`\kaoY/,M'\:tNa-6o\`>n3t2:<-@Jk=[sbAEHX>)QiH?eE@g3'Vcku,b1nEZ2/?X%48r>o4+;iSa,Ggc?=afT;O[K(;k8=%:FPi[/]KpXnh"V`VaYf.LMuJI9c^sI_tX$J5&/hmlL7NT_tRH?;Ylt;+*ISTA9rXQkY44SWQ-sjpnf*>5;#lqci3umH$l=850H(O%RT7W(K9,$]an'MQGmZg0ZRNfeEE[gl22s6ja)(r(L0n6aC6Vrq^f%oGn,KN&bJA4)#/^f?!_i)/^dJfe+N>'\-6gHs==aZ*^pCe#%f'ie>A.o90NsF@rN<Hs_cbP$JIXutgJ0."kUVDDci)0"COU5()e!oq/a$gUq5n&Jk,W6P'K8fm+bpAQ9.g2%J;<1#m`;giKE,dKI%MhhEFRMQ'7oVH6u-k)`e"^_5Sn3i$Qf"q(kUDS4bKV$#;l^AY@oXkmX8>EN;aBYRj.<rhTH)n"-TS8uR/3O4jm@fW,!iCK4"fkm/%Rce'&3aDmi.&i+OoZZteKEj4]?+gOXN2Bg]]"(O6!cqK-eZ,!ZeBoOo9?Y/@CW#_Z'0jRl8`2P*ocEmTK$8W#^/S<J3LEinSbM')%e<Jg#-$Z.`_8:AF(W7s_;S?C`_ta[Tb7[&l)GE$Gl>eTX^baaJ(Lu1TW;6Z?m7@s6r>nWc#K+?71k*o%#Bhu_BUd"rG*uC;$cI2W%[F[\ej>uLZJ)K=&F?(2SVuk\?&03LA*:S\N_he>Bs)5LWrl#*%i'/Cfs$)PC?iA<C)Q4Y[d3o=#_*>_u%:1rdaJu8B^^&70q+huf%$=;fQkQf/JKd?L,O!VWs+IW?Ia9jiB"Z8$oL7eM))J36Ws8,%(QoRVX/0"X,'H.M<BRE`?M;NiW?GLW24+ZU(Zh7B5r<(,uV3=AO%JNE$4$k=`&$G:54]T+2D"h\V&rjS,;QYObfDNIr-$644gD1_E0<NT1%&cr.$LN(Y+.N^hsUnphg@f0JFIE;'<F6H'k6r?0R1KuX8%oiCflY-`_\W5=n2R7`#QXf=Z=WWB1dK7VsD!=[AXTN@dkK@*Uhl.R6aekNPRldF^%KJNH>=iLKAjl:,X@R=0X.A=3=e*VQJn:,ha%H.^D1H`^@?GtiiqG3%FS\Tq)T;GIM[nuU8S#;=r1C?r'71a!#i/A[(N>st^#!Dd.d"g)@$].g\tTn7^N=97tuWRg_h,KkUDcXdD*%;3d@VeJQ5,[AB=dU5;ipV5%"OXW7F3M#,MG9DQX)m&,dqCa?GU\_]_rM3/!%9c*kj`8]i\X">LQ2Y3@K(e00F2\A[i8LS]"6o#fV%k]8`%KQ\hf`F73]Ip/a*%G]M!W"q5lk#Xh3aQT6XU(iFGrg#&t3!Ak?h2!eDmX*;C=T.uDY>VS$BFs,=[77d2M=:PUm[S#Q;q0:<%Wmcfb.l-%8e.^2A\oRAkE2QT>"st`2\#3f+EA$(>bO'fZVZ;A=E>d$Pbs)6X_n^!*+,.K=9$N7i*R20&3c4sF[IfZA$#uPh5Br=P%H"0)"Zh(5>n@[:uPKC:*5+*+D6VHu)NfTUKW.0.:opXrG+YJX!A.7=[nXD$W([relO\*P\@s9IGMfUWEVl]T+k*ORC<(ZRNpn]Ao%/<d;^kmUo#QKY;To&0OMj:*FQ50;L'KCRD80SdoUUjgRGS;<"?A!73U/b(h"_$E@/&Pn>n#m&JDNH:a1r#lD%;$FML-McTM(7u#4%[pnn,8HZsY!h2_7>S7Ps`^*Rf&/ac&AWd?(&rDUQ!3urtj$`s69)u3/?j/%fJ?h`L()X(6)32Z:4Re!T7V`&5*aNV/)-a=b2U8$_%-<W6m1eg=Mci=M:Nc>;3&J[.,E3q1k$fEd@\@`Z:M\'-F9aX58"?-qQ=bs_P"KjAqK]<*TGQKf6LC8m0hMNZe>`n&,e*%Ea0coB!%E0:#.=$6CFACDcL'=]$X/s")sX)J)=`\]YG>sU/gKSc00iOJcXZ=qP!MDme[F.u)e,_RG?V,$efP2XdY=,@=Kai'BRKuFm"KHqP=%5equ*CZ1LG*&*LhZlB;e!JF+3(l,)LiPs98-!1.JN"JP?K`m2$iXu,%8X:#D$R^5P+^+uh56BcY-kcn%*#`>rcBLS+.O"?h1e8[,%!?<$A*cO*-AVO"=855%o`.ZH=aD"+W%&@F(E0V7Rpgi09THM7j6aO^.VcuM+o)f1(6m'74AMp]RO9e2r8-B2D`cH.9+CX4W"YaLB%fX]?f8ceKH)]&fC-6]*`"6PRTD1rk3X!#gr"%5Gbej'I['l4;^H8nZ[,A[_<*Z%Hl2N;/9gVpj80uuS@!8+>0N0EA^3"lT5?5!00%n;,i8gtKcq+tO>+C_FsPW6`.<:'&.i+nT8TQq;j?32FhDJ4gP<rgFW?6kY;-@T:3049hlB&E4c[SA:3l3I-0G3[>#"2'^``1StOk%0L@=j<8M%+UP"DU6]>e3#o4/*(lpIm>DTkX,@WKiVi7jU8;'/G,:prhIXr8%=>>1CEARb'J0u9)S]X,Y!6pT?`5WGj&k"`Oi33V$%&-<WY/>P;Q9tZ90*/Z;gV+=&oabY^Dj:FiFR-YL+8N%I(P6/fTRYA#DP-Aa-4bGW<RPYY<AqslQbS5T;it03MK@V%s3LI<j2//L^%8A\a'LSd.sBV?db!tkH@4HM]4[$Ck<lJ[dLOI93"a-*A_8=m=@Kjo!qBepEXl56Hi`8cLuj*[@eo+?cK%5Et^_nq(Ze&H-S!`#Mj%3d@FZ"S)UD:,q8?!Yqem(^ih8(,lj8$s:^T(*EZ6,'ZgYWq4/;;3,-4i(t#P$Y3slnH?lVPSjMC@Q;_F!muO,_*Ua2Q%T-m#CD;I%L1u6c!Y?J,+>+k$R#eRUaMrd^"ohXpLn]\bP/kchW9D:++G+)nd4c<8!*Pj]W\)%!TLg;e\/DZ3,NrT77"Y\ZJk'Jcc,LD[YNdC.%Aj_GM';+2U4<KZQ&d"@pJf)Bj&kKO51Cj)G\tW<u>eu\_N!@PJM#hUPA@dl`J^kRTp.eMn:Pd_)R2#.U:=(9)*0ZR_1Bre^"rh#+%*n^rn+B&it!o"^@ZT:F=n.^KY1PUabaWl(i3@S5DE5AC;^]/XZ,iGF$la>lirr]F8]WA[J`6K`[dr3%$8Z)[!hl%)X5W8RY"qLX`%Uq.)Xl3I/No.]kP/0hpL$]M?mmD,l>Db]Gl"e3<p!Is'H:T1]D61@M`m@#5m*H*/&r1A<<[)ZS/ckq5S#+#ZhXTQI!Vf/rV)HO";%.V]kpLg`_(ZG<b2nj*h;Plh$fV2dAB$gfY!k(bF%iVMKjRa]d$#imnl#%5RC$l1cV#0Sc0p`XY%C&_0b4D77'Tn%t5JLuBQ+Hn5a%N*EYCj0:RG]nd,"D!pk)9\(:&Wee.mReia*$%YBpCl(+V(H`<TnH9aDO@Li;inAmAWYteiJr7V`0H(]5FWg:<-ijsH8)&H\5U:uf%r_UFO8H'dY$2c(h.j1D$Mi<J1+)joYXiCFpJfPEi^EuA^k=rMo\6U(p2hC3D+@s::M&U;#@/m4DZMm\ZMHK$bgHd(tKnGsXO3JLr%M4I<UGG#oMg4.XA_ShP)LGBbF-.W/+`$Y=5&PlkK.fn.`=j`Fq=apuWcQMZ^/o".*kMcg'(-&N,<_:*B21&"g<SX)DQhZBX.Z)";%#(Hs"jXPDPh!0#C4XfYrc=9Ec+=85F&X1>4)G!CQa::r6Wih=sRK[YuTNRF/1A-cH.O;C/cX9P?O!QKBq[Gba;Zl#flTJs(nO-oU%`t8eD=oH,Uj)Cps(dSJb(+tN)50u6nX]-B?[A4s_'%l+i1DpFfJ6Wp'r/ZJ]/eWf*__qL:fRPFs9*Eo9:]_mR>YKn$ZkbPEd4mjI%6H*-+CQ0X'D5"ZL*GR]5.KEsP"b:"[T>#[QbI0-CjP6/\8%)F^2<8@..s3/J)c$Bl2Su5TNH%<X9E.Z*bRh/%NcRR:5DToeGK:lR%\,5PJ84(Wq$dHug:J'ee395p0kp2oRI,=D7-dbE31&YlSWRGZ@SW\2UKW2F1+0nt^1`?O3\b<FUQ"qdnR\de//<1+KH]4'U`m<:`%7+4@G-/:8S6I/X+f3m_Kc,04FeOa6Boq0a8%\%q;MMC=pHC\rSn[4PHpT;@+NWf+OT[!Wj7_9Xi4'u6;*`2JVL[lIq[.F.G(i/.b%AqNjl<ge&4bU#Yjr+d/c::P$rN1NtLQS3e6?L\.?8LEJL(LEntd1\+6K^gRt&k!SJp7/5!WEA]6O^YeV!&l\rYk^_?c*+=j7SAPX%6DN?$!fN^"^NND;g)I%MnAM@,Rk`:h8F5:J&6/K#jm!p9WNR@06gdQH?k!Q,NoZ;^R&d7G#Fa1SBT2^@*p;Qe6@L[<.G]#;;Q@Q*%X56a+Cp:#6@nb$XK*4m;UBt2J<j*Hi;d-lCCXZIb<L:9Fp4D'aFW07CU*1MmOkb3mSkGWWXOR58V$"PT)1:)cb7NZ<N(Z,@RKGp>%A_OR"EJH\K@=ZKVVD4_8\ns\5pJGu9fNgp\G1r)\lQH;a=uFs3r?G7$=J$5P+`#0(VAVBojGp>>P_1:Xmqsg\X`^I\X^:>mZAoX+%eRDau]'ZnX7B-+6PMYBYBrat*Hg1P-hu=:!K8nG8\_2XmDq7N04*^Q^/FR8p$6E/*W;H!`;6I#NWErLl?]68'[W&B]kZK0`YI83Y%Fg<iVTIj0Go]WYd?-AsZ8=^9N?W-d;<3P')k-gm"P/4TV#351%)SN_U=GCsg(_$Th<Osg+<@I=>,U9XhO#'D/SPiu)Vo\VSq^$Yl%MH+G:Ju"b]-nsB$K`6$1IF_KhUS=g^#J3h&&GQC3iBjCp,;jsCSI:E"U:q+?-MXUcWe0FMr[Cp[?q$A-\:\E=:lM"H@8a9dj^8lU%cMl@0f<U&"hE1.b/+m'bcl`+gIfm]8!u'ed7@UMQl_ghk@3F4.m,6Bn$Q.=]X=$:\$5V`qEa<5c2AQ>32Futke:,,5Y7is'a[ues%"MD-LoOd36+kQIa0)2m-W^q9R.NQE#3OArWQ'M<LZ)-u5$+d:D=1`$HC:2<eddZZEgAH]7RYb4H\%kD(bO&WLUToIIgGC[+$m0E'%f35blKau[MB[`1lK?]]G6buq>9sRssLrIi*>cmZ;#)W7kQk1t9>S+-MM^1&1&C`T?f2>(D9BX=&AE3jB'FTrb'kW!'OTA.E&%=1,%?#h>6V.N_-KbcOT;EafM,34<>Jj2RGh>36m$.rYRoR`A5\?Rh%qV.U?S9eW)<$SMa1DaMgn]&he&N>mjJ)sC7O2]_;"`Me0;;FR"%!eF^F&MOkI&_b6JSSgSgPl\[H(Th1MPm9tMi8J<`Helo@q5.G7JCjH@oq:#=C>_&]WdV]1a:oI1[bFEMec;"(U^g?G?-@+Y[5d0?%kh]4bit2TPF`30Y/rPrLbopp#=%b[bh7_LRV-+m7J$d@KVOcFF;sLh$XUW\-Q;r^`%3fQ>HEG_/MKVmq>jF;D[X1s.7^91P?0b*g%M,[YQ=PX)(.@6aFQC=a)f;4@>BQ9b`CS_q`.?IOUNraccY<X"gRNnVdCg/'rd'&Z0H3If[9C9e^A\4S[@r&h:4sDa3?Dca*oDrPI%I6MAZ!L))gQ!NZW,$`oHh8?+?WM):0`4$_Ah?GN/CVI5>RONtpDi^d:"tiP@a+_%%@2W5UJ=d5_JtfLs,Uh@b_urMEUS&/<Rl;VS%ULP?&7:U2a'Q";SVJ'fd[@NC<j4N\=^a;H-RL:4P2S5)d]rerURVqKKmR3^"#%U9FI9CY95\<@#]*XoEoR1)i^Y9@>.[#mR[qke/%,J69'<Haf.%@;7jgMhnG<0`K3j)#MBC.=_Q:<0p.8g?YbO\4ZcLPm#!)n*?HZJn2iTW,/OEEO*NNN2nVR@:K!-r;qhJg:rgS6?eS%$".6+CTU_Ac80FHC@r?'V8Q*H!<B^=ihE>F1<iB`b9k6tV^-)3Ji$Hd(TL-WfPD9E1q:3jM=Tf2F$L[Eh\^*MXfXY"5ElI*cZUr;%$TDhP/&,=i-u)[pG2,Uqg2q+Q/aVZ!*]g)heYN]f='fW2+X5HSaB4%^VSoo;VcP3Inb/-HY'^&SCt&KO'_EYU`EuPmPOo-AUFZR,%?IQS^SV7\X,"&f2GURLfV5gU6@OAOcbT^2sZ`8O\1duPWA7rU<@W-i&X`h\&`]sto/uYNLeXjO+U]l91$Y+J<CK@B%!bs;ERj>SD%4551c]EBr#lhWYJb-[rsn3cdpL%?!+"s90)02@,']M8lVlQ!g\*gSrO;Q(lMY(E55!STf2Z:;8/2RL7S%'cU!_k8&/nf'AsNU9Sr%^_1/CMn.Jp&/_<G,u'eS8!7+>V0^s7qG97ul46/,Abj5USW?qnQ7obHDqI_a_F3Y0/Tcd[ebD[KR9igS0+=V!)@h^486snd&KJ1#%qnOd;/-3YQii00+.,u-Z.bR7:0;P62&MQC`mCJf38>b\F$Q0.J%&T:*MR>"I[aZRSfe];-?a'3cqpJB(75B+,a$JcaD\F!4<n?^g%[`3,P1jqpODR'!DUO.FU'X5(DN]YMJT22_fg2C$-r.(qF>P4GS,so>h5T_e7lubObi>I4Jo4D(k)U>GSEt8KHJ2@67GXN("=mT2j%XP.I79enub_K<\E5RLUZAZ8muI`]Oc*^i"$Ykhr:NXtG(ffGkg1OP6k?>27s,QH:l5"`!7Y2a0X*fdGaLM8Efh=8[_k/>;FaF2QQ%[OUb(.s0pJlL,eFR];I,fm9U:O0bt'RQ/'&+3#R)jjm5&4JCt@LX7DGI"&8[g[319,5j8>X6tD8`W50EL9rV)n[8,RmD&=HW@AMH%#;#ZF:a_;cRcq@Ln[*]1#LNU;Zp8>lhKt6&;l\@s`9]ooC0#n7F`qm!JO/b!AkX"[_a>.U,t#D!2[5`0i!S@ObLi(s/q@".fGsZb%k>74c%gh^Pf*pf2ZOAR)E720I\]-0p:!YshQKAeFJQ%>C0POikC5jH0q7--SN9CTQD*#L/9]pR[IfPf7^2"_A[._tgpon8WF869*%^jUpW?qV-^oS,pci=8gs"t13a$Lr`-DNY,006iMcSi,KWg/dQb8S'tTmQN<mEV%767B'QGY*&ceS_%oXW[@bBg**AW+uTAu^KlA_%dH1p>(ZhO*SKK.u^:Ms4#%)/2G@:7MNL%02e<A)F_0M]O8FR83R6'n'_$Ypuo`Bm(q<Z5>T<0/ZU&=f&T>:=!-WlXb),s%j(&Zm(%omY%]03FRK:9-X-R<icDbeU6oDu1naCVXHR5^Vgp4Wp5iFrOPGfPH=+Je:<PT`;M+";gPQJtK`qrFQg^%^*W#au.P]e.7(.Bf1H@%mm-g)'#7'?coTu$hG+402C/@&g*6]Ud+Ok\f8<IA]>r&c@j'(OD9D5snr7r4n?69&?shf'Fiq44^Y=-$iA6ipD8Ypp)0K=\)6&Ve%l>!W:/43]MG%;jt984Q<E4Ne8ChmZ?B9UK9[He1`YBm)S]_\3WYd<6b#f>TQTICJoeJ1#`nH0kG]'tqU"oMi1n.,lolV.,L<GnM\%eZl".*43l)'E$"7DN\Cj"G=Eh\s/)LCBX[e7:q$6&^SU=9u*+#SWed)e]mE^`=;'Dm=8P'$)`!46K<LmXZ:HaT35B%bg`FZB3r+'%b6`7U]9e6=UY*k<nR:s$=6W`'I#^9\K\0CCNaY!%+5++\Aq"sa.C-7k\^p38Fq2&r+LJaXS5DhPK5UO&n#X%2)3Z^/[B8gg2A0/?%lg(QQ]`n@kfmII=]IS*159A:Y]C9"(d40;>Z+KJ*gVR2KT8h*&Vgm24Y61Kb.s"Oq"ZA"\?cB(PqhJ-"'=i/OeC\[;EHh"!s1#\t%M)88>CS>'`WDJ!PKFkEZ07`)gYE.:E]"VC`=as/\G;J^I*GZk>b<iYS(-d"%G8@A:*&-GKk3;94"b&%NB(rA'1[/l<a*d.r4P.M]%\<3f)5UcG<Bsj,)`6X`)n$2&8buBL+=A9m@]r^X6(,,7s\[SkmFYNR(;5m).n5jHapKDsb4gRg]&s_2KbBiR?TUN$=Fr&!<l9d4)%]NFr^j'U[!3-aTg+^sErEAuFL/2gP<N]*V@j'eu8MUB^"T2I09m-;VPX$Ngt%m!dBCuV0??Lpj5]p=LI@"-e(XekNUS?@dJ%?/,?%0smG'hjh=(XX3!J0JE=t_VDSeBg&S9?<-IG\anN#!k[7s!JIn8PrUfMpVO=WeqA/!:4Ff&@<H9j<Jq:_3-UUH8t-4aRFOA&p*.9g%:C%;B&dU5Rg&2ca]t0cl<.Aakk72M'bZaE<"64:0IB[g3R+:Tkg_uO8H.u6U>]4Is<.>lPTpaC7%,d\Pj(^6?;>NNs^nX'nG%p7^%2NhS6=aVQeI7C":_K%"Ng^-1pWD`H1CA'N2pmI>A`VHl;^-(0*b<BjB9(/$_l?'a\PU^Z8R/N9EGWQ/EWSZ`S??UW5M=@N&/^pU.%*E]$W;>/(ah6sVm(V)#i-NGYKYAV['>iQ]RO9;331V7suNnk]9G896<1:DXR]n9oF&[*VbR(S]leT<>;A0n&iE?j9GSaaQa:k@!5%l;hgPT<5G6jrhAJrY1_<L9iIr>ItiNmVJnFd-^LidP@!j\s%uc;.eam&s-UqO]on"Vqu\sc7^cVQS\*Iq-C/ICp%;[79O-]e#a'r%+IF,e0oC\7o)XbMgLg4,%ls;:P26-]8soACKI/<8)i(DVVt<hMo6QL+fY__eT;a_dOmo`GK0m.%CgHA2Kl1nr0"k>TgTlb]&-AVg%:U5\8O:8]]gOp2oB3s2n>Q(>)[]=pcCY_=([[^$oDT%Pe'\V.-ZsGPr:/-8e144So/^NhQku_fDlO+0;algidGoa#)*S_Zs:>[+C%*94li:iW>YIBGJ+(G?$HBPhN6NrcmGmKol@;<r)nWjFG@F,@5m5\P5(aZX=uB]mrMa'='Z=MFlXhFlu\+.iq:"2l=)#n,mLqo'`j%O'@OAo6Pc&f^;Ge"6+5R-D%uU6rJfL(X54d+Mu7tkM;<2E0;Z!Q<9?n=BW_ZVA>dt3oE,mIpS^l7q_mjgQV_3`QORVlKlF_+!s]l%pj*)ld6]@m<iTs:.\9oJ`kIjJh;/choJUis[bK$UC1gP&g'hdqarVVlL%CeEpbI.'EHtc&io[)4h,(\3^dR*ch<XtfQBmTcZ/)I$%<'8tu3X71'h.#I9q@:-GPhCW&[Y<ku`XBO81S8=':R>efJm4grb-6RnE>(l9nBJE;_[Z66f_gt0D2.XY11nm;r#p<iV)?rcT'tB9%p`_<0_q>F"K/@lT!>GSYfNH?ZJ2A8!RGl&4YW;+<0m\BTJqaEem6[mpG_C$@TGKBY%J3W0-uu6Tc^BNl@13uYnBVfE>tIQAd](gY%!W`R[>R/#pLi3!BTSmKrM425h3tR`!Xd;bAZ7.VPTTS3k&bQ^<k^EC#8+-Eg8pc;id:O$UB7C;3V%I,PTrCb1=r[At,!TgTe+5Kq%p)"6@Dl;T(*BZ_g"1s7XM2A(fYKo&nb-WW-ha.C9UTW*Qd"c;i)@"qWP57E!Q]e106qT;^GU78<]uDlYDVNEdatJ5+5UVLc!X$R7%=95,Ap$OQLm-5\X_]'&iN"STiQ#drs_G=OMg5<qakd3_'ciUIkV%*k%$X?,4IbD/<B>*JF9lOseSr7h*'<l1f@Wa_J"'i3%"i!gm%OTF+4"tCf0+mQiQ:sW;Meqlnt6mF!!k(pNfb<g&&/rbbOJIqZ"6j\ih.2uE"PUdYg1cY8Hh6Qf4"s@q[lc"-%p#W"\ag(s[90"WG%5fdh7MS`BS($Nsc]P;U8;pEhfle<Sel4;VbI@Vin*B*N$/Gi9M'qW6^N\:\C_m">#!\6;2gb#YpDD7tEX1>:#4^q!9k7-"4_'lWN%WQ',&/&Se?Y^]\r^DP0YRfr`M@9Qb9QM9s`UGFE<g_KE0raYp-\RB*'<fqltBH8d90"glrb9$)!`lu,lTB4RJoAVNJdG8a%<f>?O%K6Ig^f(6Mq:n.6%kKCI*M`]S+07B]m1?h`^Zu)2O_TW+3*u_t->Re-5\5Be!:PfSekLfrKji%]t._bYeT/sVK]2Qam)>Yb':1Qf$%]8JuobfaVd+elMb&U2ideo?>87.KhF50Ua4Fb&P6ekY[bf96$T@!@ChB(+Q(;(>@@?_7>+5Y)?'gn[^9fcShlRG&/p](+J[]`Ik:%K`s<dIM'QjC'tM)XIH,f(NE<%1seete`YKe66gU=*8NY`-]cQX,As'VU'5&8ZZ"ga*>h_,*LuZS0>L=H=j4O^hI`LimB(MRY0:uC%\Uko2fgkUZ*5Y+Pdlg*Hcm]M#"ibG;Gg3:IdkDI`T5J'VYB-68:A=$T](9KV]u%Puf*7]AO:O,IU$?Clj`rqU/_l5el&XpGa)Hab%OVR69bjpCWO%;<[3Qo-CXqlP$c"E`H<6\h]7"GCf/X':U4`)g!kaZ5H.l%(r\2'Ds21$u].+q.ag#$&(O5;8&9(=$PG.J'#\SW=M%3"4EN%Ah@10<Xm!jXPPP0DF$!,C]:-VbHWbgt"h,erUDdpG&"[J!aAGh(CfSPCUJZ"O(66&GX<g8#sG33doPhFr^duT$e_9er9Sp%Mo.77eOH*\C?-40qp%4SV"G-tEduuap.Q=4*B@?[\WT,Y+jrYJgtas&SH[mIqhuEd8a<$Hr;l%l9At%IB9N*2Cb><>)(rI$r*nj&%dmI'(49HcBo^X7.!2U0ap9`NDm`+?t`"8^)iq:uafA>bQ<9[;l"Wa\rRJarT%n<lAetfW0I[$qs>H`59"oHBBel(O8,;@'NhV?<?%)UQ@7!#H%CE^FLa>E6fA(B3^a?Gf#NpV,JHQVZodq/#th>M[#A>g_L663JK$OMq4.B].`hnbJa&o:VG0S6*V?lc24R1^+&aEFCc_%bc$Y,Yl)B*cW2V:^"M$a941VW^<9;*OIdJ8G_PLM.RC8Ii_\$Dl,LhgggkRJa3l=urXKM9*7"QKMXYB-=E*A9;YOLbTDM=KY$Z\0%2I?.#DnG<oq2bUoQIn0=Ot7i+]t&;:llk#mk(^4'>;Aj^9"\@/1O-BkQ.mZTA53DO`Rl/X`aoZR8$dO9i`3Zo!fCl.5538X+1&/I%lt^L@Fjs('G>n7Hb%Z9,2jXRhK8O-q66AIg->1:mo_9n9.dfV]9SWEL^U^_PKTj+!l$;o@^%R\8"`o.+@Phu,1>7V;oho%G1"_8:%bP^tOHW7J8;us9&f`7662RE:k;j$_hE3=Md7(N73@J?qUe7W0P';bNNE.4dO>dh9F^0%qUcflQ/r<e=-*)>*)bUZdM+*YTqqT8-m%7Q\`cULn<i-I,dFQ6o-I)]Pn\X6%ZV3-X=4PIt,DB4TsG<Q[pM\t59^0\kApD0Ps>XKJ]G<Phki&6R%fHYBI#Et=WbH^$QEm=#u?%3jk<b:8YIBeCe-RLEp:u\1(sK1KQZ,Ff;I!c!'3m]3dQ_9ujEIY0hi$-iRgt"t1#E/AH;2;bZUBjL_E(XA37./@7cQj)@3TRXLZP%N/?lf8-To![2&"LZEJ9V0"Ll(jn[7Z>i!3Xc]t8LD6r>`8!YPTb[9G'k8#ZMI]F!iV]X_%$3BnMZd?s^djn)W8#uQ9W`3/h0eJZ]%I3SK,Etfm!(IeuE%J%gMLBXtBQd;HKJVgnKJ!83]Q/Yu_(6:?KOiisI8kttm-"AUm#!auhfJPuiTH]JjX0`jaY*Cj8Cl8O)da#o$%k'$V_?#MJ+2?79dOVbV7l.GCijkeQUCsdj84f56IB7Q3F=Gf5:lQ?#E_"l'ZN*Ias[QlK2)]ldkEsV7g56kGH];,pGSP@<JkEg*_%];`\P[VG#JlgVEQXYu>XVK"0gX`<q%VFt9]?c&q3pUGcU[ETpIE*&*)5I.K7K6ju=;@=e/0?Rlj<H$0WBXD?aTRG>_j%T(gH[*%<%`J,:TFoe\YI#`V\b-._gB?>g50*01%M@*S`e95"$[H#qgW?1>g5P<K:5b5r:-qbf<_u88IKmbl2HDe7J?)IK-j8>`c3BsjU`W?tM%&q6&*!9`i)J.6]8#-e$JdP>tu`KL!a[LRLK2DT:t^U2lh-/Tf)kOR<T,N'm06gY^%0%][K/t]k9l+Es`6/\)I@\GC'P^"pL8V-p0%m;@Y'b;R&L-49toWIFnBEdYYl-d@(8@S>t/get'J#R(NM,o4s4]0gW>(cQj.d*"j4bq6\r&:d"f^"LAW.Wh'h;m#eX'r0sQ`i8CL%hSB$_g>9k5g4Y#u`FYm(_F#JGGYEW&o?f?NmM>DT@.ng-OX[#B&IZ3@fuV;4VI@_e$Yt9"nghn!!\f79+lGuZf$RgmL7G>MWB6ci%_5.`B@gHP!bAXK,g,SS&V2]<7l>(k5Y`L\:10U_k%s.5/4`sV>^LD\T'5$.MNS25\K;Gref2an.f.X(hCOT1p2pP/n_<bP$0"HFb%&m)C9NEQRcX`OZ(YqG*EN^?<M$fGQDo/q(n/^E%O(Dn;=2FShCMH4cZem@!PAa/SS$eLG"l",?&h,mse;:(d!Z#b9pk.)g*hBt4k%"djl0qCmU1jn0Kbinhg*0Y7">%Dq^lZ?VR?kdBMoXHs.J#4Srr7$2;oU.1-=6n;Q(jQbtO5>HF/qpi#jp0_S`%sO`An[;`'/iA`)%Pj9sgc]F`8NE9T,==dS)N)f#?E8@Xmc;pNfL9*46UGtI$Fd`4*_PWkJ!9QkL[!qpPmc@fI\-?2JJG6HVL-+Eng60o#=c4^@@Qs42%Ek#8p^+QeUK^N8m/,rk86k,,k:MXlV2EEAJqU=^5gl,J)T,2seaTI_L-Db10Mle7OI2G[)$Crfng&NJU^3$^9=h^<K*ZdFmB'%:8%=jr&;`.3GgD$/be&/Ed>-O]-BTZ--/:'10)D_M.GI15:_(Zgg*02smLLg+g*<:b#&4TYC`.g/1m]0tm,="^>PZZ#AfRRMO:Jr@]$%9jD*uV+sSlbm)o%c+MqPIcaS,]C#9d:9T@^.A.La%19s"Rlo"t1=A[9V&$1hRs[uVh7`7>[.#>UEWJ0!+qM)FPY-TRZS3:q^k-?+%35#tu072)o[[0=-_Ip[D=9Q2jRr>0aJ-ISWVa!'t_lA8sJbTEPgdSDGeamBH@*`H6n`>-T='a.d)5O,*[KLD>Q-+W'OEQtio2bBM%f`#.T0Y5Jib3?mi@W(Qf%K(X*CZrT;6nG!Z+)9`?Q%NoK7Qq'i[_5bPI;ZeB#oO"_%-0[!D0",si>*!_iV]4=SF,\Ddq8oAkek`R%ECa_8?+?=]L!.q['QE@!)Uujp'(DF;cI]?,1TsK%o/8+(ID2S?9#udFijofi?@Ll$XdOTS4g(NpOWM7qATk&I5+R5OiDQ?cBg8F(%n!4X`m)'6j`E]5uqij(nj%Dsmm9h1=]QU]#l;*%1b-d>Z%YW%\BH>Akk3Y=H#a5`2p)r'U+k?GU6t(,\8bTE44(jp29`V7:868=.%;Bkn**9f7eruU8<$_dK)6Z\09K606uaW@P/`Jm%4]CWR*H*%FeQ6#X$@s.lJr%k_2J4qji\f\oINMg_K<Q^-D_!e?+%m(\q;QZ1R%f8#.?n4Ta?h2TIu[+O.eZ.[1,7kSp]hi/7F5['[Y!Vb,&4&MY$9r;SV^JH>eok^kRbX1km&.WGn67I;/a5ppMl0*K#.a9?uXq`YE%4a6s0Ra'>omMBrF/!\F31EUKYjW:&9XK]JbB["=eQ.sK&!QIl%/H:4.[8]_=-=R`2s+qC<q_BkubD+:9Ktr@7I#eQ7HR/%].&#/c%`&=Z9FZ]RH!roVIAYQ4qX$BL)H2*;UD4[m$g5@cS(OE@&n!(Ct@+Z8Zp?'Z0,VWZ9gY,kLFmE:WT3:=N[V!D(`Uc>#0`T2Ubjt:0%Eb=^P#%#!U7V5\JlPD?m7lT+h0QY/edB2.Le3+r/nl`'3FcO8qZ6+U]0ACk8_'abtCYYUW,IF)<^Ld,1j\-em.,.tfe6;bE@.uA.%fhUmN?:XRg]@^+YH+7@iGPTukIOhg+@96?9;sf:25?lBc=3a*]7DT:9N)50\-@l?Phl,1)P`8EEFL&@$6t7#M%=McX7)"#e4gdHh%R-Fa2H9T`m.Z[89'>RB8<jrGm$OC`/0A2CW[$)oV&t^+-^cr3LnF^YLh!'I^Gk>rehe>B(MQcJ57;P&6RQgulS>BH';k\A:#haF5%3O>N'fT9S"kpcK@S)r4&oM,K3^"^ilg/6Lre+ig'[!8(HmkhKNYe%rifjd(4Iu4CrF-l9?d105)T0D%QkZ!q=D^rq7%\;H?1&9G]%$b]K'"fuiNR+Y_P&"ZG&SJLq/Os>7_]C"#Sl4g>=Em?eFf3fmhoX9[^gZAE;?+T.dlg-Cj1tLqr8jt)/G'^a0B^%>pD`kN%:A'm2%]7!^$hjYpI:3S!Mbg3W(SNcGRS3(l)#J<!EC#d#Nf?K`(cJ6$ZDVs\]ApO8p^/;9'FEO@m^9)Sdk/Fut<d*nS:[C0&h;0p_,]deV%l"p>nS3Lq2-[)$^0-UAjR!6>GQj\=!O"sJ$8k`[\jiY<d!g?fPQc*+XBcpq4E-H2:8+#q,]OW2Tc>dYn-#`51,B)l>DNcN,@2=$t%@d,]\lHJ\</`BqAF.caBD-aoqq`Don;diH!W90_B3mBEM/!!9O.9p?u>k^J7GCM$]kI-pfCb5.;SK>oi4CctlPl.f`0QZcs4DT^f%BD-:?5/+d9?F&tjC9dTsf]gBPfh33*)@6#rH=('_%bmKHSJM%JAU\iEbJ)I!_5pq?5UOBdYFZ-.>mCGgT.nkYLKXLLO1',U:M5`L%[[fURI-dV'Tml7HouCp^RWmuf+i-9al='QbO+4MU-clL0knNcA\p`EG2]W4+KJ$;<*'1dHA9,)tJSh<Aj7)EZmUI*T1!o=aVj1tB%cf2:bBpi>:0[9/o;-H8VEf8[FHY,s0bfe.T$?j"XG7&YIh#afF5)IYD;QQF4=pnPLVqmnD$`5]jdetrh1k!R8Rg%c>d^e/)!PO#$%,Q1MS5E'ObSS#H]U2Y$O^n'ntLLH)`>\hB?Z)6LCf/&2\;qR#^mC]/ajX0>YZ#luo.Chmun%jsZdn]h]\uKIff$>NUo$4])QVp)V%+(XV=0FqpeEoF"*meHMLN,;f[]mXPe?:$gRD4fkoU,T^Bn26ScL"-SLf+2#k]G2(GF%Lf7q+1-tV9jU^]s2pFL#V@rqLdh_"LiFN%ir&LUH<SfHf)IqQ/_j>Gh\K:_4.Poso#^3PrmjCj@I@[7;VlKi3jH/u[s?ZCDdO;FPEp,?=)5`6I:['Cq^?Vj5.G:[]uO#']DA3\%^:b#AUGL26+0t3:KOQk.?U@QJ]]7`gh:)(hj4fVF/q'V3mA!eD,JX3<oJIK6fgacem/\$X^2^#PW7!5('V2sEQs&'k=E/_X9-':/%a0u</c7J9TZ.'1@^V'"(2SR5m[T3[ZlUr1_\#Z@3cAq`Z"*Xo#mn5<fQ'D83eqpN"Rm!ta;dI&^W:K*t</5DHW]QZ!NapJ#DKV!0%09[C9](=:dbfk_NP./6Er)&&q,4J`aAhAA$JUahbs/('[=@T7f8`se3q35$"EU,H_b&cM(R-_*F3IVQfGgJ^g!BhG*7mrCNbsgR2%hXl>3SQu6o]l%T`bscDPj^fR*AogT5,n`+m>@f](d^qr>N^K_]*;"=?m5p<`hDo`dPfOBd@ZMCH7@oNLVblJTS3!bj4,mOi_b<=t%gVe+._U*">@:;q"'NtH>Vn@_rd/)?J/_!Lc0&IlAe_%!\^g!==Vo\^YkS3fE_"rQ/3sE-]E.)ip'G.bfF7'`Gs,NWS6I>^]\&WW4%-K<TjERD$iA5h]_6JaYD$Z1caBia=@koTe$-Xo)W=)H<kHg3JW7c&?&.Em3(j_dgUgVr(#Ff.ii1r/o1V+SopepU\95jFjY!]8[-%StZRYKo94Ea%'odlYH?hmIjGcUcRg<-=MCR]=kl1efZRg&DP=?q&a8agW@<\('lNA#CGTUdA1s#SI;EHerEpK#KR#p*GDl-(_8lL%X,S'$U/+&@V5*L"2Pg:32d4F?bj7`5S;"WjN9Itqm&2Wb0]^DUn6c88[(R2@*Gi3cin/dtl%5=R>/UjYQoTtX6KeqbOOn(ta_jos%aaM@*N'hpZ/V9gG[)O]c0SVQU,oh_3%]&2r07E%QFSJ?H4Efk(n6;E&`%M\M0gpL2B9:?p`N8h3c"ZsTW,'Te6YO,=\e'dKr`Wu`%@aBXh=>%DAQ1U-M,H(UeE[SfZ#l@e.qRSFrAA#2T&"ihMDbG:^gt\kZH"b?Al+?#-45C"a`%m7BjaPVKPV\4=hGNnJ]U!I'@:(`%%:`H]sJ.#KOf[K7;#Ak<C^^fC-bH9_f.dblc4md.)1QGr!M(;Fcc5*hB=oYE<[2;5jhmk3WH',[W\=i7:fFB1=C;J&k`=,kjVi_.*%pA;dA%eOelnqE0rKE5in\8sS5g1kG;>j!c`$Xdp4=bg]pCU;IeiZ9!?Nq3cP(rf]O^UI7QaN?6=A/*Ou#KG0nZNGpFDV4&Rl/t,W%:WmtM>R,AI1jd\mS]a$:m?1b-J*pAIRhU:o!_C>-gnEPG!f@jC'`J+HWX#9qf*9#dPCiaKj5`lQP$qT$QYsW_AD;fY`sKjn7daSP%qlI%$.FC;mUXf>mW><.J0NulqOlup7Nf&\1B%.b%CZ`@sW0RK.5P&*01thJ=4k]@S[:#<L2T.Xkl&+)(8DTg=7pUC\Y)\:WU]Wu)%2X&63"[[;e#eYOd_nsUZ2pG_djD%flR(pLP6O/<HndrShRM=e6(!JMMbR2>X\B#/`$LH@"M=H4odAe.S@aE1&.;"lZ50)23a'i:B%V9a/KDKc;lN_TC(?p&dZcCg@eCTF,=oZd8lLE&)ef_/S'h3f9$=/Kn"kP[E`GX&WT-MQGa8PuApoYg],kB;$"f(m[/9.P.n4.9@H%$mXCDL3j]0@*:4[e$RqNGO[3d;-.f<:ctNReNb[oj^9q8@!fdVY`HH^TVC<:@-IIDLJNph--]"N>&FlFfI9<!!H%=A+0PF0Nt*.]%)ScuUENrqg`J4PJm(8`-JWQKibmc'$bgI-0gg`;(Y*Nc*^qME$B`3?lr"^_P*hXaha]@nkB36a24kB@;+)^@LO((st]56o?;pZhC%.2U:\nT"'?_:jD%C"K8oA*$02H5:^HH]XQsLuji>9uPI^*.>ZL-U4>;#!Y@qdO#a=ot%i3946;qdR?^^@L3:jOK<R]DBW.UKVWTq%[br0r@dfC05g@)8lKnBXP8qBNKHo4?L?9dbLN:`tX5sB!)dj\6EX3hQWR<_0oQ+TkW=Ep?5fbNLf/S;M]=1/HI3;\*@so+ii"3)C%e.JW[Z9`As+q8CQ.D=KBRaPRa3!U*sR7q$_6Rj0]9kci!_tFoc:WRrH[.+<Kk>GQlX9aG3k"?:-=tJXKpgsD?fc;s=Fag8>5>Am$%&<1QL>4nI#6@k6A8dB.PXRl]/!'?O@Gedh7km6nI&Yoq><1T4)$`IQ4FC':7BZjji%&seT<\56]2]u/Z)9lW0j>t1Nc@GFQr5H>G%EPAufdrskZ;<f`(!6cnKC):a+SqU+U'a"!CI.mOP@%'>okY2C@C[NZ*5Rkd#8GX9b\gNNs%*O2=MWRXu:l%g="3815e,4V5@&=r2%InJ5'5IcNNMmXk;`L0#+W[$2*aIqVC5ffE(.F\e0`^P:DnMqEu0UHj7MNe>:F8aR``N0]So<I'ud5iB#%6OuSAfDo8!5e)O%P,pZ%FbrT#=$IJ5'puHu$W-766"#=<1lX!n=03'*1b`]g'$WB("$$9+>$pUt_\ldT5q'Y>]coEg]0U5s-#FGG)@5#!""#=9eT18SNE_23%2G.fQgmi9hI%J()3.*XN"t\.TYD]$u@YiGfb5a^jl.RjJNkkN*ZN/Y.N%Z=n#W[dq!OEllb^>+lBp0o.Lk,V>c'$T;,[n@Ed$aTf%:f&,9^_o<>!^UgFW%C+"hJg].mZc[AS)"2MC_X-hX:#&XX3eF3CI@SJ4H+],=JXC3H"UfOn)g&sRUq:\3,6?H?hV0[$l/m`hS+L7%[*s_X[2>DkrunLn/I(/BA)A5uBY&/%/V`39f_9Pc2"/rq%]qX2f7cc44F@X@%8FG'ft't<ceVPiPE#e-O)5r(W[gfc;gK@:UFku:%\4haAP\UuFD`9Vm`2YD/IK41dmP^$IL:>u[X^*>EAaY_LKY9?j6sqVl<.+,>H^Y!-]Sa9gXsh`_/44G_&Lb-/PJ+&T.2*$^WMN96%9'',P-mgQp;ftd[F3\$3nFsc?3''r80NYe@\nkRNb]3)@MtYLEe,s+Vr5N/b'G1sC1!uVMiK/ZtBC\&L'naK@*16]U2>J#kL]E:h%;[nV)7J&=$Wf]%%lM><YIakat/CZ[FeT.4iR;hcaH"QI/.5qo8nP?B,/n\6OLJMe*^4sq3`VM+K//:MSf?h'0clnf>Jf6\j:/M1c%A$quU)ERU"3b,SU0K!t?'m(e'Dho;mpBir[[GVTRFRBlc0%GQfC?XG'kYS\F#\rSYgSqU26eB]X0s7L-:@g#kXJ'^=TL8F?G7C)l%+k`^/luXt#B5K`n^cPU!=d!&=L1D7fc$CaTYL(fmjXi[e^r`f`X7^6A*2&;`hIk*ehVZg#p@trEKT1QI['=(DY3&nb9uep7'SFLl%j=@DVMKt9/%@DJ`(*.iPf&p$n7ua,eEn/JhoL+c:+-K"QUIXCfD+JgrEtB-p7<;G6->,mRd;s[4'i9%$V1RY'1#$4Ms']E8TJ8JF%D!6,oD0X>H[/adCRlM/1DdX-YA2*2a7Z;>lS("g*fh:lcG'!@Qh)?;^dPC!S$t=6O^"e^>V4,5".80ujS:\`Rn(<l8:Tqo23gh;U%I6"us/"PJP1@L`"l)V`:e\3&$<ZQM`p4-7gHeFiNefQsE$64L?g6OE!q"E,oBm,"IX+I,"j]D[uY`u53@%LsHFWFi8.gOp$*FIL#%raj@hZuRcnF"W&a2l6Cmi"rlZkF;aaCKI7p4F`q_nC1SDeUff5BfggOFaOM7X!Yi'0po;r+g@)/Lar8HLJqcA+(3qUSt9ER!:,^\%o.1QO7oG[e"&[8^puTp_[pa?Pe".kjhPQHocBdjUq=_F')QTLba"?-5jX_Mo!.<"Z26m[I([d-6IpQBjH]Q%sdl]f)BCB\ug=^NK%@*MOg!//tO-t&XS;`3c2jT_0IB?"/j&<k,*/RXF)GE=!+)NohTBb!mChm.I,OUHDu3E'a>,)"a44:1Yj="\[WHD`E]Ijs-K+Lton%`+^Otf_63=Z#Q&5V;tJrf-b^2/#'V`g3`mICnI$RFaePAa+!CP$h$'Afi^+e#,]k]8#.;9E@%-AJBs%1Bh5+IA2#FW:\_h=87lK-%em^7RMU;pU4ZhK3.*c[#f!@F^QM<*c8K(#cjo@h\L<NNtQLI"*6q6"mo-hqQ?]Q`H'9P$EqZk#/A,q-+Qg>2(AS?]aAGW;0LQBNl%1,MWl`i104X$/3!.jAIBk<GUfc_2l7JL,VmiOi5I?2>VTWe3#FbD3[6m$p"0@k@45Q`G0AMo!(RZ$eU#9EmI0lXu-N$0hN?esAL>%H>1OK##&D`l5*Pfjr@[t;*NQt\mS_okZ(^I4)),f6P\/%;<I2Tf$tX17pRTu]n;u5Y(oso\CY+m\u+b`p7Fb\T2@(!;Y0=@Qo(7X%37uD&EpDHGiV]<42Fp!$>o*'HA(:0j6e#96W/#H;:`Wh)*/n&3aak0!E&K(q3Yl]E?4U\kL*GM+Nk-:WHL<2aL`:J"SED=%,H6GS%m9!5]=q4RDBD'66[WPt(g[LL$:r/,B-PCqbk<qAaQ8CUa="UGB82&igI.5%B!?%+E0mki>K!XSsqil&5l:;ng@!`<u)*oQM?RCCu%%_T8=K>huY!O;WOB>\"5%N3TNT.>=-c\nD:'4G<9a(WfDeM(g<(EXNh$H'.m!9SU/N1Cr0AAd.[/K;9'j,i-sr'f@o2O`*F&KH;e%j%tdFi/FHC1)m(=@\.P/Ns'Vc:!5!1])P</cdU7b;/+3fNQZ,90e?FSk'jOuVaIRdUp@=Z-AWLXFui`MTSc]_p6hY2Pd2K5RP!!A%$p7/\7T,BFn2Zqp<![+N'reEDD"rle#\=\bW=TQq1!g]&fIj?<0o5FpWP4RTQG`"SS([:CBK!5^_V*,;;4#.nI"'\+Sl(`hg!7d^%9Ap)9>FI#'m^rAc.u,O,1S-mcMW'"W.@a+3iA["<fuM,]rNf]e_pBe=N9;S#'gB;mk,Qk"#]I/l1(b&+Lc3WgJr3Jq'Ia+)&=E(2%G!9c1^-dYRDCud+d;LJCE844O"esdIjlsI'(H5Ral5gq+_m(Zr&fnAW%m'a->N=<$qGZPW?#dE'nm88%8^H)#C+koLcL3sY9A?AT%h.V!E8H+!N8%_:BL1fsqb&1ri-lljHO\-saNZQ&1#VOh!*JNe@+fc2&F"N\`eJ\"Be/G01kIS"<g%q[fH'sTH2C^(E`o+1se+if4%BQL'4<+-TT]l>QGX%"*kAb)\)>D6AHUin"DFo(+GBd'!'FD@qs>$pY6U2\[m\(JrP;7i7C;?AbgjAtWe7P(+!n)N/93*"T;F*!s?%n%l!UmG=u1XPmJof.*%*4'a8Wmo?8\AbZ)sc>K.6boP[X*6C;"j>W[$3^#9#fV)FO%'*isI];X\S[.(+>rs$+0XZj&'WE4pQ;;K^%<HT&\)aj7bGY-Zc?JVVXh."D=.CWmsG.!0H1$oRD0!n)Hg>e`tC5nZAhdc=N0dOZNR*2/8P#K'b4L"Q@b+%JYXrXc-;hZF,jE?`W%Y:/1SQ9%I_UDac9$0`\<cg)3(f=X<Dp#L+LS0NK+pV(oY2F<=opK[mN7/+9*`,_0t&GO5mo1MAm^50ibh3I[83ql26+OtRd`F8[F%e(ONtj=\a*<RXg:%l7`RSR"q9atLY6e(N:"%9iSk>YSiIMmq$>+/YLP6l)&#D9j:CWg_3CPfF(R"'!_YW0)L/e(O-;BY&4peT>uB%F@Lb01t?\k[<.YD4[,n1lsfAC#56GEe(MtuMY)q9Ra03g1$4LVVOGf5QHnHrq&ud&qM4],kA2RV>"rXBS-D<TY,8Op5FZJf+fjk/%TKMZW*iPOQagN1+2'"j!L8h&VJ?nU"O/SLb+H#utVK8lE)HeqgI;SYUX6JsNJ6k]M9kUq>@`a0C5rG4(GVFKJUSt']fGPQ(24_4*%)+?ER*AMYOHrSX<?BncjWM[#&V/s;1Dg2L@X?1s0qo*q'h;isA=8sS3f"3pj$_KUGR,(1.=Nfq]S&+QolPi_<mdc>5^,fomJrWU^%eO<hed]$d"KS24NSq[F1&hk%K3)i%&%E^FO>#@P)]:=.VC7l_9MLe(h\oubD8G7lSNY9?c:+k-N4,?S/`QTCN%XZR-GXVIWZL)Y:%\U.j^].M4nU:[,&\MKas7;7nqEm:08m;dt][7Z\8gc8ATd1t),,tPQ/-gMT)%6%@BgG[;.1TjS)Wb_#b,DqR:6XOo4g+_q2h$neW%*Njh^\EJrjo;I'sJoe*iSP.O^''\^5%S)hZe3;AVmX]/!!,>`][-Q1\QNphnkF$\\[6A":*H[lY,OeZdF>Ol[!Ug@_k9LQ&qEiPe%9A6)#,Vhn2a3^H(-.C\S"aZbE[+5o,6W5"F[Q>GNBtpQbg).&ubENG>(6qBR3-@+n!9KV57\'tlJC.qM]-fK]ff,):a5OKoi/N=@%a+::t:C2gADHAnJL<QfY;/dY0dT=P.>:JoEbDq*M("PG%!F[R]]kI*Uem:1'G:F^<2NiuWd2E+^V%I</h;q2MOrYu7msB3#TjI!@%dY3s2r>F+fT"%]/[G:Qp8S*d&o!*[;U*!@>2l[f*_2D7T/RiJO^[uYG[F=O_]Qe:,Ern^KbNe^#B*>+8?oZ'\<fNda-F>kncsNs@%,t/u0Y8uK]<?!j/U*sQFMSKaN_]>_[FLpLM!&h2UXr-ffC4A1t\Q(g'_1lKoWAiUljJG&cH6TqinqO7odVd2HSdetC\22__dF<p[%El4I&IBW.#49%7pd@P(_X.P,"XF9lnboA,"Q+F18!:r*i!]5WA^70#E_HLa:@slr(&ZdWJZ7Uk*GKpqT1P"9I4!OgD)+d!S&OY`>%H,=R(Ks_UL"h]k`5hG,nWGf6r@P[A/634@Ba+inQ*YUgOf-9t';3ira'JV1W4]spFK,142@ko:n&NeN/C%L=d`jEHJ<MAjG[VK-Y%^-ol(1dt)r>>;0g4fD_5j/\!X.>%o_S`le^r>C>KC(9VCVt+%#6^tt+Df5(c&>Q1Dbs\'t'ncLDh](g-?2'.Gl"lF:Np^S\>I=8c%U)MWfa.oX3gG%`LYNm5mDT[kI=Q=/S:G!$.U?^FD`YAo=]'@tN``7uu_20RtpAGTP%p$@1D3_CKCaL/c\B`CA#8_qfG%^KB[+0J*%'u7#i.B;gZh`Tu#guA$D(+UF?g,6g/eR,0t]]5Q(A#H2M\3QuKGBJ7I$rr_a@9_(5h`B9)/NXd-.D;'jeh!":AU)FV;sg222_UaU%5<9P<4ZITlE1+t[Gt2,-_VEtDA#G7^jiEq?4`&;fVckC5:>jS\BB[iMRatUU(\E%WGtXF_o$Yg3h6,3l#SPd9kFAL[:U8RN)9I68%H0WbU0GfTeB4(9JXL08?fqm07]\qRZiG@r-Y#BH2>@PoX>&!Brh!H0!_^jnFF1KK,.C0D(3tL5PBtr.AbhgKCe3*U<mJ%+MfZmT+%ah4^VV^N[jY.(u&>tkBjDduhC;qnBNUHN5NR;n&sCPn--D%[C;^5R5f9XgC7-VdS'AcR2$>1hmR+`T,+l;+O&*"lMuc@a9dPW!e'%2K_K31CFQRHJH_2)bJ2`VcGfQ?/NmXTS!V:.;3U!GF"F?LT!i:aO%k)$IGn&bGLV5r3WC[XLn(PbG)n9qQdK0r'F,"?WgQ`OP?Fu%j2CqO"Jhl8SsDF/^>)hK\B6sNYF%8PF8^<[%-C.^f_Z@Q?[K_!T5p\f]^[mB6[-Bj75^6DGaW`Ak:&@68[Ne<@c*;f!u8H$Dcuru%fD6pT?t@r<MC,D+*;0qI]<gK:lc$NLQN"5M>T=m`pm='U`+Fp-b58d=^feP88*2$hH)lT9FOqHJgc=mZg9L4_^<SPjCRj9DA;BU5%F,[-;55Pru4q`a&Hc4n2Vo>bWkKQ;BKk,W+=U]:%RsQHFY8XI;YB(0^6aG4V<"!TK@o$mq1aGGg^:INci*)bLJ04@sV4>PHY$=R"%]rj3cQp6#^]isnXe=g1WQ@"U.Djg+rbj-%87;I%J$S[K>)3/0t[64(PRWgB>UmU=n3kd"CN'0-#lRNd[ZOTum%9Nd)>6@EE%Z+,8%(f_$<96N?b'd.?&@"1;l:DG!h%A<6E6iU/:Zo*@^C-?MNTP:C8GaR&E=FX>$Zo*Aq@Y7__lL]1b)s/%h^K#fk21V-V4AZcc_iX_0%!0-l@GWbq,%=]fKrJbX2>fp]pjYpMgf,%H^/XQ$Rh8hLC9DNPOLqA3nr2"dlOH!7"nk8fTmmm?tQh!/oO$(QXq5E_b*9L-_@oNI=%8oPc78g:Ie@-:bmL-HXB?kd6@;;UV/FZ.arp\Gb()o:3(:A=V\b>T>O?9e0gr<>;%b3!"ppSa1e-gq"@5PrF_H8a7Qp\K0=jAF^u%kFNQc7BVBXf?^L\CIA2/f3A1T+^Y7Ua*[d?;7"1n#/8^81m#FUr<Bb4`:dM%GD,<<<!TtccaFh@m8S.Q_GF=Vg7AI2^qG3b-\#iW%i^;SgkGm`$8;iJc?9e1gYce_=>jh9+GBIc/TEi!Yc`Tr>B>*9liu:;/]<?S[gnDMCs![=.F5Ke#:r=0JnD.913p=8+2Q!A1<^5X3%%*T:WqH;I41#M8/3j["RGm^>&lfVFF3g+jggi)l7<q;@HqRItY)_+a@]%9`]hm-IEQ?025^=U]%JB3<__7b:M][lo:7s#j1ME;O;%qtN:VPG>jQDlA$]1aog!j0tJPmp85F\d-Pt>M8JYIdWLa4Rlenp\Ho7n>lPZ`51`J.*QtBPN]u??MF<,ml-`B#R8&qcV/2V[lET"%I/]9cSF>JW!W-Q>q@.or+&*?2fBEbC\JkIMij2[]%X5+K.BqWPWunJ])ZF&-X]3I1?I>J8olE'5*7gMGHi;`<oc*bW-M:][+_,qb%p\Ib:]oM#W5PJC\I,Dt':_g-%>5$k>2g@'iiDr01014R]f,mUChWj9Gb*h.6rS5l6/6ZlJHi;_5SLcLlJa`9<R2<cCIdZC9dGO7K%Ghg_@1&j+,%Y!LNp\O-+bO/EGJ[5S5p\MG'#f@)o_qjYADAZjOFng=^g^@RkNBHjHIV'k-\,,dNA(2l/RIBfi2M/.Bj)L4sjh6+B%2U'PBqAEqOIfm`f]%2EsmI0^h<t;B5S0KP?`Hja`UE8jYCp]C!qhu'O\Phnk6q*$:"AbRU]C(OMQEis.C*IFehn@_"C)cKsEGS87%C<<7p,;#H?9_:^g1jU444OIUCf"Q-ppDKW)%VAc1O6;qpc%h)o_0W,Lq4m?U#d`$NM,s'!0j],iaD]ZPP@p449B!n]@eqn*m(FF;%k!"-+@HKkUo&/-CDCD+/fNU<rq)j^fIb`cb6=N%iX!E_r2j)"61(u;V@P@!;O3=*Z`K>-<?BUB0T3"\Vlhkm?3L9Uu><5"H=KcZ"%[,ddSk3')G),bXI_XYkCn]p,V^Jkb2YP7qkbJ!Y\qcN/M?<;CoeTPh;Q7f=P,-+MO1YgaJe`nKr\BEs^LM8+8=ufst_SWjX]Hii.%:?$T71\W/Z47Vn?WE*_9>2>'jY9SEL3D7NOIRKIH6OR3YQ^kt$ebq8A<+!4V=+!c?.VEV^:hs,t_YYU*05P;J[9Gbt,8MI-5e"?*%kCoP#EPrSl1bM@Xo'+r[?"nZ"WC6=c>jSRO=0KnK@3t.=.1Vp5XgMZZ0OO4GM/!Z9;Ya3>`6?D)jR8_LbU.\k_EIt-du9u6:62k&%:]k1ONXjf1kQ4;uHuf5!RX%#_gKRClgS_#6rr$[-[FF'S?)N_nG$cmq`uer8f8HUkTlRH-'U![n]=`NDY2%5`m_@6O`2c\^!PV*G%M-^&k@8Z(Pe*]\F7R=O(2,fK8Z'.5]^4'D5?/=k`?NBcJH3BQ&Y$hQb4+=4Q+,YnuQXF.:Eu3$\BKWRkI^)NoM@=/C2ShVs'ib3k%o#CFYi5*t_H3!Tj]`S2$M3&8>d<ps98cZ)Bb\D;QeB9N4mI.AsMslX1jl8/=7(:-HD4$CN8qu0Ce>+K#?>Qa<(P*-H--^)2aK&!:%s+X2(?1*djqbd:q5JQ`S+tl\nmDY8][_gUQrX@Z!Y4l5CXQcpI4Vn+u"%oWp9HR:YcHG!Qk6DQPKl\"F33Mg6QS[QlVn5"VB,$:*%cgkjB-I8do:L$YiK`U:D!_U*.+QWp&h<@KF_H?s]Hij+bHHDm7q"\Hq$iYFt7uo8dGjoQaF`i%KEt5oi"W]uL9_>b12Giaoo^W()%0AM8f;/()[rN3VTRGZ6-ITS'aTjB]7)S*f7eRW\5N3J_ti<;P86R;?c#ibD@i[gKGjEDF%;Kfgd25<cmJCb6'<`+_&<tVoHJ"BS?%dB+,3kUh?l\k.%]asUW)f[Zg&^5T(M]mR`%jl67ppiXoG88km5`,-mr3A=ZKM'p'<0a'h6g5g:X0oQN<nB[T&qX)<d6[h2_X6oq*%mRc$"7[AH(^OlsuZ7>-?\("jnA0D7HJ1LgoJ:oJF^k<tDRlU*'4Su8GX]gX:NI>HbSU:.uZ;fXcq^1D9]\V;3h@6(<oJd/+g?U$]%bPMqp?h,kR0$!TeMLKP"N+G:i6W\GMWTm`VY4Ji&K.FREhjO95IBGAI^@A0YFYpGPRG&[2f"&8c5$8sdGP\[&1]-+>cLg4Z2s-:f%rSt?mH\]?gFXAd1?3P4cm`>VngY)HnP/hFZ!4KlgrCqJK@jZR1H#(isRH<2l3&NRGJfSV@aj^"1&+m]Cn:4PPFW;LY42YG5$VROa%qDt_MZ9,C?C$+H?2Da3Ybij"4gDUK(5$2='noDTj"i9i\-Z8KDlpMLCJ,#r'I[Ur137\Ng5!Jtm=cS:6(usuYhS[ADp.X4&9MRK!%[FL,qiCc$#0;Hn:rE,#FIX?GSC\n3;)-S0P%#0aLL)@Fe3OntZPia)DH%E*a7@;iET$`d1.mG*#QK#/YBDoQ*Pitn(=/tYrdSTpQ%Xnn)?5FMJf]@5<?HUl@ZJ>H]Lr;K054EeGl*r3q.<9Wm1MT8N%!Yd:O9h.Vd?g"ll-S[[;]YRE[]C8Dr/[O&Q!N'c%4!H`[GPQ/C%fP*[6a);7&7MWmZJ>.+7p&8^)1h+Y@)aN.qOJ1925;+pMo!CH3T-=``:U;)H;EMR7M&u61(n>h5g'oJ!UCd@hd9g._nV"M66c*!G%&+=@a!ZNUib'uVn?\rS0A6us2GNeKDj58tdi"%n1ij+'MqYU!P0H*I+EI:oVGWFmBo<A'O](<s#S7$(L(=hu_ISkLoKR;EQ;_6&I%SD*b!h_GQ;oUjAt"i"R(&[>8^+3%hVKTB3V@IQ;f:P=SDh;^Xg!n^4<!r\LS+i0`s!Q6[H#lJ5N'4EgF6Kug@hooA@+uGD>i:1S,%61XP-;diB,N7;8M/o$$scZMXS+[JN%s.OKgqqR:kC16;#NQ4_cg)pXs2>(.WD`]3L*HD&J^*gaPSoUL!nTPe@Nh:WS;K!939nA;0%8DNZjim["NHe?*]FdQT6*+&B5;Yk<NpI+Oo-uOQ9IPR]U'\a">dB?6In!DS!-QS_k<-H[&rol-amfe&_\p/Kt5]G,E4W'%cCnIlu%3#"GeKHOTL[<!$g\+Aj9.(0dC5$n6$>-'riT+*4l>N\As=SJ['"O/^q]ecIC]fR<>`ca!"AZUd)b?,Y$iRQ8nFLUKO?NX4"QE`nO%SDFao:,kla`QnIDT2VIu%m,PXbNHQ@^W5!kp)mo[3t'O%F$!`YY49b`33<p33(s:l356L3(rb1USZ<oVA*<P\cTRrhpRrP<GOPNI%&,c8;+m;%5pN<P#OUi!"&?;Tj*-O!)pL*9P]lsK*^A`^\'bHmA%r3a-cYr[L6Nq7.p-a\&K;j*<&%A+(N#g`f'E3H&s/rF!@7#;3%F:.=JBdqJk]/S'#%PT?,$dubAHY8smDQD[J[3JC0]^T?:-]Kpbm.TZ^^WsD!HM)jh1iDk?8;/E?'uiXDB?&EolXH[]k/^>sb10X%%k51B*IJ76fV5n(\jioG+_Yc7*3RHkSr*_)Q@;Y;Ns"L3tBT:];p9Lk$BssDqT(jC0nAEDc,p)+>A-gp25BI^VSu*SP(L&m3a8Vu-%;ZbD-B<e<X>Fep:in%tCEuqddF;)E,KX_OgVN<JNL/.+!?M;`dGP[SjV?L)`B]]W`,oa/pcdC2X8=^3%n(H@EBTo+-[^prGAiMe*%,;>7+3tmpSSj%LSX$"7s9K!^$7jjL^n#mi3^:*\)7;%N._1!;HYrFBl<h/b`i"N07O%U>UnEDs04u$rV4n0@*jN[P7m`O]uFY^^S%Hgf_\h;e/F:W983bWk"Q4nFr>S\;sCiC%YWV5K^tQM77Y_3[%qZ17I8ed;5#^jZ!'!^ACeY4$Mpl2j0rqNK3fh@"tqq4k81^@#0`%qa[+F]3\ifA,e!>2LHGAS(l2*')o+WH;E_l\dJ1e1hSO3J`V;_.W5c%g]Dp"H$O2hi`<*b>HKDo%:.b@<IS92)S3H?];"osSSMe>%cItn+5I6ighn)s.Y.gHS4)[p(*joVC?SJp:IXJDJea:*<ro[nXiop*;H[aFmfUeYk>(#j,aeeFQ`GrAhk>LB-bhMS8].I4m$bMUV%$CObRV;Lm0e()(":C`\>O*B`<qO)?/5Mf^iVSE,8g)B9N*CXI?3rR^!k0$u"n^Zr>r46C.P\F1Lp;h@?Hh-T&pM/[\q:)IQpEfdh%eV*kDgQa.gZ01Ql\sq#XY>64cY0QLM>hWJ4\+OS2-GFF6/Sn,r)Sn`$[\hqr9>llu$S(qg=mdl@g!96.ZY--l4LK1l24j7orp[9N%1S5Y2VI+aR[A@;=Kf1g-qg?OglCaWP]YEo7ErA<4H-<Prg%<D.S8MumUAX8H8De:<*V"A2X1tAENS@6YFL>&;YR:$\')rlklBM8D%E.#YTOKBS-$&dg;m>!X/=TBp<?)"Q+nC(]C>ph,#l].n[<S*'_4e9<6;>P'L0<2/gV5n#Lm7#QJU.3Ki.eTP$n<rG[7bN^"lU9F9%BS='t\kWsb4cZre<S*)55&5hbW&c_eee1&;?qh]o[\7H\9XOuQm%SXh4b=/CZ\q9j)at"3fgXY%gX$t>Af%Rdnd%9Qc2B#^H"f29%H3^I\s(&$7L@.;apRb.94a[L7\c64:;o<gPReolHG!Aq2Wk&.?B5E=j5W/;.>%=>l5W..aY^SQh%TINLM;H9:>R.93%d6&-_f_W@%qbKN&D5[qDZRi[8&Vf[<2'Xf&)864'gjelu3FiAp=f.)tMI5g;2><`M[2_I;WgT)7]3k_aTUPaRp@$rMh16JJ`qnsc2><_tQEbYs%6d&U3*N8-";b\(pQT@sXfP)A1"4c1V.X&XW]`U-:([P3a:sJqd9<k0P:sGdeFhrO;"4c1VK)B1**N206?pf+1Reom/G/8X]Ja0!<%2M)FgYh$+p%TINLC$71:m6EQ'T3AB.<9ZY2(oRPegj_))jmX:hk5H#l$kh<fi`=9@K>LeH_%"P%6.o^b3=:3`F=?;&K">:@!*a_.%TsLk?jcsIW6,bEXH"EBn=*m3JD%PKf[9<7:p?]qkfM$U\1>'`-f2])[d'LGGV$gqEd'N^\`[.UnP;WeR?].Tp%GuXF?T2JRrYbWT%X?3QM*t6lal.bgNp7:V?'=M;Uo0W%h.]a?P]SZ81ab!.7U[I!Wmu(Q%jYmS)eQl06qIuQbYIk:&ZM0p7fmtj.i@E3KmVKps1#7<L%E,g@(rhD-)?aH(`k24IV^Gi"!Ko_FE7Xc_F559<HgOra/+a4IKVLofRJLs,.DORICn>Z-goBG2Y4&^[)dL]d<9igf;U)afAa"R'4%bLj]GBkhF\6@69al/s'fE6_fRcp%R!q/Q!TW6:bRn=[!$<.n%CKW?3^8pcj7nQh]S;-D.+Jb[#]dHsgF:<1p=Cn^14l',-5]k^P,%s)r&R^9=&6]4-!V5ej>Q(4N*Id!pjC<u%;Mi8Kpdd"#SPrIoUT`C@K0aYS<)@&-Fq=;BOIb$P+tqeGJeOnW)=1[K2Rjg`TuflVW@%`V57LEFI=SA%j8ede7RV[om8<b]DILe\s2>o>cOlqc^)%?J8SKHd;DRf?"u\Gb3[#d)(<'s"s30?Am8:AtEGIC:`f*>lT#Noa!tN%"_7GUc]>sb;ep1X+C!ZkgE1ZkggB9:Hok[spq(n'@Vt^D%0*SUd`un2IkE$pQO$hXClL(hI)!>][`(X]mCY<b5<F@;Zh3YKk1dlN%_:@H1LC!bGC2Nje;YsnW?G$db5AH7sG2dq[*.FBmcIP0qEPE6tkM^n4rdr\`J&%s@Xk7LlTRXkGhr)Bo!;``Jg993P5KE/$]OA.3%8f!7gY]_ABLiJ]hcNpB\)'t0>[T$DJ70\i9O&EV_``\PlCE2E6-+Jgf_)T8o<0T(^LgTVLj^Dkh7Oh'c*`:'>+qh8QLE*`"VEE(@%g``\hm\mO4fSV7p(;9jd`ja:?&'hc,m?=T'j)<R9jQV?2J/E#">rZOQO[Lsb\VA?'Dgm=fV1l8,n$(6W67\(*pqHrno_r7tqeuOZ%Cr-W2NT1F8-;l$`o,Kr).[NI6=6EdS!An5ZSRlbhTE_Vq^qiGHf.!"RMC[6nR>Q7+"g@u?_-i%Jign_&D2XoQ9!Yh+Z7LlS@*d^^%OT8FJ!JWFl(nbao.KL_?^fHajG``5A13'u$YZ(q]I1AqEE`cED=*SU26;2J4?m9DHP<:3pRW-G<LWMo8ofPo&\1`s^a=)u;QmZhi%%S)l$':)($b*YA!-M%AlMcmtYces%f`.4^M";)q/KDRo9A1fW3TIc6kU'/Q(!Js'g'pBb<aq?:[FY[2U"j/I+&=03/`_>nN@BjXP%!=W(m.1%[G`DWOOIL[H-m7a?&/b0J*+\s?.PR=Q+Z+VVSIL-lWL`us(>n_4@Zj@D,bNh.oBW]FP$l"G(+ql7r"JPJoQEhoNEMdFr%5X#/e0HfIo!>L\*&"FqC!`FiMW^uM\$T/Ra<[>!g)%`_O98!E\'85u\/gh<6WsiB;OurmXA9_om?6mf;!/$8bdW-:u%(6F^cLM*;%-;L9pX&YmbQ4O[fPWjS7FA@A%VD8Ci!$1'EP.0>V6la+d"i*MITiMFa+@3UBO)b`b'KNBL"uT>IoG[cL@UM<>/<TWS9%ft=%_N)@%VUh)mcNm?]Su@%24hGiXp$M[Q4he-SIg"VEoA\m4Y77$/;-u(d+'P;,0p/Mu0mO*uJ?/e]7O&>C@e^7T@gJbJ+i":)1R'0g(Rbo,%'eBkuO^nVr<#B57RY=G;T`i^LY6%\Y?6iMr"kYpk#U#WtX0G,bGRh;-;h>=*Q*Ef;+JCE4Dob6EPsS(&5S1:l163[u%5:5\%WGdZ%"G^1a&-s\"j9-!3jeP5[#50AULa:W^51utNOp6`.J_I+bYGB\W(b(%6$$q^Bb]KF'(`g[C[C.\`?tWkR,SCuVJp,)`dPGGXTK&7G%&d1HF)4FR0.NEVnJk7heoU04!c`^tVXm^la"ldZ-+HSj!$%rPYA'>8m'ht;eOT::gA"Y/P;;d8Q0`K4S]LW7iisaM"EL5VVl7BJV%@'Vc[49ac5B+T@hJddpt>D&q?K):c\$*"[Wq#j'_$8icI$EJfa;0#Kubsa*JhVghb0ehELKV;-%6*#<Jcq^AVfAm!+Q`!.X@)u;E%cdWTniMro&'TW]X'(,j*lAnQ1s0$FZ46SrgCJp0O*TU!84!8/UN1to+JYrY=eaf`W;8`(NEBUGuntRtDi0P*o<$<cJASkC;7MTAW%TcklO<-[_t`dsVq\.>AT@ijQRPY6*8M7$Pq-@8-fB^Z:/&L`e&&EYYq[,hGa-/-!e)%.I5!7,c""./1rCa)+J0b'L]\=BH.73k.]%"MGtg/;=dnE<YR/%Q+q?&U4=\JbTUA$;;8U[m30"ohJV07Y`c\WC89?bFoHE*Ag/s=Y([b"]J=b`[`+Mp`O:!&0e-9Ecb=tC`W!_%31&b6"(,sDBs--Y3;.@sG#+Uc9ZWC=2-VP4>g$A+Jj3\HAl;&#W_u_U^Xc(eXtdkLpslF'VfnV/;:l?o"M>U+f;WCd;;sEOSN]be%0[ECQWHXF>b!8NlE9Ce92K5!kn-Ne)oq>N_1uf3fBdkNQbeTbn99U2J>r9!oq$_<MA2AJFPh><`>DG\f;s:/bLIU>tSDa+L@No3<%@9mVNQ^51_2&C<F8=>W+j0Y^Ps/NJi"n'kgY!dK6>qSV;>.lZHnno=]Ll*@[USEru1G3!P4@=<"1&rDLJDe!n&?Cq4XTZKj6!?/\%blNu=DVD9M"_l<36F<3f&CP%!*d`>_Ys3>mTA&nsTe"MVEt%%&?BGZ2)BG8;Ca-ntS>EN;a,Otr@;ZKiJ;_lS"IfuKbdpHp0Wp_/%I(CKEa"X42oGYQE:pPYGL(SF\(ILnoXH/gm+OufFJP@QR-E(AX^(U.B,:X*Ni"VP"Ej!l$i",V7&>G,Xq"lbIG3TA$(ApYY%Npk(%8F>4&5+_'?(fDH>N]ZThQY3R<dfqpb8$[(ARak*-!FgYj`QKVjJo&+J;_j0IEn(t)+O^Fl6Hg9RTHOQ/jd<iW9o$XMap!N.E>B?5%W1P9/qb.<K0sh)k[iOM;4bOb%AF<*pXF^Sj]0'tb"A0iFoBR%mc!?ipGC`VNV$o)*Lg.Q5[S]mR;%iKR+@eU'@:3sUf&o:Y+eAZ6%1E%++f$%3$Q-N3+GZA!<'UMk<gH8/]''=G(8!I&?UEV@.b$QGFR*)<o\j6IXd4^A07$P73+VBLF<=*Lm(mrK)!O1'$&E*"TVE=ib%%'6=ZZq*h'3!?HGgkppn5XpjYbh]+6&g/Ng$$ar&EN@Q*G)LU;a"9!j6O2kBf9!(>4^)bi!O'P[(pUg9,V]&Bab_X*6C^V$#r.Yu%=/@rG%fjaRBF0uom$\J7=',%;.:6/@&3V:@0VPO,.q9b/X[b(W.?B;Y>s;P4Z43%f"_ASQ[Lt/)6ue(j$UD%]R,;=\A8VChX<k/Z%+k9DoYr`^gW=X_iO0fqg!itY\G>UXK$7jJ)[fsVkMCStG_FQ(BOpYY=6]?:+BG4!&`k3Sf"EB<-D[Z4E*.Fu"W)'oobX6eF[H=G:%kS"*#O>nV=5'_tAAT49J$m)q]q";gClV00kN?f(K^T%\H5fF#o/;.0$#8rHEPFZ+j@RG&t;kSr,alt!H5u]Ga#;BZ9#nO'f`b7*A%-$L)@gZ#3&XiYSmO>p_r9(4A>":_st+q>p=5XZ_LF;o3@;O7ZpC2W)7ldm!2W&3N[0c8fH4ALh/@;IJ^j;(#H]=Y_o&8EHeR!uU-%SMjHmesg7hr2r:Wqbp63El/*P[?&-:@:8Oh=T:3l26)Y@isl^ois:qglg+'0EmMlqYc@sM;.,!VA/UH00'6Sk9-05QG3*O77+784%s$tc_o<j;%;O*Y+RpW(r&tR0c\N99V[4c7SD8if)P#eS#8;XG\`T$"El^;Wtb'rWZI),S/DRs'Z2d(3uT\tYn70fWY#YKtB>uO[$%D,]CYqsGpRe\58jiN.b%;t2?*24R$B@o?`Ar;W6e2]Q;"H:Lu<:lMY5X7D@.MCM#:[G>9m(mp!gWSP/(\d#Us/"O8+1COud<lOEA%j:t8-91fr@@]%RmP(EO<=]j#8>0W=eo\[@67jAE;9Rin`WgoW>Zn70/*dBkFeRDIaJUW6Z=0U=UVjHM"QAHKrVH7'T#Id^c-W21q%?[7-\H,MF&LMji_XAk[j\g#:&Vp1LR$>($>Y0-$4ce_4>T.e?\&0p43o6uRFrj8rV5H5aSaaC9!1bVk%WEJ%JTn.#FXUb'gjp:DK%1D%S2g/"8^mFC^g@G/7n*dd6eT\uqt8&b$Z0:'r]jk)iqWRCdiNW.9q7s4$jC]J5c^J`B:[<#(Xs4Uu5WgT>m.Q,I1F$6:L8G%t'%(!S\0W*r`-_)2^)*NFk9_&u*G,O^,BSp3JD+197"R^e!04H(c,Ct_^bHRXj.bC7^h?ib2:\aRq>ioLYM^ZK?WK3t$KWt)NH(/GIF%+[8Jgkh'/EKr6_Yq5J8'",eF:]l*D11Md^Q):""im=R)._FP21ZP"Ge#V06tjCYtd(-hN[f*[8MrJj"an(Jqb*j)X)nA/bTrVlf,%g$f+lGKl<#-ZUo5ATI-`a=JL>,>qF*ahVhGTi)$21):WF*?P)@M#8jCB>#@AGAJNI<;Q@dnM%^jO/[F\X9Wa-3"l,['$Q>0F,l73%E86ma6NbslLMR3BT,u!o#T@.r#jm4ODJYaq\^>.qNs;h&=8j\aF,-`@^4'UX2977n%[9jZ:@`+]#P'nA?oCr0$o/8b4Y5':1o3_T%YZ\-?B[TFJYc#GU_bpFR+&-]LN&-uC8Yr"fd"ifaO-51>E/K0UN0%JU,*rnej>-*"`o'^A8WKL[Yq-8uE\*K<DXuJ<*)!OVN-Dgi%*1`)/a&nkaZ^Ka1_9SiAcg/HWWoV''\6EGLD0Eth8HOmlATq-HrpNO.S%\>KN.6]--Mf&1]D0$T2h2AQ3N/&T^D>55;E]!MT'kH`%<c&f2-REFS6(#F,eMUGt3C#>^#@1WQib>W7YZ=1*B\-9c.TH=)L;(h\UhsfI/5*6[mA>3?&1*184#9ZB#cgd5h9^?I.?;7*L;%@b%)Z&S/,=\1^F$nh)HtNYroL%ML&lk6UE9`o?\-8rN];]]i9AhuD-TKp8Bou^2_QSW.8&id;Or,`/:;;*R;tW4kT?9dSb%5BbkD$^O%eGNC&^<Np:4#TJ7TV1#Wj=)gkC5,>Sc*]^:ZG%e0`FJ5-De#n*B<=H5N(!tGn78[Vq[V\6$5?1DMeJHQUaDHo(A]eh%ji9n3i5q\%?P8FT#uO7<s-`+jg)AM&M:$M7fCRZ3PA6(ed=_QIN57hKg<?F>R1e<1k8^>dj?US">UcH,E:UKPJRG!':7f)^E9"Dr0WSra.ZpFB%ohsnK_nAnBe?U]mW&Q$^B_'X`LK>r#Y7HDT9P%,+ba,_E4+$O!KE6kCW[]9jo7r(KO'$aGTi(_KSarb8CS5q>9Ii.DZskHVE%o=)%O/Q]](^`N"7c<hE-3*qkn<.bV(s;UeSM01DMEHoKC9FH@$]?O(ECl\3i_#':3mo^b'$G'dDTEI__QNE!:7#S1NG$NRFoKI/]2gPT%NP(p@"SBuVbiY[S`gEkt^pOY#kpkXl9)^?IiFX#qL8b\<e:k6Z+JLmGE/^uVL0ooM9dDUtAgn_cOc47\#]b=Hhl#G0J2\]D3#Ys-%SoHoOWM.*="Gp+BWes9"QD9u\s0]E+k-BV8hK=FBYi[]k/J\nrVOl.:FmudFLT%2n6$r0(<Qc[G7>G[MG)<qfl']]1dGY'>%IQ!*%n[qP0#*p\ha0>[K$kYNE)N&+Y]]F,en/FXZ=K]3Z&,b_)4DH\/)m&H-\4%t>dS2^*)5gVfQlpkJo#X?Yi2sW4.[2:k0nX[X#P;d;%r+MZtUAakY_Vkn;!.RR<7$/28J3+ahNY2tZ['YXmPgVbN-)uVcPufsKMo[&@`FkK-,!ZDYWPVg+!+Ir"gujI'3HuK6%&N,5:NV=-%!W\pChU"%pg`+N\A0G[un]Uga4ECV[G*k?nhMQ1CE$H:`%W&Kok2nD.!N&L"(<.Ms1"hPWRgoEt@3q9]_'VRMCn-)cD@RgUJpoqo%.OejO#d$TN].&f^n%3VO&WJ=T5PucU1!P\g&n;7-f^FSP8OhJ8-pcXI.,@@FUkIN_S'hKHicZ3rk7iHN3sb5HFLi%n/ON?>EG5Ht%4fJJMf]6uMBatJRka@JW[F$1(PuTM<I9HWW&#'UZ<`tHSBVA/rX*>LZq/di">:)l"KoOlBj-bIs5\fL@i]]@O2muD/bXmfgFl@2q%&6UVPj::0.i,8-A6`Ahn1+hrOU2m[SN@e'[87Tj"5'WGR+autL+Om1o?s1n(plXV[oV=1^=[0L?=\+U0!-uPBd[iQFg3<@7s"f;N%V&Ca@%])uMjf-N(if(GojcXE=ZThf`jfDafh'Qh^fcJu1Ek-gAju\X=;Cp#r//I4oWXYl4<_`SZWT8,29hQ5H1)%L[/2K$"V<$0m%e#6lHX-qo!5F`%?C;-GmDJ)6Gcr8@O!F9]?XsdF$>fs-R;qnB%e#8"iS"'2JWMGdeBqlb`Y"J%`X/;.cDRS+RA1MNO8nYW5N=EoF%BJ-kGY%RcBpMcqWd/siAeX;+ulW.e:=_D8k[$+BZf]r99[Jmk^qEYq/.#oMlE,=7Qcaqe@3fRT5FV<H0G++_3Vpp\Hh2kjC#5)Xs%W7:3I+FXd,T/uStX.u/="ku=ZbWq:ro8\]^hm?AXm?;#^mAF"ZHV?0TV(%-Sa6LR#E]MhfIT%^uf:K*6e(eV5WTB=9fC9]69#Krm%0+BCjm.lOMYX*Jd1/Vq(X-@caO<ken+D]b0Yt'L0.eK\9eGR,a`&c)oUC!&`RLjo<Cj=]:R:%45o2AD:nEeaRJGX_6:4KGup(R(k%hQ_FS'H_.K-,IeJ\t67Krb.IM&3G/ee-]T6!'@<98IC6p:[D9khM2WjE?8GO<\U@-l_TkP3D?gOo(bcJ@LE-3"':TN$YJ;hCu4%8%@/)EZAfcAN5VBkZEIuhu+n/2l*lcGD`!@$P3>Rg.Lr)L&)i"!kflWLN5;-Cg#d$TN^FP(rG$[AiL^:Ju@,B90r;9[3T7(=K2)_ml%E70/]Fn"dFpSr@VIILmYI;jXqpND&%0C=t(me+iD<O[DTp#7WX^b,!FZ*EJ1Q<X@oR(j>p~>%AI9_PrivateDataEnd